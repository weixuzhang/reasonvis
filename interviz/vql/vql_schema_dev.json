[
    [
        {
            "Natural Language Query": "Show a pie chart of the total votes received by each contestant.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "votes",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_name, count(*) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What about a bar chart showing the number of votes from each state?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal",
                        "axis": {
                            "labelAngle": -45
                        }
                    },
                    "y": {
                        "field": "votes",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now show a line chart of the number of votes for the contestant with the highest votes over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "contestant_number",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(*) FROM votes WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY count(*) DESC LIMIT 1) GROUP BY created",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of vote counts for each contestant",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_name",
                        "type": "ordinal",
                        "title": "Contestant Name"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_name, count(*) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a pie chart of vote distribution among states",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "state",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal",
                        "legend": {
                            "title": "State"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart of vote counts over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal",
                        "title": "Time"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(*) FROM votes GROUP BY created",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What about the vote count for each contestant over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal",
                        "title": "Time"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal",
                        "legend": {
                            "title": "Contestant"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, contestant_name, count(*) FROM votes GROUP BY created, contestant_number",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes by state.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "state",
                        "type": "ordinal",
                        "title": "State"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Can I see a line chart showing the voting trends over time by state for contestant number 5?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal",
                        "title": "State"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, state, count(*) FROM votes WHERE contestant_number = 5 GROUP BY created, state",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Can we compare this with the voting trends for contestant number 7?.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal",
                        "title": "State"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, state, count(*) FROM votes WHERE contestant_number = 7 GROUP BY created, state",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Finally, can you show a pie chart of votes division by contestant?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "contestant_number",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal",
                        "title": "Contestant Number"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_number, count(*) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes per contestant",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "How many votes each state have casted? Show it in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show the trend of votes over time with a line chart, for the contestant who got the highest votes",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes WHERE contestant_number = (SELECT contestant_number FROM votes GROUP BY contestant_number ORDER BY count(vote_id) DESC LIMIT 1) GROUP BY created ORDER BY created",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of votes each state has casted",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now show me the top 5 states with the highest number of votes in a pie chart",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "vote_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) AS vote_count FROM votes GROUP BY state ORDER BY vote_count DESC LIMIT 5",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What about a comparison of votes for each contestant in those top 5 states?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "vote_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, contestant_number, count(vote_id) as vote_count FROM votes WHERE state IN (SELECT state FROM (SELECT state, count(vote_id) AS vote_count FROM votes GROUP BY state ORDER BY vote_count DESC LIMIT 5)) GROUP BY state, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "I'd like to see the voting trend over time for the contestant who got the most votes in these states",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "vote_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, contestant_number, count(vote_id) as vote_count FROM votes WHERE contestant_number = (SELECT contestant_number FROM (SELECT contestant_number, count(vote_id) as vote_count FROM votes WHERE state IN (SELECT state FROM (SELECT state, count(vote_id) AS vote_count FROM votes GROUP BY state ORDER BY vote_count DESC LIMIT 5)) GROUP BY contestant_number ORDER BY vote_count DESC LIMIT 1)) GROUP BY created, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the total votes for each contestant",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT COUNT(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Display a bar chart of total votes received per state",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, COUNT(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "How about the breakdown of votes for each contestant per state?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, contestant_number, COUNT(vote_id) FROM votes GROUP BY state, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes for each contestant.",
            "Vega-lite Code": "{\"mark\":\"bar\",\"encoding\":{\"x\":{\"field\":\"contestant_number\",\"type\":\"ordinal\"},\"y\":{\"aggregate\":\"count\",\"field\":\"vote_id\",\"type\":\"quantitative\"}}}",
            "VQL": "Visualize BAR SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart of how the votes change over time.",
            "Vega-lite Code": "{\"mark\":\"line\",\"encoding\":{\"x\":{\"field\":\"created\",\"type\":\"temporal\"},\"y\":{\"aggregate\":\"count\",\"field\":\"vote_id\",\"type\":\"quantitative\"}}}",
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes GROUP BY created",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now, show a pie chart of votes distribution by state.",
            "Vega-lite Code": "{\"mark\":\"arc\",\"encoding\":{\"theta\":{\"aggregate\":\"count\",\"field\":\"vote_id\",\"type\":\"quantitative\"}, \"color\":{\"field\":\"state\", \"type\":\"nominal\"}}}",
            "VQL": "Visualize ARC SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Lastly, display a scatter plot that shows a correlation between area_code and vote_id.",
            "Vega-lite Code": "{\"mark\":\"point\",\"encoding\":{\"x\":{\"field\":\"area_code\",\"type\":\"quantitative\"},\"y\":{\"field\":\"vote_id\",\"type\":\"quantitative\"}}}",
            "VQL": "Visualize POINT SELECT area_code, vote_id FROM voter_1",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total votes per state.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(vote_id) FROM votes GROUP BY state;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart tracking the votes over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes GROUP BY created;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a pie chart of the votes per contestant.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now, show a scatter chart of the number of votes per contestant by state.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT state, contestant_number, count(vote_id) FROM votes GROUP BY state, contestant_number;",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes per state.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now, break it down further. Show a stacked bar chart instead, with votes for each contestant in each state.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize STACKED_BAR SELECT state, contestant_number, count(vote_id) FROM votes GROUP BY state, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What about the total votes each contestant has received? Draw a pie chart to show this.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "To clarify, can we see a line chart showing votes over time for each contestant?",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, contestant_number, count(vote_id) FROM votes GROUP BY created, contestant_number",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total votes each contestant received.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "contestant_name",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_name, count(vote_id) FROM votes GROUP BY contestant_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Let's see a pie chart of the distribution of votes between states.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What\u2019s the distribution of votes for each contestant within each state?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, contestant_name, count(vote_id) FROM votes GROUP BY state, contestant_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Fetch a bar chart of votes for each contestant.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Number of Votes for each Contestant",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "contestant_name",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_name, count(*) FROM votes GROUP BY contestant_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now show a pie chart presenting the vote distribution between contestants from state 'CA'.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Votes Distribution for Contestants from CA",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_name, count(*) FROM votes WHERE state='CA' GROUP BY contestant_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a comparison in a line chart for the voting trend over time for the top contestant.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Voting Trend Over Time for Top Contestant",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(*) FROM votes WHERE contestant_name IN (SELECT Top 1 contestant_name FROM (SELECT contestant_name, COUNT(*) as count FROM votes GROUP BY contestant_name ORDER BY count DESC)) GROUP BY created",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of votes each state.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': { 'field': 'state', 'type': 'nominal' }, 'y': { 'aggregate': 'count', 'field': 'vote_id, 'type': 'quantitative' } } }",
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now, show a line chart of daily votes for a specific contestant number.",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': { 'field': 'created', 'type': 'temporal' }, 'y': { 'aggregate': 'count', 'field': 'vote_id', 'type': 'quantitative' }, 'color': { 'field': 'contestant_number', 'type': 'nominal' } } }",
            "VQL": "Visualize LINE SELECT created, count(*) FROM votes WHERE contestant_number = ? GROUP BY created",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Let's break it down further, can you show a pie chart representation of the vote distribution for this contestant among different states?",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': { 'field': 'state', 'aggregate': 'count', 'type': 'quantitative' }, 'color': { 'field': 'state', 'type': 'nominal' } } }",
            "VQL": "Visualize PIE SELECT state, count(*) FROM votes WHERE contestant_number = ? GROUP BY state",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total votes received by each contestant",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart of the number of votes over time for each contestant",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id), contestant_number FROM votes GROUP BY created, contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of votes each state contributed",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Compare the number of votes for each contestant based on different states using a scatter chart",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT state, contestant_number, count(vote_id) FROM votes GROUP BY state, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes received by each contestant.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now display a line chart of the vote count over time for the highest voted contestant from the previous query.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes WHERE contestant_number = '$HighVotedContestant' (from previous query) GROUP BY created, contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Let's change the previous line chart to a scatter chart to show individual votes over time for the top contestant.",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT created, vote_id FROM votes WHERE contestant_number = '$HighVotedContestant' (from previous query) GROUP BY created, vote_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Lastly, show a pie chart representing the votes distribution among the states for the top contestant.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count(vote_id)",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) FROM votes WHERE contestant_number = '$HighVotedContestant' (from previous query) GROUP BY state",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the total votes per state.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id"
                    },
                    "color": {
                        "field": "state",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now, show a bar chart of total votes per contestant.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_number, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Then, represent the votes per contestant for each state in a stacked bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize STACKED_BAR SELECT state, contestant_number, count(vote_id) FROM votes GROUP BY state, contestant_number",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Finally, plot a line chart of the vote creation time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal",
                        "timeUnit": "yearmonthdate"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes GROUP BY created",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes grouped by state",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "For the state with the highest vote, display which contestant got the most votes",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize CIRCLE SELECT contestant_number, count(vote_id) FROM votes WHERE state = {state with highest vote} GROUP BY contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart demonstrating vote development over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes GROUP BY created",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "For the state with the next highest vote, show a pie chart of the vote distribution among contestants",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT contestant_number, count(vote_id) FROM votes WHERE state = {state with second highest vote} GROUP BY contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of how many votes each contestant received.",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "contestsant_number",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "contestsant_number",
                        "type": "nominal"
                    },
                    "size": {
                        "field": "Vote_Count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_number, count(*) as Vote_Count FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of votes by state.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "Vote_Count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(*) as Vote_Count FROM votes GROUP BY state",
            "Context Dependency Type": "coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a scatter plot of the votes each contestant received by state.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "Vote_Count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT state, contestant_number, count(*) as Vote_Count FROM votes GROUP BY state, contestant_number",
            "Context Dependency Type": "coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of votes each contestant received.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_name, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show the total votes from each state.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(vote_id) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a pie chart of the votes shared by each contestant.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_name, count(vote_id) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line graph of vote trends over time.",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(vote_id) FROM votes GROUP BY created",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of votes per state.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal",
                        "title": "State"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Now show the breakdown of votes per contestant in the state with the most votes.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "nominal",
                        "title": "Contestant Number"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT contestant_number, count(*) FROM votes WHERE state = (SELECT state FROM (SELECT state, count(*) as vote_count FROM votes GROUP BY state ORDER BY vote_count DESC LIMIT 1)) GROUP BY contestant_number",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Which contestant overall has received the most votes?",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "contestant_number",
                        "type": "nominal",
                        "title": "Contestant Number"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Votes"
                    },
                    "size": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative",
                        "legend": {
                            "title": "Total Votes"
                        }
                    }
                }
            },
            "VQL": "Visualize CIRCLE SELECT contestant_number, count(*) FROM votes GROUP BY contestant_number ORDER BY count(*) DESC LIMIT 1",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the total votes each contestant received.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "contestant_number",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT contestant_name, count(*) FROM votes GROUP BY contestant_number",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of votes each state cast.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes GROUP BY state",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "What about just for the contestant who received the most votes?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "contestant_number",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.contestant_number === most_voted_contestant"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT state, count(*) FROM votes WHERE contestant_number == most_voted_contestant GROUP BY state",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        },
        {
            "Natural Language Query": "Show a line chart of the number of votes cast over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "created",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "vote_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT created, count(*) FROM votes GROUP BY created",
            "Context Dependency Type": "Independent",
            "Database Schema": " | voter_1 | area_code_state : area_code , state | contestants : contestant_number , contestant_name | votes : vote_id , phone_number , state , contestant_number , created"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of dog breeds.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_name, count(*) FROM breeds GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Can you show me a bar chart for the cost of treatment by breed?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "aggregate": "average",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breeds.breed_name, AVG(treatments.cost_of_treatment) FROM dogs JOIN breeds ON dogs.breed_code=breeds.breed_code JOIN treatments ON dogs.dog_id=treatments.dog_id GROUP BY breeds.breed_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Can you draw a scatter plot between weight of the dog and average cost of treatment for each breed?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "aggregate": "average",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT dogs.weight, AVG(treatments.cost_of_treatment), breeds.breed_name FROM dogs JOIN breeds ON dogs.breed_code=breeds.breed_code JOIN treatments ON dogs.dog_id=treatments.dog_id GROUP BY dogs.weight, breeds.breed_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Finally, can you show a line chart of the total cost of treatment over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "aggregate": "sum",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT treatments.date_of_treatment, SUM(treatments.cost_of_treatment) FROM treatments GROUP BY treatments.date_of_treatment",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of breeds across all dogs.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "breed_name",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_name, COUNT(*) FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What are the top 5 breeds with the most dogs in the kennel?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "breed_name",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, COUNT(*) AS count FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY count DESC LIMIT 5",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a line chart representing the trend of total treatment cost over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, SUM(cost_of_treatment) FROM treatments GROUP BY date_of_treatment ORDER BY date_of_treatment",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Which months have the highest total treatment costs?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "month",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT MONTH(date_of_treatment) AS month, SUM(cost_of_treatment) FROM treatments GROUP BY month ORDER BY SUM(cost_of_treatment) DESC",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of dogs grouped by their breed",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "breed_code"
                    },
                    "color": {
                        "field": "breed_code"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_code, COUNT(*) FROM dogs GROUP BY breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now, show a bar chart of these dog breeds grouped by their size",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "breed_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_code"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT size_code, breed_code, COUNT(*) FROM dogs GROUP BY size_code, breed_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "And for these dogs, what are their treatment costs represented as a line chart over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, avg(cost_of_treatment) FROM treatments GROUP BY date_of_treatment",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Lastly, display a scatter chart of these treatment costs vs the dogs' weight",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT weight, cost_of_treatment FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of dogs grouped by their breed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_code, COUNT(*) FROM dogs GROUP BY breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now, create a line chart to show the average age of dogs of each breed.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT breed_code, AVG(age) FROM dogs GROUP BY breed_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Can you plot a scatter chart to represent the weight of each dog in relation to their age?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT age, weight FROM dogs",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Lastly, provide a pie chart depicting the percentage of treatments administered by each professional.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "professional_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "professional_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT professional_id, COUNT(*) FROM treatments GROUP BY professional_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of each breed currently in the kennels in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "breed_name",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "field": "Count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, COUNT(*) FROM dogs WHERE date_departed IS NULL GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show the number of each size of dogs currently in the kennels in a pie chart",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description, count(*) FROM sizes JOIN dogs ON sizes.size_code = dogs.size_code WHERE date_departed IS NULL GROUP BY size_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What is the average cost of treatments done by each professional in line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "professional_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "Average Cost",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT professionals.professional_id, AVG(cost_of_treatment) FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show the scatter chart of age and weight of the dogs",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, weight FROM dogs",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the total cost of treatments for each dog breed through a bar chart",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Total cost of treatments by breed",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breeds.breed_name",
                        "type": "nominal",
                        "title": "Breed"
                    },
                    "y": {
                        "field": "total_cost",
                        "type": "quantitative",
                        "title": "Total Cost of Treatment"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breeds.breed_name, SUM(treatments.cost_of_treatment) as total_cost FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY breeds.breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "How about showing the count of each dog size in a pie chart?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Count of each dog size",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "sizes.size_description",
                        "type": "quantitative",
                        "title": "Count"
                    },
                    "color": {
                        "field": "sizes.size_description",
                        "type": "nominal",
                        "title": "Size"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT sizes.size_description, COUNT(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code GROUP BY sizes.size_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Can you tell me the cost of treatments over time using a line chart?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Cost of treatments over time",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "treatments.date_of_treatment",
                        "type": "ordinal",
                        "timeUnit": "yearmonthdate",
                        "title": "Date"
                    },
                    "y": {
                        "field": "treatments.cost_of_treatment",
                        "type": "quantitative",
                        "title": "Cost of Treatment"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT treatments.date_of_treatment, treatments.cost_of_treatment FROM treatments ORDER BY treatments.date_of_treatment",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of dogs distributed by size",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "size_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Count(*) FROM dogs GROUP BY size_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show a bar chart of the number of dogs for each breed in the same size category as previously mentioned",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_code, Count(*) FROM dogs WHERE size_code = PREVIOUS(size_code) GROUP BY breed_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What is the average weight of dogs for each breed in the earlier specified size category",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_code, AVG(weight) FROM dogs WHERE size_code = PREVIOUS(size_code) GROUP BY breed_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Plot a scatter chart showing the correlation of age and weight of dogs for each breed in the specific size group",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, weight FROM dogs WHERE size_code = PREVIOUS(size_code)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the different breeds of dogs in the kennel",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, count(*) FROM breeds GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "How about a pie chart of the number of dogs for each size?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "size_description",
                        "type": "quantitative",
                        "stack": true
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description, count(*) FROM sizes GROUP BY size_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Compare the total cost of each treatment type using a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "treatment_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT treatment_type_description, sum(cost_of_treatment) FROM treatment_types GROUP BY treatment_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Lastly, show the number of dogs treated by each professional using a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "first_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "dog_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT first_name, count(dog_id) FROM professionals GROUP BY first_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart showing the number of dogs by breed",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number_of_dogs",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, count(*) as number_of_dogs FROM dogs JOIN breeds on dogs.breed_code = breeds.breed_code GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show only the top 5 breeds",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number_of_dogs",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "window": [
                            {
                                "op": "rank",
                                "as": "rank"
                            }
                        ],
                        "sort": [
                            {
                                "field": "number_of_dogs",
                                "order": "descending"
                            }
                        ]
                    },
                    {
                        "filter": "(datum.rank <= 5)"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT breed_name, count(*) as number_of_dogs FROM dogs JOIN breeds on dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY number_of_dogs DESC LIMIT 5",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Between those breeds, divide them by gender",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number_of_dogs",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "window": [
                            {
                                "op": "rank",
                                "as": "rank"
                            }
                        ],
                        "sort": [
                            {
                                "field": "number_of_dogs",
                                "order": "descending"
                            }
                        ]
                    },
                    {
                        "filter": "(datum.rank <= 5)"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT breed_name, gender, count(*) as number_of_dogs FROM dogs JOIN breeds on dogs.breed_code = breeds.breed_code WHERE breed_name IN (SELECT breed_name FROM dogs JOIN breeds on dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY count(*) DESC LIMIT 5) GROUP BY breed_name, gender",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of sizes among those dogs.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "number_of_dogs",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description, count(*) as number_of_dogs FROM dogs JOIN sizes on dogs.size_code = sizes.size_code WHERE breed_name IN (SELECT breed_name FROM dogs JOIN breeds on dogs.breed_code = breeds.breed_code GROUP BY breed_name ORDER BY count(*) DESC LIMIT 5) GROUP BY size_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show the count of dogs by their breed in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "dog_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, count(dog_id) FROM dogs JOIN breeds USING(breed_code) GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show the count of dogs by their size in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "dog_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description, count(dog_id) FROM dogs JOIN sizes USING(size_code) GROUP BY size_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show the total treatment cost for each type of treatment in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "treatment_type_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT treatment_type_description, sum(cost_of_treatment) FROM treatments JOIN treatment_types USING(treatment_type_code) GROUP BY treatment_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What about the average cost for each type of treatment?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "treatment_type_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT treatment_type_description, average(cost_of_treatment) FROM treatments JOIN treatment_types USING(treatment_type_code) GROUP BY treatment_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of dogs grouped by their size.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT size_description, count(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code GROUP BY size_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now, break it down further by their breed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT size_description, breed_name, count(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY size_description, breed_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "How about the cost of treatments for each size and breed?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT size_description, breed_name, sum(cost_of_treatment) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code JOIN breeds ON dogs.breed_code = breeds.breed_code JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY size_description, breed_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a scatter chart of the weight and age of dogs grouped by their size.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT weight, age, sizes.size_description FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code GROUP BY weight, age, size_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of dogs grouped by their breed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal",
                        "title": "Breed"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of dogs"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breeds.breed_name, count(*) FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breeds.breed_name.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now compare it with the number of dogs grouped by their size.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_description",
                        "type": "nominal",
                        "title": "Size"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of dogs"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sizes.size_description, count(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code GROUP BY sizes.size_description.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show the number of treatments done by each professional as a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "professional_id",
                        "type": "nominal",
                        "title": "Professional ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Treatments"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT professionals.professional_id, count(*) FROM treatments JOIN professionals ON treatments.professional_id = professionals.professional_id GROUP BY professionals.professional_id.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Among the treatments, I want to know how many of each type were performed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "treatment_type_description",
                        "type": "nominal",
                        "title": "Treatment Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Treatments"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT treatment_types.treatment_type_description, count(*) FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code GROUP BY treatment_types.treatment_type_description.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the different dog breeds in the kennel",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_name FROM dogs GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show me the percentage distribution of dogs by their sizes",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "size_description",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description FROM dogs JOIN sizes ON dogs.size_code=sizes.size_code GROUP BY size_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Can we also visualize the number of treatments given out by different professionals?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "first_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "treatment_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "first_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT professionals.first_name, COUNT(treatments.treatment_id) FROM treatments JOIN professionals ON treatments.professional_id=professionals.professional_id GROUP BY professionals.first_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Finally, could we see a line chart showcasing the trend in total treatment costs over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, SUM(cost_of_treatment) FROM treatments GROUP BY date_of_treatment ORDER BY date_of_treatment",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of dogs grouped by their breed.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "breed_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Breed_code, Count(*) FROM Dogs GROUP BY Breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What about grouped by their size?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "size_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "size_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Size_code, Count(*) FROM Dogs GROUP BY Size_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now let's see a bar chart showing the total treatment cost for every breed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Breeds.breed_code, Sum(treatments.cost_of_treatment) FROM dogs JOIN breeds ON dogs.breed_code=breeds.breed_code JOIN treatments ON dogs.dog_id=treatments.dog_id GROUP BY breeds.breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "And which breed has the highest cost?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                },
                "sort": "-y"
            },
            "VQL": "Visualize BAR SELECT Breeds.breed_code, Sum(treatments.cost_of_treatment) FROM dogs JOIN breeds ON dogs.breed_code=breeds.breed_code JOIN treatments ON dogs.dog_id=treatments.dog_id GROUP BY breeds.breed_code ORDER BY SUM(treatments.cost_of_treatment) DESC LIMIT 1",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of dogs grouped by their breed",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, count(*) FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Then show a pie chart of the total treatment cost for each breed",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "cost_of_treatment",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_name, sum(cost_of_treatment) FROM treatments JOIN dogs ON treatments.dog_id = dogs.dog_id JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Additionally, show a scatter chart of dogs' weights against their ages, separated by gender",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, weight, gender FROM dogs",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Finally, show a line chart of the number of dogs arriving each year",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_arrived",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_arrived), count(*) FROM dogs GROUP BY YEAR(date_arrived)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of different dog breeds.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "breed_name",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "breed_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT breed_name, count(*) FROM dogs GROUP BY breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "What are the average treatment costs for each breed?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "cost of treatment",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, AVG(cost_of_treatment) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY breed_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now, display the treatment cost for each breed using a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "cost of treatment",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT breed_name, AVG(cost_of_treatment) FROM dogs JOIN treatments ON dogs.dog_id = treatments.dog_id GROUP BY breed_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a scatter plot comparing the weight and age of the dogs.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, weight FROM dogs",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the count of dogs grouped by their breed.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "breed_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "breed_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*) FROM dogs GROUP BY breed_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show me the bar chart of average cost of treatment grouped by treatment types.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "treatment_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT treatment_type_code, AVG(cost_of_treatment) FROM treatments GROUP BY treatment_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show me the same data in a line chart over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "treatment_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, AVG(cost_of_treatment) FROM treatments GROUP BY date_of_treatment, treatment_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a scatter chart of dog's weight versus their age.",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize CIRCLE SELECT weight, age FROM dogs",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of dogs grouped by their breed.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "breed_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT breed_name, count(*) FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show a pie chart of the number of dogs grouped by their size.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "size_description",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "size_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT size_description, count(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code GROUP BY size_description.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Show a scatter chart of cost of treatment against the date of treatment for all dogs.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT date_of_treatment, cost_of_treatment FROM treatments.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show a line chart displaying the total treatment cost over time grouped by month.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal",
                        "timeUnit": "month"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, SUM(cost_of_treatment) FROM treatments GROUP BY MONTH(date_of_treatment).",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of dogs grouped by their breed",
            "Vega-lite Code": "{\"mark\": \"arc\", \"encoding\": {\"theta\": {\"field\": \"count(*)\", \"type\": \"quantitative\"}, \"color\": {\"field\": \"breed_name\", \"type\": \"nominal\"}},\"view\": {\"stroke\": \"transparent\"}}",
            "VQL": "Visualize PIE SELECT breed_name, count(*) FROM dogs JOIN breeds ON dogs.breed_code = breeds.breed_code GROUP BY breed_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show a bar chart of the number of dogs of the most common breed grouped by their size",
            "Vega-lite Code": "{\"mark\": \"bar\", \"encoding\": {\"x\": {\"field\": \"size_description\", \"type\": \"ordinal\"}, \"y\": {\"field\": \"count(*)\", \"type\": \"quantitative\"}}}",
            "VQL": "Visualize BAR SELECT size_description, count(*) FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code WHERE breed_code = (SELECT breed_code FROM (SELECT breed_code, count(*) as count from dogs GROUP BY breed_code ORDER BY count DESC LIMIT 1)) GROUP BY size_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "And how many of them were abandoned?",
            "Vega-lite Code": "{\"mark\": \"bar\", \"encoding\": {\"x\": {\"field\": \"abandoned_yn\", \"type\": \"ordinal\"}, \"y\": {\"field\": \"count(*)\", \"type\": \"quantitative\"}}}",
            "VQL": "Visualize BAR SELECT abandoned_yn, count(*) FROM dogs WHERE breed_code = (SELECT breed_code FROM (SELECT breed_code, count(*) as count FROM dogs GROUP BY breed_code ORDER BY count DESC LIMIT 1)) AND size_code in (SELECT size_code FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code WHERE breed_code = (SELECT breed_code FROM (SELECT breed_code, count(*) as count FROM dogs GROUP BY breed_code ORDER BY count DESC LIMIT 1)) GROUP BY size_description) GROUP BY abandoned_yn",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Finally, show a line chart representing how the cost of treatment is distributed among different treatment types for these dogs",
            "Vega-lite Code": "{\"mark\": \"line\", \"encoding\": {\"x\": {\"field\": \"treatment_type_description\", \"type\": \"ordinal\"}, \"y\": {\"field\": \"average_cost\", \"type\": \"quantitative\"}}}",
            "VQL": "Visualize LINE SELECT treatment_type_description, AVG(cost_of_treatment) as average_cost FROM treatments JOIN treatment_types ON treatments.treatment_type_code = treatment_types.treatment_type_code WHERE dog_id IN (SELECT dog_id FROM dogs where breed_code = (SELECT breed_code FROM (SELECT breed_code, count(*) as count from dogs GROUP BY breed_code ORDER BY count DESC LIMIT 1)) AND size_code in (SELECT size_code FROM dogs JOIN sizes ON dogs.size_code = sizes.size_code WHERE breed_code = (SELECT breed_code FROM (SELECT breed_code, count(*) as count from dogs GROUP BY breed_code ORDER BY count DESC LIMIT 1)) GROUP BY size_description) AND abandoned_yn = 'Y') GROUP BY treatment_type_description ORDER BY treatment_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of dogs grouped by their size.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "size_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT size_code, count(*) FROM dogs GROUP BY size_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show me a pie chart of the genders of these dogs.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "gender",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT gender, count(*) FROM dogs GROUP BY gender",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Display a bar chart showing the number of treatments grouped by treatment type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "treatment_type_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT treatment_type_code, count(*) FROM treatments GROUP BY treatment_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        },
        {
            "Natural Language Query": "Now show me a line chart of the cost of these treatments over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_of_treatment",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "field": "cost_of_treatment",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_of_treatment, average(cost_of_treatment) FROM treatments GROUP BY date_of_treatment",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | dog_kennels | breeds : breed_code , breed_name | charges : charge_id , charge_type , charge_amount | sizes : size_code , size_description | treatment_types : treatment_type_code , treatment_type_description | owners : owner_id , first_name , last_name , street , city , state , zip_code , email_address , home_phone , cell_number | dogs : dog_id , owner_id , abandoned_yn , breed_code , size_code , name , age , date_of_birth , gender , weight , date_arrived , date_adopted , date_departed | professionals : professional_id , role_code , first_name , street , city , state , zip_code , last_name , email_address , home_phone , cell_number | treatments : treatment_id , dog_id , professional_id , treatment_type_code , date_of_treatment , cost_of_treatment"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Among these nationalities, show a pie chart of the the distribution of 'final table made' status.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "final_table_made",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT final_table_made, count(*) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter chart indicating the relationship between 'best finish' ranking and total 'earnings'.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT best_finish, earnings FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationalities.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now, show a pie chart representing the same data.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, count(*) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the average earnings of poker players grouped by their nationalities.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT nationality, avg(earnings) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now, show the same data using a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT nationality, avg(earnings) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker player grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, COUNT(poker_player_id) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "For each nationality, display a pie chart of the number of players who have made it to the final table",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, COUNT(poker_player_id) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE final_table_made = 1 GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Plot a line graph showing the average earnings for each nationality",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT nationality, AVG(earnings) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter plot of player height and earnings",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "height",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT height, earnings FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "nationality",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the best finishes of players from the most represented nationality",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "best_finish",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "best_finish",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize PIE SELECT best_finish, count(*) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE nationality = (SELECT nationality FROM (SELECT nationality, count(*) as num_players FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality ORDER BY num_players DESC LIMIT 1)) GROUP BY best_finish",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the average earnings of players from the most represented nationality, sorted by their money rank",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "money_rank",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "average_earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT money_rank, AVG(earnings) as average_earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE nationality = (SELECT nationality FROM (SELECT nationality, count(*) as num_players FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality ORDER BY num_players DESC LIMIT 1)) GROUP BY money_rank ORDER BY money_rank ASC",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the grouped by the poker players' best finish positions.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "best_finish",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "best_finish",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT best_finish, count(*) FROM poker_player GROUP BY best_finish.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "What about the distribution of their earnings?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT earnings, count(*) FROM poker_player GROUP BY earnings.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the players' earnings trend, grouped by their nationality over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_date, sum(earnings), nationality FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY birth_date, nationality.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "What about the average earnings for each nationality?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, AVG(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Display a scatter chart for best finish versus earnings",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT best_finish, earnings FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now show a line chart of the number of final_table_made over the years for all the players",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_date",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "final_table_made",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_date, SUM(final_table_made) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY YEAR(birth_date)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(poker_player_id) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Then show a line chart of the average earnings of poker players by nationality",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT nationality, AVG(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Among these, how about the distribution of their best finish positions by nationality, shown in a scatter chart?",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "size": {
                        "field": "poker_player_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize CIRCLE SELECT nationality, best_finish, count(poker_player_id) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality, best_finish",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, COUNT(poker_player_id) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Plot a scatter chart showing the relationship between the number of final tables made and the total earnings for each player.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT final_table_made, SUM(earnings) AS earnings FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now make a line chart showing the average best finish position for players of each nationality.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "best_finish",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT nationality, AVG(best_finish) AS avg_best_finish FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Lastly, show a pie chart of the distribution of poker players' money rank.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "money_rank",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "money_rank",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT money_rank, COUNT(*) FROM poker_player GROUP BY money_rank",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar graph showing the count of poker players from various nationalities",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "VISUALIZE BAR SELECT nationality, count(poker_player_id) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of these nationalities bearing in mind the average earnings of poker_players",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "VISUALIZE LINE SELECT nationality, AVG(earnings) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now plot a scatter plot considering each poker player\u2019s total earnings and their best finish",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "best_finish",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "VISUALIZE POINT SELECT earnings, best_finish FROM poker_player",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "How about a line chart showing the average earnings of players by nationality?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT nationality, AVG(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of final tables made versus the best finish position.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "best_finish",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT final_table_made, best_finish FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Can we see a pie chart representing the number of players who made it to the final table?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "final_table_made",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT final_table_made, COUNT(*) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total earnings for each player.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "total_earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, SUM(earnings) as total_earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now show me a line chart of the average best_finish across all players.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "average_best_finish",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, AVG(best_finish) as average_best_finish FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "How about the distribution of money_rank across all players, can you show me as a scatter chart?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "money_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, money_rank FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "And finally, show me a pie chart of the percentage of final_table_made by each player.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage_final_table",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, COUNT(final_table_made) / (SELECT COUNT(*) FROM poker_player) as percentage_final_table FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total earnings for each nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, sum(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Can you break it down by the best finish position as well?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "best_finish",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, best_finish, sum(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality, best_finish",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the total earnings by different final table made",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "final_table_made",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT final_table_made, sum(earnings) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now provide a scatter chart correlating the best finish position with the earnings",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT best_finish, earnings FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Generate a bar chart representing the number of poker players by final table appearance.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "final_table_made",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT final_table_made, count(*) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now, show the average earnings for each final table appearance in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "final_table_made",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT final_table_made, AVG(earnings) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Make a scatter plot comparing earnings and best finish.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT best_finish, earnings FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Lastly, generate a pie chart displaying the distribution of players based on their nationality.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "nationality",
                        "type": "nominal",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT nationality, count(*) FROM people GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, COUNT(*) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a bar chart representing the total earnings per nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "total_earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, SUM(earnings) as total_earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show me a scatter plot of poker players' best finish versus earnings, represented by nationality",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "best_finish",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT best_finish, earnings, nationality FROM poker_player JOIN people ON poker_player.people_id = people.people_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Create a line chart illustrating the average earnings over the birth year of poker players per nationality.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_date",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "field": "average_earnings",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(birth_date) as birth_year, AVG(earnings) as average_earnings, nationality FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY birth_year, nationality",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "poker_player_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(poker_player_id) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of poker players from USA and Non-USA countries",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "player_percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality_category",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT CASE WHEN nationality = 'USA' THEN 'USA' ELSE 'Non-USA' END AS nationality_category, count(poker_player_id) / (SELECT count(poker_player_id) FROM poker_player) * 100 as player_percentage FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality_category",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the total earnings of American poker players over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT EXTRACT(YEAR FROM birth_date) as year, sum(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id WHERE nationality = 'USA' GROUP BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter chart displaying the correlation between the player's height and earnings",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "height",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT height, earnings FROM poker_player JOIN people ON poker_player.people_id = people.people_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total earnings of poker players grouped by their nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, SUM(earnings) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the average height of the players grouped by their earnings ranking.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "money_rank",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "height",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT money_rank, AVG(height) FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY money_rank",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "How does this change for players that have made the final table?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "money_rank",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "height",
                        "aggregate": "average",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "final_table_made",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT money_rank, AVG(height), final_table_made FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id WHERE final_table_made = 'Yes' GROUP BY money_rank, final_table_made",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of players who have made the final table per nationality.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, COUNT(*) WHERE final_table_made='Yes' FROM poker_player INNER JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player JOIN people USING(people_id) GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter chart comparing money rank and earnings for each poker player",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "money_rank",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT money_rank, earnings FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Display a line chart showing the correlation between the number of final table made and the best finish for each poker player",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "best_finish",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT final_table_made, best_finish FROM poker_player",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "What about the pie chart of the number of players grouped by their final table made?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "final_table_made",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT final_table_made, count(*) FROM poker_player GROUP BY final_table_made",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players from each nationality.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': {'field': 'nationality', 'type': 'ordinal'}, 'y': {'aggregate':'count', 'field':'poker_player_id', 'type':'quantitative'} }}",
            "VQL": "Visualize BAR SELECT nationality, count(poker_player_id) FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a pie chart of the top 3 nationalities with the highest number of poker players.",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': {'field': 'nationality', 'type': 'nominal', 'sort': '-count'}, 'color': {'field': 'nationality', 'type': 'nominal'}, 'radius':{'aggregate':'count','field':'poker_player_id','type':'quantitative'}}, 'transform': [{'window': [{'op':'rank', 'as':'rank'}],'sort': [{'field':'count','order':'descending'}]},{'filter': '(datum.rank <= 3)'}] }",
            "VQL": "Visualize PIE SELECT nationality, count(poker_player_id) FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id GROUP BY nationality ORDER BY count(poker_player_id) DESC LIMIT 3",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a line chart of the average earnings of players from these top 3 nationalities.",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': {'field': 'nationality', 'type': 'nominal'}, 'y': {'aggregate':'average', 'field':'earnings', 'type':'quantitative'} }}",
            "VQL": "Visualize LINE SELECT nationality, AVG(earnings) FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id WHERE nationality IN (SELECT nationality FROM (SELECT nationality, COUNT(poker_player_id) as num_players FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id GROUP BY nationality ORDER BY num_players DESC LIMIT 3)) GROUP BY nationality",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Show a scatter chart of the best finish versus earnings for players from these nationalities.",
            "Vega-lite Code": "{ 'mark': 'point', 'encoding': { 'x': {'field': 'best_finish', 'type': 'quantitative'}, 'y': {'field':'earnings', 'type':'quantitative'}, 'color': {'field': 'nationality', 'type': 'nominal'} }}",
            "VQL": "Visualize SCATTER SELECT best_finish, earnings, nationality FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id WHERE nationality IN (SELECT nationality FROM (SELECT nationality, COUNT(poker_player_id) as num_players FROM poker_player INNER JOIN people on poker_player.people_id = people.people_id GROUP BY nationality ORDER BY num_players DESC LIMIT 3))",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart representing the earnings of poker players by nationality.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "nationality",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, SUM(earnings) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the number of players by nationality.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "nationality",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, COUNT(*) FROM people GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "From those nationalities, show a line chart of the number of final tables made over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "birth_date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(birth_date) as year, nationality, SUM(final_table_made) FROM poker_player JOIN people ON poker_player.people_id = people.people_id GROUP BY year, nationality",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of poker players grouped by their nationality",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "nationality",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, count(*) FROM poker_player GROUP BY nationality",
            "Context Dependency Type": "Independent",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Now, show the total earnings of each nationality. Represent the data as a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "sum",
                        "field": "earnings",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT nationality, sum(earnings) FROM poker_player GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "In pie chart format, visualize the distribution of the total number of final tables made by player's nationality",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "final_table_made",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, sum(final_table_made) FROM poker_player GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        },
        {
            "Natural Language Query": "Among the players who made the final table, who has the best ranking?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "best_finish",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, best_finish FROM poker_player WHERE final_table_made > 0 ORDER BY best_finish",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | poker_player | poker_player : poker_player_id , people_id , final_table_made , best_finish , money_rank , earnings | people : people_id , nationality , name , birth_date , height"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of performances grouped by type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "type",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "type",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT type, count(*) FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a line chart of the number of shows grouped by the results.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "result",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT result, count(*) FROM show GROUP BY result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a scatter plot of the performance's weekly ranks and shares",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT weekly_rank, share FROM performance",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now limit the plot to top 20 weekly ranks",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "window": [
                            {
                                "op": "rank",
                                "as": "rank"
                            }
                        ],
                        "sort": [
                            {
                                "field": "weekly_rank"
                            }
                        ]
                    },
                    {
                        "filter": "(datum.rank <= 20)"
                    }
                ]
            },
            "VQL": "Visualize POINT SELECT weekly_rank, share FROM performance ORDER BY weekly_rank LIMIT 20",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras grouped by their record company",
            "Vega_lite_Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "record_company",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT record_company, count(*) FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about the number of orchestras by major record format?",
            "Vega_lite_Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major_record_format",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major_record_format, count(*) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Then show the distribution of orchestras' age via line chart",
            "Vega_lite_Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_of_founded",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_of_founded, count(*) FROM orchestra GROUP BY year_of_founded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, present a scatter chart of weekly rank by official ratings of performances",
            "Vega_lite_Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT official_ratings_(millions), weekly_rank FROM performance",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart illustrating the number of orchestras under each conductor.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "orchestra_id"
                    },
                    "color": {
                        "field": "name"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, count(orchestra_id) FROM orchestra INNER JOIN conductor ON orchestra.conductor_id = conductor.conductor_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, let's see the count of performances each orchestra had over time in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id"
                    },
                    "color": {
                        "field": "orchestra"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, count(orchestra_id), orchestra FROM performance INNER JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id GROUP BY date, orchestra",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, let's visualize the official ratings of each performance by the weekly rank in a scatter chart.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "type"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT weekly_rank, official_ratings_(millions), type FROM performance",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of how many performances are of each type",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "type",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT type, COUNT(*) FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, show a bar chart of the weekly rank versus official ratings for each performance type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "aggregate": "mean"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "aggregate": "mean"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal"
                    },
                    "column": {
                        "field": "type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT type, avg(official_ratings_(millions)), avg(weekly_rank) FROM performance GROUP BY type",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "And now show a line chart of the weekly rank over time for each performance type",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "aggregate": "mean"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, avg(weekly_rank), type FROM performance GROUP BY date, type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras grouped by their record company.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': {'x': {'field': 'number_of_orchestras', 'type': 'quantitative'}, 'y': {'field': 'record_company', 'type': 'nominal'} } }",
            "VQL": "Visualize BAR SELECT count(*) as number_of_orchestras, record_company FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, show me the average age of conductors grouped by the record company of their orchestra.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': {'x': {'field': 'average_age', 'type': 'quantitative'}, 'y': {'field': 'record_company', 'type': 'nominal'} } }",
            "VQL": "Visualize BAR SELECT AVG(age) as average_age, o.record_company FROM conductor as c JOIN orchestra as o on c.conductor_id = o.conductor_id GROUP BY o.record_company",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "I would like to see a pie chart of the proportion of performances of each type.",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': {'theta': {'field': 'proportion', 'type': 'quantitative'}, 'color': {'field': 'type', 'type': 'nominal'} } }",
            "VQL": "Visualize PIE SELECT type, COUNT(*)/(SELECT COUNT(*) FROM performance) as proportion FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about the average weekly rank of each type of performance in a line chart?",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': {'x': {'field': 'average_weekly_rank', 'type': 'quantitative'}, 'y': {'field': 'type', 'type': 'nominal'} } }",
            "VQL": "Visualize LINE SELECT AVG(weekly_rank) as average_weekly_rank, type FROM performance GROUP BY type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of performances per year",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Performances"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Year(date), count(*) FROM performance GROUP BY Year(date)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, display a line chart of the average official ratings over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Average Ratings (Million)"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT Year(date), AVG(official_ratings_(millions)) FROM performance GROUP BY Year(date)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a breakdown of the types of performances in a pie chart",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "type",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal",
                        "legend": {
                            "title": "Performance Type"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT type, count(*) FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, show a scatter plot to examine the relationship between ratings and attendance",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Ratings (Millions)"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative",
                        "title": "Attendance"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT official_ratings_(millions), attendance FROM show",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of orchestra's major record formats",
            "Vega-lite code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal"
                    },
                    "tooltip": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major_record_format, count(*) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Display a bar chart indicating the number of orchestras founded each year grouped by major record format.",
            "Vega-lite code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year_of_founded",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year_of_founded, major_record_format, count(*) FROM orchestra GROUP BY year_of_founded, major_record_format",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now let's see a line chart of official ratings over time for performances by orchestras that primarily use vinyl format.",
            "Vega-lite code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, official_ratings_(millions) FROM performance p, orchestra o WHERE o.orchestra_id = p.orchestra_id AND major_record_format = 'vinyl' ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, please plot a scatter chart of performance's official ratings against the attendance, for the first shows only.",
            "Vega-lite code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT official_ratings_(millions), attendance FROM performance p, show s WHERE s.performance_id = p.performance_id AND if_first_show = 'yes'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total official_ratings_(millions) for each orchestra grouped by their major_record_format.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major_record_format",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "total_official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major_record_format, SUM(official_ratings_(millions)) as total_official_ratings_(millions) FROM performance JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id GROUP BY major_record_format",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Display the age of conducters who conducted these orchestras in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "tooltip": [
                        {
                            "field": "name",
                            "type": "nominal"
                        },
                        {
                            "field": "age",
                            "type": "quantitative"
                        }
                    ]
                },
                "view": {
                    "stroke": null
                }
            },
            "VQL": "Visualize PIE SELECT name, age FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about the attendance of performances conducted by these conductors over the years in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, attendance, name FROM performance JOIN show ON performance.performance_id = show.performance_id JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id JOIN conductor ON orchestra.conductor_id = conductor.conductor_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart showing the number of performances conducted by each conductor, sorted by age.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "performance_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT conductor.name, count(performance_id) FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance on orchestra.orchestra_id = performance.orchestra_id GROUP BY conductor.name ORDER BY conductor.age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about a line chart of the average ratings for performances conducted by the top 5 conductors in the previous chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT conductor.name, AVG(performance.official_ratings_(millions)) FROM conductor JOIN orchestra ON conductor.conductor_id = orchestra.conductor_id JOIN performance on orchestra.orchestra_id = performance.orchestra_id WHERE conductor.name IN (SELECT name FROM conductor ORDER BY count(performance_id) DESC LIMIT 5) GROUP BY conductor.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show me a pie chart of the percentage of each type of performance conducted by the highest rated conductor in the line chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "type",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT performance.type, COUNT(performance.type) FROM performance JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id JOIN conductor ON orchestra.conductor_id = conductor.conductor_id WHERE conductor.name = (SELECT name FROM conductor ORDER BY AVG(performance.official_ratings_(millions)) DESC LIMIT 1) GROUP BY performance.type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, can you create a scatter chart of performance date against the weekly rank for all performances conducted by this conductor?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT performance.date, performance.weekly_rank FROM performance JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id JOIN conductor ON orchestra.conductor_id = conductor.conductor_id WHERE conductor.name = (SELECT name FROM conductor ORDER BY AVG(performance.official_ratings_(millions)) DESC LIMIT 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras grouped by their record company",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "record_company",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT record_company, count(*) FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Can I see the distribution of age of conductors in each record_company?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "record_company",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*), record_company FROM conductor INNER JOIN orchestra ON orchestra.conductor_id=conductor.conductor_id GROUP BY age, record_company",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a line chart of average official ratings of performances over time. ",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, avg(official_ratings_(millions)) FROM performance GROUP BY date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "What about the share trend over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, avg(share) FROM performance GROUP BY date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras grouped by their record company.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "record_company",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT record_company, count(orchestra_id) FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about their major record format?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major_record_format",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major_record_format, count(orchestra_id) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a line chart of the official ratings over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, official_ratings_(millions) FROM performance ORDER BY date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "And how about the weekly rank over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, weekly_rank FROM performance ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of performances by each orchestra",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "orchestra",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "performance_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT orchestra, count(performance_id) FROM performance INNER JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id GROUP BY orchestra",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, display a line chart showing the change in weekly rank of the orchestras over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "weekly_rank",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "orchestra",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, avg(weekly_rank), orchestra FROM performance INNER JOIN orchestra ON performance.orchestra_id = orchestra.orchestra_id GROUP BY date, orchestra ORDER BY date",
            "Context Dependency Type": "Co-reference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show me a pie chart of the share of each major record format",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major_record_format, count(orchestra_id) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, can you show a scatter plot of age against years of work for each conductor?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "year_of_work",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, year_of_work FROM conductor",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras formed each year.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year_of_founded",
                        "type": "ordinal",
                        "title": "Year Founded"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Orchestras"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year_of_founded, count(*) FROM orchestra GROUP BY year_of_founded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, show a pie chart of major record formats used by these orchestras.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "major_record_format",
                        "stack": true,
                        "type": "ordinal",
                        "title": "Major Record Format"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal",
                        "title": "Format"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major_record_format, count(*) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Can you show a scatter plot indicating the relationship between the official ratings and the weekly rank for the performances of these orchestras?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Official Ratings (millions)"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "title": "Weekly Rank"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT official_ratings_(millions), weekly_rank FROM performance",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of orchestras per conductor.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "conductor_id",
                        "type": "nominal",
                        "title": "Conductor"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Orchestras"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT conductor_id, count(*) FROM orchestra GROUP BY conductor_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "How about a pie chart showing the ratio of their respective nationalities.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "aggregate": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "nationality",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT nationality, count(*) FROM conductor GROUP BY nationality",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a line chart of the official ratings over time for each performance.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Official Ratings"
                    },
                    "color": {
                        "field": "performance_id",
                        "type": "nominal",
                        "title": "Performance"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, official_ratings_(millions), performance_id FROM performance ORDER BY date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, show a scatter chart of the attendance against the weekly rank of performances.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "title": "Weekly Rank"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative",
                        "title": "Attendance"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT weekly_rank, attendance FROM performance",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of orchestra performance types in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "type",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT type, count(*) FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now show their distribution of official ratings in a scatter chart",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT official_ratings_(millions), count(*) FROM performance GROUP BY official_ratings_(millions)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Plot a line chart showing the trend of attendance over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "attendance",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, AVG(attendance) FROM show GROUP BY date ORDER BY date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Finally, show me the pie chart that represents the percentage of each record company in the orchestra table",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "record_company",
                        "type": "nominal",
                        "stack": true
                    },
                    "color": {
                        "field": "record_company",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT record_company, count(*) FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart to show the number of performances by orchestratype.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "type",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT type, count(*) FROM performance GROUP BY type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, plot a line graph to display the trend of the weekly rank of a particular performance over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, weekly_rank FROM performance WHERE performance_id = {Previous performance_id} ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Let's show a scatter chart of the result and attendance of the shows.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT result, attendance FROM show",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "What about the pie chart of the major_record_format of the orchestras?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major_record_format, count(*) FROM orchestra GROUP BY major_record_format",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of shows by orchestras.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "orchestra",
                        "type": "nominal",
                        "title": "Orchestra"
                    },
                    "y": {
                        "field": "show_count",
                        "type": "quantitative",
                        "title": "Number of Shows"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT o.orchestra, COUNT(s.show_id) as show_count FROM orchestra o INNER JOIN performance p ON o.orchestra_id = p.orchestra_id INNER JOIN show s ON p.performance_id = s.performance_id GROUP BY o.orchestra",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Now, show a line chart of weekly ranks of these orchestras over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "title": "Weekly Rank"
                    },
                    "volor": {
                        "field": "orchestra",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT p.date, p.weekly_rank, o.orchestra FROM orchestra o INNER JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE o.orchestra IN (SELECT o.orchestra FROM orchestra o INNER JOIN performance p ON o.orchestra_id = p.orchestra_id INNER JOIN show s ON p.performance_id = s.performance_id GROUP BY o.orchestra) ORDER BY p.date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "What about their official ratings? Plot a scatter chart of their official ratings over time.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Official Ratings (Millions)"
                    },
                    "volor": {
                        "field": "orchestra",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT p.date, p.official_ratings_(millions), o.orchestra FROM orchestra o INNER JOIN performance p ON o.orchestra_id = p.orchestra_id WHERE o.orchestra IN (SELECT o.orchestra FROM orchestra o INNER JOIN performance p ON o.orchestra_id = p.orchestra_id INNER JOIN show s ON p.performance_id = s.performance_id GROUP BY o.orchestra) ORDER BY p.date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Plot a bar chart to show the number of orchestras conducted by each conductor.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Conductor Name"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Orchestras"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(*) FROM conductor JOIN orchestra ON conductor.conductor_id=orchestra.conductor_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "For the conductor who has conducted the most orchestras, plot a line chart to show the changes in official orchestra ratings over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative",
                        "title": "Official Rating (Millions)"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, official_ratings_(millions) FROM performance JOIN orchestra ON performance.orchestra_id=orchestra.orchestra_id WHERE orchestra.conductor_id=(SELECT conductor_id FROM (SELECT conductor_id, COUNT(*) as cnt FROM orchestra GROUP BY conductor_id ORDER BY cnt DESC LIMIT 1)) ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Plot a pie chart of the share of each type of the performances conducted by this conductor.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "share",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "type",
                        "type": "nominal",
                        "title": "Type of Performance"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT type, SUM(share) FROM performance JOIN orchestra ON performance.orchestra_id=orchestra.orchestra_id WHERE orchestra.conductor_id=(SELECT conductor_id FROM (SELECT conductor_id, COUNT(*) as cnt FROM orchestra GROUP BY conductor_id ORDER BY cnt DESC LIMIT 1)) GROUP BY type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart of the number of orchestras grouped by their record company.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "record_company",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "orchestra_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT record_company, count(*) FROM orchestra GROUP BY record_company",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "For the orchestra with the highest count from before, show a pie chart of the major record format.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "major_record_format",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major_record_format",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major_record_format, count(*) FROM orchestra WHERE record_company = [company with the highest count from previous query] GROUP BY major_record_format",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a scatter chart of the official ratings compared to attendance for performances associated with the selected orchestra.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT performance.official_ratings_(millions), show.attendance FROM performance INNER JOIN show ON performance.performance_id = show.performance_id WHERE performance.orchestra_id IN (SELECT orchestra_id FROM orchestra WHERE record_company = [company with the highest count from previous query])",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total attendance of each orchestra",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "orchestra",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "attendance",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT orchestra, sum(attendance) FROM performance JOIN show on performance.performance_id = show.performance_id JOIN orchestra on performance.orchestra_id = orchestra.orchestra_id GROUP BY orchestra",
            "Context Dependency Type": "Independent",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a line chart of the official ratings(millions) of the orchestra over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, official_ratings_(millions) FROM performance WHERE performance.orchestra_id = (SELECT orchestra_id FROM orchestra WHERE orchestra = 'previous orchestra') ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a scatter plot representing conductor's age and their orchestra's official ratings(millions).",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "official_ratings_(millions)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT age, official_ratings_(millions) FROM performance JOIN orchestra on performance.orchestra_id = orchestra.orchestra_id JOIN conductor on orchestra.conductor_id = conductor.conductor_id WHERE performance.orchestra_id = (SELECT orchestra_id FROM orchestra WHERE orchestra = 'previous orchestra')",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        },
        {
            "Natural Language Query": "Show a pie chart of the weekly rank distribution of the orchestra's performances.",
            "Vega-lite Code": {
                "mark": "arc",
                "view": {
                    "stroke": null
                },
                "encoding": {
                    "x": {
                        "field": "weekly_rank",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT weekly_rank, count(*) FROM performance WHERE performance.orchestra_id = (SELECT orchestra_id FROM orchestra WHERE orchestra = 'previous orchestra') GROUP BY weekly_rank",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | orchestra | conductor : conductor_id , name , age , nationality , year_of_work | orchestra : orchestra_id , orchestra , conductor_id , record_company , year_of_founded , major_record_format | performance : performance_id , orchestra_id , type , date , official_ratings_(millions) , weekly_rank , share | show : show_id , performance_id , if_first_show , result , attendance"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total matches won by each player",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "nominal",
                        "sort": "-y",
                        "title": "Names of Players"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative",
                        "title": "Total wins"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(winner_id) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of player hand types",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "hand",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hand",
                        "type": "nominal",
                        "legend": {
                            "title": "Hand Types"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT hand, count(*) FROM players GROUP BY hand",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How about we look at the players' rankings over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal",
                        "title": "Dates"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative",
                        "title": "Ranking"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal",
                        "legend": {
                            "title": "Player ID"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking, player_id FROM rankings ORDER BY ranking_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can I see a scatter chart of player height against the number of matches they won?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "winner_ht",
                        "type": "quantitative",
                        "title": "Height"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative",
                        "title": "Total wins"
                    },
                    "color": {
                        "field": "winner_name",
                        "type": "nominal",
                        "legend": {
                            "title": "Player Name"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT winner_ht, count(winner_id), winner_name FROM matches GROUP BY winner_ht, winner_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won by each player",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(*) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Highlight the number of matches won by left-handed players",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "condition": {
                            "test": "datum.winner_hand == 'L'",
                            "value": "steelblue"
                        },
                        "value": "grey"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(*) FROM matches WHERE winner_hand = 'L' GROUP BY winner_name",
            "Context Dependency Type": "Elipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart of the ranking progress of the top player",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking, player_id FROM rankings WHERE player_id = (SELECT player_id FROM matches GROUP BY player_id ORDER BY count(*) DESC LIMIT 1)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of matches won versus ranking points for all players",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT count(*), ranking_points, player_id FROM matches JOIN rankings ON matches.winner_id = rankings.player_id GROUP BY player_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of matches played each year",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year, count(*) FROM matches GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now show me how these matches breakdown by the surface type each year",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "surface",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year, surface, count(*) FROM matches GROUP BY year, surface",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show me a line chart of the average age of the match winners over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "winner_age",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(winner_age) FROM matches GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now break this down by the hand preference of the winner",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "winner_age",
                        "aggregate": "average",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_hand",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, winner_hand, AVG(winner_age) FROM matches GROUP BY year, winner_hand",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won by each player",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(*) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How does the trend of total winners look like over the years?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(winner_name) FROM matches GROUP BY year ORDER BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "What about for specific player 'Williams S.'?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(winner_name) FROM matches WHERE winner_name = 'Williams S.' GROUP BY year ORDER BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a scatter plot of ranking points vs number of wins for 'Williams S.'",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "ranking_points",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT ranking_points, count(winner_name) FROM rankings INNER JOIN matches ON rankings.player_id = matches.winner_id WHERE winner_name = 'Williams S.' GROUP BY ranking_points",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of matches won by each player",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select winner_name, count(*) From matches Group By winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How about a line chart showing the change of rankings over the years for the player who has the most wins?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, ranking FROM rankings WHERE player_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY count(*) DESC LIMIT 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Display a pie chart of the distribution of the player's matches victories based on the surface type",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "surface",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT surface, count(*) FROM matches WHERE winner_id = (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY count(*) DESC LIMIT 1) GROUP BY surface",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won by each player grouped by their handedness.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_hand",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_hand, winner_name, count(*) FROM matches GROUP BY winner_hand, winner_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of the hand dominance of the losing players.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "loser_hand",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "loser_hand"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT loser_hand, count(*) FROM matches GROUP BY loser_hand",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How does this distribution change over the years?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "loser_hand",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "loser_hand"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, loser_hand, count(*) FROM matches GROUP BY year, loser_hand",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won grouped by country",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_ioc",
                        "type": "nominal",
                        "title": "Country"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative",
                        "title": "Number of Matches Won"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_ioc, count(winner_id) FROM matches GROUP BY winner_ioc",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart of the players' ranking points over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative",
                        "title": "Ranking Points"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal",
                        "title": "Player ID"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking_points, player_id FROM rankings",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Of these, show a scatter chart of the number of matches won against ranking points for players from USA",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "winner_id",
                        "type": "quantitative",
                        "title": "Number of Matches Won"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative",
                        "title": "Ranking Points"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal",
                        "title": "Player ID"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.winner_ioc == 'USA'"
                    }
                ]
            },
            "VQL": "Visualize POINT SELECT winner_id, ranking_points, player_id FROM matches INNER JOIN rankings ON matches.winner_id = rankings.player_id WHERE winner_ioc = 'USA'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Give me a bar chart of the number of matches won by each player.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "nominal",
                        "title": "Player"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Matches Won"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, COUNT(*) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Compare this with a bar chart of the number of matches lost by each player.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "loser_name",
                        "type": "nominal",
                        "title": "Player"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Matches Lost"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT loser_name, COUNT(*) FROM matches GROUP BY loser_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a pie chart of the match count per surface type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Count"
                    },
                    "color": {
                        "field": "surface",
                        "type": "nominal",
                        "title": "Surface Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT surface, COUNT(*) FROM matches GROUP BY surface",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Finally, plot a line chart of the average match duration over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal",
                        "timeUnit": "year",
                        "title": "Year"
                    },
                    "y": {
                        "field": "minutes",
                        "type": "quantitative",
                        "aggregate": "mean",
                        "title": "Average Match Duration (minutes)"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(minutes) FROM matches GROUP BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the average player age by country",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x' : {'field': 'avg(age)', 'type': 'quantitative'}, 'y': {'field': 'country_code', 'type': 'nominal'}}}",
            "VQL": "Visualize BAR SELECT AVG(age), country_code FROM players GROUP BY country_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now show the distribution of player's hand preference by country",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x' : {'field': 'count(hand)', 'type': 'quantitative'}, 'y': {'field': 'country_code', 'type': 'nominal'}, 'color': {'field': 'hand', 'type': 'nominal'}}}",
            "VQL": "Visualize BAR SELECT COUNT(hand), country_code, hand FROM players GROUP BY country_code, hand",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How about the players' ranking distribution?",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x' : {'field': 'count(ranking)', 'type': 'quantitative'}, 'y': {'field': 'ranking', 'type': 'ordinal'}}}",
            "VQL": "Visualize BAR SELECT COUNT(ranking), ranking FROM rankings GROUP BY ranking",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Plot a line chart to show the players' ranking points change over time",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x' : {'field': 'ranking_date', 'type': 'temporal'}, 'y': {'field': 'avg(ranking_points)', 'type': 'quantitative'}}}",
            "VQL": "Visualize LINE SELECT ranking_date, AVG(ranking_points) FROM rankings GROUP BY ranking_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won by each player.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(*) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now, only show the top 10 players with the most wins.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, count(*) FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 10",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a pie chart distribution of these top 10 players' birth countries.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT country_code, count(*) FROM players WHERE player_id IN (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY count(*) DESC LIMIT 10) GROUP BY country_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart depicting the ranks of these top 10 players over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking, player_id FROM rankings WHERE player_id IN (SELECT winner_id FROM matches GROUP BY winner_id ORDER BY count(*) DESC LIMIT 10)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of matches won by each player",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_name, COUNT(winner_id) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now, I want a pie chart to show their proportion in total victories",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT winner_name, COUNT(winner_id) FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show their rankings on a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking, player_id FROM rankings",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Finally, let's have a scatter plot for their age and ranking points",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "player_id",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT player_id, ranking_points, YEAR(CURRENT_DATE()) - YEAR(birth_date) as age FROM players LEFT JOIN rankings ON players.player_id = rankings.player_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches won by players grouped by their country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_ioc",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_ioc, count(winner_id) FROM matches GROUP BY winner_ioc",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can we also see how many matches the players from the same countries lost?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "loser_ioc",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "loser_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT loser_ioc, count(loser_id) FROM matches GROUP BY loser_ioc",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart of the average player rank over time grouped by their country.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "ranking",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, country_code, AVG(ranking) FROM rankings WHERE player_id IN (SELECT player_id FROM players) GROUP BY country_code, year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "How about a scatter chart of the matches' duration in minutes versus the round number.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "round",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "minutes",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT round, minutes FROM matches",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the number of matches played by each player.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "winner_id",
                        "type": "ordinal",
                        "title": "Player ID"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Number of Matches"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_id, count(*) FROM matches GROUP BY winner_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Among these, how many matches did player with ID 1 win?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_id",
                        "type": "nominal",
                        "title": "Player ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "winner_id",
                        "type": "quantitative",
                        "title": "Number of Matches Won"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.winner_id === 1"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT winner_id, count(*) FROM matches WHERE winner_id = 1 GROUP BY winner_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "And how many matches did this player lose?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "loser_id",
                        "type": "nominal",
                        "title": "Player ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "loser_id",
                        "type": "quantitative",
                        "title": "Number of Matches Lost"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.loser_id === 1"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT loser_id, count(*) FROM matches WHERE loser_id = 1 GROUP BY loser_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now, let's see the average age of players when they win or lose matches.",
            "Vega-lite Code": {
                "mark": {
                    "type": "bar",
                    "tooltip": {
                        "content": "data"
                    }
                },
                "encoding": {
                    "y": {
                        "field": "avg_age",
                        "type": "quantitative",
                        "title": "Average Age"
                    },
                    "x": {
                        "field": "outcome",
                        "type": "nominal",
                        "title": "Match Outcome"
                    }
                },
                "data": {
                    "values": [
                        {
                            "outcome": "Winner",
                            "avg_age": [
                                {
                                    "aggregate": "mean",
                                    "field": "winner_age",
                                    "type": "quantitative"
                                }
                            ]
                        },
                        {
                            "outcome": "Loser",
                            "avg_age": [
                                {
                                    "aggregate": "mean",
                                    "field": "loser_age",
                                    "type": "quantitative"
                                }
                            ]
                        }
                    ]
                }
            },
            "VQL": "Visualize BAR SELECT 'Winner' as outcome, avg(winner_age) as avg_age FROM matches UNION ALL SELECT 'Loser' as outcome, avg(loser_age) as avg_age FROM matches",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of player's primary hand usage in the games.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "player_id"
                    },
                    "color": {
                        "field": "hand",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT hand, count(player_id) FROM players GROUP BY hand",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart tracking the average ranking points progression over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "ranking_points"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(ranking_points) FROM rankings GROUP BY year",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now break down this trend based on the player's primary hand usage.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "color": {
                        "field": "hand",
                        "type": "nominal"
                    },
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "ranking_points"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(ranking_points), hand FROM rankings INNER JOIN players ON players.player_id = rankings.player_id GROUP BY year, hand",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Generate a bar chart of the count of matches per surface type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "surface",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "match_num"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT surface, COUNT(match_num) FROM matches GROUP BY surface",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of matches played by players based on their hand.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "player_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hand",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(player_id), hand FROM matches GROUP BY hand",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now show a line chart of the average winner_age over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "winner_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(winner_age) FROM matches GROUP BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can we compare this with the average loser_age over the same time period?",
            "Vega-lite Code": {
                "layer": [
                    {
                        "mark": {
                            "type": "line",
                            "color": "green"
                        },
                        "encoding": {
                            "x": {
                                "field": "year",
                                "type": "temporal"
                            },
                            "y": {
                                "aggregate": "average",
                                "field": "winner_age",
                                "type": "quantitative"
                            }
                        }
                    },
                    {
                        "mark": {
                            "type": "line",
                            "color": "orange"
                        },
                        "encoding": {
                            "x": {
                                "field": "year",
                                "type": "temporal"
                            },
                            "y": {
                                "aggregate": "average",
                                "field": "loser_age",
                                "type": "quantitative"
                            }
                        }
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT year, AVG(winner_age), AVG(loser_age) FROM matches GROUP BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Lastly, show a bar chart of the number of matches grouped by surface type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "surface",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "match_num",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT surface, count(match_num) FROM matches GROUP BY surface",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart distribution of players based on their hand preference",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "player_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hand",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT hand, count(player_id) FROM players GROUP BY hand",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "What about a bar chart showing number of players sorted by their country of origin?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "player_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "country_code",
                        "type": "nominal",
                        "sort": "-x"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country_code, count(player_id) FROM players GROUP BY country_code ORDER BY count(player_id) DESC",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can we visualize an area chart showing ranking distribution over time for a specific player, say player '1234'?",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.player_id === '1234'"
                    }
                ]
            },
            "VQL": "Visualize AREA SELECT ranking_date, ranking FROM rankings WHERE player_id = '1234'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a line chart representing ranking points changes over time for the same player",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.player_id === '1234'"
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking_points FROM rankings WHERE player_id = '1234'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of wins by country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "winner_ioc",
                        "type": "ordinal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_ioc",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_ioc, count(*) FROM matches GROUP BY winner_ioc",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the number of wins by the players' dominant hand.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_hand",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT winner_hand, count(*) FROM matches GROUP BY winner_hand",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can you compare the players' age and their ranking points in a scatter plot?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "winner_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "winner_rank_points",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_ioc",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT winner_age, winner_rank_points, winner_ioc FROM matches",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Update the chart to show only players from USA.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "winner_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "winner_rank_points",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "winner_ioc",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.winner_ioc == 'USA'"
                    }
                ]
            },
            "VQL": "Visualize SCATTER SELECT winner_age, winner_rank_points, winner_ioc FROM matches WHERE winner_ioc == 'USA'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the players' ages",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "ordinal",
                        "title": "Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Players"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT extract(year from CURRENT_DATE) - extract(year from birth_date) as age, count(*) FROM players GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show a pie chart of how many matches each player has won",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "winner_name",
                        "type": "nominal",
                        "title": "Player Name"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT winner_name, count(*) AS count FROM matches GROUP BY winner_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now show me a line chart of these player's rankings over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "ranking",
                        "type": "quantitative",
                        "title": "Ranking"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal",
                        "title": "Player"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking, player_id FROM rankings WHERE player_id IN (SELECT winner_id FROM matches GROUP BY winner_id)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "What about their ranking points?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "ranking_date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative",
                        "title": "Ranking Points"
                    },
                    "color": {
                        "field": "player_id",
                        "type": "nominal",
                        "title": "Player"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT ranking_date, ranking_points, player_id FROM rankings WHERE player_id IN (SELECT winner_id FROM matches GROUP BY winner_id)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of matches played per year.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "match_num",
                        "type": "quantitative",
                        "title": "Number of Matches"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year, count(match_num) FROM matches GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "And how many minutes were spent on those matches each year?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "minutes",
                        "type": "quantitative",
                        "title": "Minutes Spent"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, sum(minutes) FROM matches GROUP BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Show the proportion of winners' hands (left or right-handed) per year.",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "percentage",
                        "field": "winner_hand",
                        "type": "nominal",
                        "title": "Hand"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT year, count(winner_hand)/total_count FROM (SELECT year, winner_hand, count(winner_hand) over (partition by year) as total_count FROM matches) GROUP BY year, winner_hand",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "And how about the losers'?",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "percentage",
                        "field": "loser_hand",
                        "type": "nominal",
                        "title": "Hand"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT year, count(loser_hand)/total_count FROM (SELECT year, loser_hand, count(loser_hand) over (partition by year) as total_count FROM matches) GROUP BY year, loser_hand",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of matches won by players from different countries in bar chart form.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the number of matches won by each country",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_ioc",
                        "type": "ordinal",
                        "title": "Country"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Matches"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_ioc, count(*) FROM matches GROUP BY winner_ioc",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Can we see these numbers for the last 10 years only?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the number of matches won by each country in last 10 years",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "winner_ioc",
                        "type": "ordinal",
                        "title": "Country"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Matches in Last 10 years"
                    },
                    "color": {
                        "field": "year",
                        "type": "nominal",
                        "title": "Year"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT winner_ioc, count(*), year FROM matches WHERE year > (SELECT max(year) from matches) - 10 GROUP BY winner_ioc, year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Let's see this data on a line chart for better trend analysis.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart showing the trend of number of matches won by each country in last 10 years",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Matches"
                    },
                    "color": {
                        "field": "winner_ioc",
                        "type": "nominal",
                        "title": "Country"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(*), winner_ioc FROM matches WHERE year > (SELECT max(year) from matches) - 10 GROUP BY winner_ioc, year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        },
        {
            "Natural Language Query": "Now let's see the top 5 players with their total ranking points in a bar chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the top 5 players with their total ranking points",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "player_id",
                        "type": "ordinal",
                        "title": "Player"
                    },
                    "y": {
                        "field": "ranking_points",
                        "type": "quantitative",
                        "title": "Total Ranking Points"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT player_id, sum(ranking_points) as total_points FROM rankings GROUP BY player_id ORDER BY total_points DESC LIMIT 5",
            "Context Dependency Type": "Independent",
            "Database Schema": " | wta_1 | players : player_id , first_name , last_name , hand , birth_date , country_code | matches : best_of , draw_size , loser_age , loser_entry , loser_hand , loser_ht , loser_id , loser_ioc , loser_name , loser_rank , loser_rank_points , loser_seed , match_num , minutes , round , score , surface , tourney_date , tourney_id , tourney_level , tourney_name , winner_age , winner_entry , winner_hand , winner_ht , winner_id , winner_ioc , winner_name , winner_rank , winner_rank_points , winner_seed , year | rankings : ranking_date , ranking , player_id , ranking_points , tours"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of TV shows based on the different channels",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "series_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "tv_channel",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT series_name, count(*) FROM tvshow GROUP BY tv_channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now, show me the distribution of their air dates",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "series_name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, count(*) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about their rating distribution?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "series_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, count(*) FROM tv_series GROUP BY rating",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Finally, show a pie chart of cartoons by their original air date",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "title",
                        "type": "nominal",
                        "stack": true
                    },
                    "color": {
                        "field": "original_air_date",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT title, count(*) FROM cartoon GROUP BY original_air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV shows grouped by their country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(*) FROM tvshow GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of TV shows for each language.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about TV shows aired on HD TV channel?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "hight_definition_tv",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hight_definition_tv, count(*) FROM tvshow GROUP BY hight_definition_tv",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a line chart of ratings over time for TV series episodes.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "rating",
                        "type": "quantitative"
                    }
                },
                "order": {
                    "field": "air_date"
                }
            },
            "VQL": "Visualize LINE SELECT air_date, rating FROM tv_series ORDER BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of tv shows grouped by their package option.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "package_option",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT package_option, count(*) FROM tvshow GROUP BY package_option",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What is the average rating of tv series for each package option?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "package_option",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT package_option, AVG(rating) FROM tv_series JOIN tvshow ON tv_series.channel=tvshow.id GROUP BY package_option",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a scatter plot of viewers versus tv show's rating.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, viewers_m FROM tv_series",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the viewers versus rating for cartoons?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, viewers_m FROM cartoon",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of tv shows grouped by channel",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "tv_channel.id",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "tvshow",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT tv_channel.id, count(tvshow) FROM tvshow GROUP BY tv_channel.id",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "And how about the number of series per channel?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "channel",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "tv_series.id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT channel, count(tv_series.id) FROM tv_series GROUP BY channel",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the number of cartoons per channel?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "channel",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "cartoon.id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT channel, count(cartoon.id) FROM cartoon GROUP BY channel",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a pie chart of the total viewers on each channel for tv series",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "viewers_m",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, sum(viewers_m) FROM tv_series GROUP BY channel",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Generate a bar chart which shows the number of TV series per TV channel and their respective ratings",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "series_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "rating",
                        "type": "quantitative",
                        "aggregate": "average"
                    },
                    "color": {
                        "field": "tv_channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT series_name, average(rating) FROM tv_series GROUP BY tv_channel, series_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now show the trend of viewers_m over time for each channel in a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, sum(viewers_m) FROM tv_series GROUP BY channel, air_date",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the viewer trends for the 18_49_rating_share?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "18_49_rating_share",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, sum(18_49_rating_share) FROM tv_series GROUP BY channel, air_date",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Let's see a pie chart detailing the percentage of TV series that's in high definition versus standard definition.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count(series_name)",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "hight_definition_tv",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(series_name) FROM tv_channel WHERE hight_definition_tv GROUP BY hight_definition_tv",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV series grouped by their air dates",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "ordinal",
                        "title": "Air Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of TV Series"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT air_date, count(*) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a pie chart of TV series based on rating",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "rating",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT rating, count(*) FROM tv_series GROUP BY rating",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now, show a scatter chart of viewers vs ratings for these TV series",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative",
                        "title": "Rating"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "title": "Viewers (millions)"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, viewers_m  FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Lastly, visualize a line chart to represent the weekly rank of these TV series over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal",
                        "title": "Air Date"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "title": "Weekly Rank"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, weekly_rank FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the ratings for each TV series.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "series_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "rating",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT series_name, AVG(rating) FROM tv_series GROUP BY series_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now show me their viewers in millions.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "series_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT series_name, AVG(viewers_m) FROM tv_series GROUP BY series_name",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How did the shares of these series look?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative",
                        "aggregate": "average"
                    },
                    "color": {
                        "field": "series_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(share), series_name FROM tv_series GROUP BY air_date, series_name",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about their ranking performance over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative",
                        "aggregate": "average"
                    },
                    "color": {
                        "field": "series_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(weekly_rank), series_name FROM tv_series GROUP BY air_date, series_name",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of TV shows aired on each channel grouped by their country",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(id) FROM tvshow GROUP BY country, tv_channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the pie chart of the number of tv series aired on different channels?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, COUNT(id) FROM tv_series GROUP BY channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a line chart of the viewership over time for tv series",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, viewers_m, channel FROM tv_series",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "And the scatter plot of the rating vs share for tv series on each channel?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, share, channel FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart of the number of TV shows based on their countries.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(*) FROM tvshow GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now show a pie chart of the language distribution of these shows.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "language",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the viewership distribution? Let's see a line chart for viewership change over the air dates of tv series.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, viewers_m FROM tv_series",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Fine. Now, let's see a scatter chart of ratings against the share of tv series.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT rating, share FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show me viewer distribution per channel as a bar chart.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "channel",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT channel, SUM(viewers_m) FROM tv_series GROUP BY channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How does the viewership trend for each channel over time look like?",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, SUM(viewers_m), channel FROM tv_series GROUP BY air_date, channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Compare the 18_49_rating_share across channels.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "channel",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "18_49_rating_share",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT channel, AVG(18_49_rating_share) FROM tv_series GROUP BY channel",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show the share distribution for each channel using a pie chart.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "share",
                        "type": "quantitative",
                        "aggregate": "average"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, AVG(share) FROM tv_series GROUP BY channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Present a bar chart showing the count of TV shows by languages they are broadcast in.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "TV shows count by language",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "language",
                        "type": "ordinal",
                        "title": "Language"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of TV shows"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a line chart indicating TV series average rate progress over time.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "TV series rating over time",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal",
                        "title": "Air Date"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "rating",
                        "type": "quantitative",
                        "title": "Rate Average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, avg(rating) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What about the progress of the average viewership over time for the same TV series?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "TV series viewership over time",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal",
                        "title": "Air Date"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "viewers_m",
                        "type": "quantitative",
                        "title": "Average Viewership (in millions)"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, avg(viewers_m) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Finally, can you show a pie chart that displays the distribution of cartoons per each TV channel?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Distribution of cartoons by channel",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, count(*) FROM cartoon GROUP BY channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of tv shows grouped by their country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(*) FROM tvshow GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How about their 18-49 rating share for each country?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "18_49_rating_share",
                        "type": "quantitative",
                        "aggregate": "average"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT country, AVG(18_49_rating_share) FROM tv_series JOIN tvshow ON tvshow.id = tv_series.channel GROUP BY country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "And their viewers in million for each country?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT country, SUM(viewers_m) FROM tv_series JOIN tvshow ON tvshow.id = tv_series.channel GROUP BY country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show me a pie chart of the number of main viewership languages.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV shows grouped by their country",
            "Vega-lite Code": {
                "type": "bar",
                "x": {
                    "field": "country",
                    "type": "nominal"
                },
                "y": {
                    "field": "series_name",
                    "type": "quantitative",
                    "aggregate": "count"
                }
            },
            "VQL": "Visualize BAR SELECT country, count(series_name) FROM tvshow GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How about their distribution by language within each country?",
            "Vega-lite Code": {
                "type": "nested",
                "x": {
                    "field": "country",
                    "type": "nominal"
                },
                "y": {
                    "field": "series_name",
                    "type": "quantitative",
                    "aggregate": "count"
                },
                "color": {
                    "field": "language",
                    "type": "nominal"
                }
            },
            "VQL": "Visualize NESTED SELECT country, language, count(series_name) FROM tvshow GROUP BY country, language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Display a line chart showing the viewership trend over time.",
            "Vega-lite Code": {
                "type": "line",
                "x": {
                    "field": "air_date",
                    "type": "temporal"
                },
                "y": {
                    "field": "viewers_m",
                    "type": "quantitative",
                    "aggregate": "average"
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(viewers_m) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now show the trend for the top 5 ranked channels.",
            "Vega-lite Code": {
                "type": "line",
                "x": {
                    "field": "air_date",
                    "type": "temporal"
                },
                "y": {
                    "field": "viewers_m",
                    "type": "quantitative",
                    "aggregate": "average"
                },
                "color": {
                    "field": "channel",
                    "type": "nominal"
                }
            },
            "VQL": "Visualize LINE SELECT air_date, channel, AVG(viewers_m) FROM tv_series WHERE channel IN (SELECT channel FROM tv_series ORDER BY weekly_rank ASC LIMIT 5) GROUP BY air_date, channel",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV Series grouped by their air date",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT air_date, count(*) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What is the distribution of TV Channel series based on language representation?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "language",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT language, count(*) FROM tv_channel GROUP BY language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Can you show a pie chart of TV Channels and their respective total viewers in million?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, sum(viewers_m) FROM tv_series GROUP BY channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "What is the weekly ranking trend of TV series across channels?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, avg(weekly_rank) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the average rating per tv channel.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "tv_channel",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT tv_channel, AVG(rating) FROM tv_series GROUP BY tv_channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the number of series per tv channel.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "series_name",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "tv_channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT COUNT(series_name), tv_channel FROM tv_channel GROUP BY tv_channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Next, Can I see a scatter plot comparing the viewership and average rating across all episodes?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT viewers_m, rating FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Lastly, display a line chart detailing the change in average rating over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(rating) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV shows grouped by their package options",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "package_option",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT package_option, count(*) FROM tvshow GROUP BY package_option",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now, plot a pie chart showcasing the share of these package options",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "package_option",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT package_option, count(*) FROM tvshow GROUP BY package_option",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Let's see the ratings distribution of TV series episodes using a box plot",
            "Vega-lite Code": {
                "mark": "boxplot",
                "encoding": {
                    "y": {
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BOXPLOT SELECT rating FROM tv_series",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Can we look at the average rating per episode over time, represented by a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(rating) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV series grouped by their channel.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "series_name",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT count(series_name) FROM tv_channel GROUP BY channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now show a line chart representing the rating of these tv series over the air date.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, rating FROM tv_series WHERE channel IN (SELECT channel FROM tv_channel) GROUP BY air_date, channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Can you now show a pie chart representing the share of viewers for these channels?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT channel, SUM(viewers_m) FROM tv_series WHERE channel IN (SELECT channel FROM tv_channel) GROUP BY channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show the scatter plot of the rating vs the share of TV series for the same channels.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "share",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "channel",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT rating, share FROM tv_series WHERE channel IN (SELECT channel FROM tv_channel)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of TV series grouped by their ratings.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "id"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT rating, count(*) FROM tv_series GROUP BY rating",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How about those TV series with a rating greater than 4?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "rating",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "id"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.rating > 4"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT rating, count(*) FROM tv_series WHERE rating > 4 GROUP BY rating",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show a line chart of the viewer count over time for the TV series with a rating above 4.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.rating > 4"
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT air_date, viewers_m FROM tv_series WHERE rating > 4",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Plot a pie chart of the share of TV series per language.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "language",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Can you show me a bar graph with the number of TV shows sorted by their channels?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "tv_channel",
                        "type": "ordinal",
                        "title": "TV Channel"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "count of TV Shows"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT tv_channel, count(*) FROM tvshow GROUP BY tv_channel",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "How about displaying a pie chart of the percentage of TV shows in each language?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "language",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, count(*) FROM tvshow GROUP BY language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Can we get a line chart showing the weekly ranking pattern of TV series over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal",
                        "title": "Air Date"
                    },
                    "y": {
                        "field": "weekly_rank",
                        "type": "ordinal",
                        "title": "Weekly Rank"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, average(weekly_rank) FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Now let's plot a scatter chart for the 18-49 rating shares vs viewers_m for each TV episode.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "18_49_rating_share",
                        "type": "quantitative",
                        "title": "18-49 Rating Share"
                    },
                    "y": {
                        "field": "viewers_m",
                        "type": "quantitative",
                        "title": "Number of Viewers in Million"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT 18_49_rating_share, viewers_m FROM tv_series",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of TV shows by country",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, count(*) FROM tvshow GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Which TV channels have the most TV shows in the United States?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "tv_channel",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT tv_channel, count(*) FROM tvshow WHERE country='United States' GROUP BY tv_channel",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Show the trend of average rating of TV series over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "air_date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "avg_rating",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT air_date, AVG(rating) as avg_rating FROM tv_series GROUP BY air_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        },
        {
            "Natural Language Query": "Compare the number of cartoons aired by each channel",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "channel",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT channel, count(*) FROM cartoon GROUP BY channel",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | tvshow | tv_channel : id , series_name , country , language , content , pixel_aspect_ratio_par , hight_definition_tv , pay_per_view_ppv , package_option | tv_series : id , episode , air_date , rating , share , 18_49_rating_share , viewers_m , weekly_rank , channel | cartoon : id , title , directed_by , written_by , original_air_date , production_code , channel"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties on sale grouped by type.",
            "Vega-lite code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM real_estate_properties GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Plot line graph showing change in the number of apartment type properties put on sale over time.",
            "Vega-lite code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date on Market"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Apartments"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, count(*) FROM real_estate_properties WHERE property_type_code = 'APT' GROUP BY date_on_market ORDER BY date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the pie chart of the average offered price per property type.",
            "Vega-lite code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "average_price",
                        "type": "quantitative",
                        "title": "Average Offered Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_description, AVG(buyer_offered_price) as average_price FROM real_estate_properties GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the same data but in a bar chart instead?",
            "Vega-lite code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "average_price",
                        "type": "quantitative",
                        "title": "Average Offered Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(buyer_offered_price) as average_price FROM real_estate_properties GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of different property types on market over time in a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code=ref_property_types.property_type_code GROUP BY date_on_market, property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a bar chart of average offered prices grouped by different property types",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(buyer_offered_price) FROM properties INNER JOIN ref_property_types ON properties.property_type_code=ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What about the average selling prices?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties INNER JOIN ref_property_types ON properties.property_type_code=ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of rooms and agreed selling prices for apartments",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT room_count, agreed_selling_price FROM properties WHERE property_type_code='apt'",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of properties per property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal",
                        "sort": "y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What's the average vendor requested price for each type?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal",
                        "sort": "y"
                    },
                    "y": {
                        "field": "vendor_requested_price",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, avg(vendor_requested_price) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Correference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Compare that with the average buying price.",
            "Vega-lite Code": {
                "mark": {
                    "type": "line",
                    "point": "filled"
                },
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal",
                        "sort": "y"
                    },
                    "y": {
                        "field": "avg_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "price_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT property_type_description, 'Vendor Price' as price_type, avg(vendor_requested_price) as avg_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description UNION SELECT property_type_description, 'Buyer Price' as price_type, avg(buyer_offered_price) as avg_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart of the proportion of each feature across all properties.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "feature_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "feature_type_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT feature_type_name, count(*) as feature_count FROM other_available_features JOIN ref_feature_types ON other_available_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now show me the average selling price for each type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "aggregate": "average",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What is the distribution of selling prices for properties with 'Jacuzzi' feature?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "bin": true,
                        "title": "Selling Price"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.feature_name === 'Jacuzzi'"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT agreed_selling_price, COUNT(*) FROM properties JOIN other_property_features ON properties.property_id = other_property_features.property_id WHERE other_property_features.feature_name = 'Jacuzzi' GROUP BY agreed_selling_price",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the spread of agreed selling price for different types of properties on a box plot.",
            "Vega-lite Code": {
                "mark": "boxplot",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BOXPLOT SELECT property_type_description, agreed_selling_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, I want to see the average offered price by buyers for the same property types.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(buyer_offered_price) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Another interesting angle could be analysing the number of rooms in each property type.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "size": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT property_type_description, AVG(room_count), COUNT(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Lastly, show a scatterplot of the date properties went on market against their selling price.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT date_on_market, agreed_selling_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the average selling prices grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "avg(agreed_selling_price)",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ref_property_types.property_type_description, avg(properties.agreed_selling_price) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY ref_property_types.property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now show a pie chart of the different property types available in the market.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count(*)",
                        "type": "quantitative",
                        "title": "Amount"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ref_property_types.property_type_description, count(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY ref_property_types.property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "And for these properties, can we see a scatter plot showing the correlation between the vendor requested price and the buyer offered price?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT properties.vendor_requested_price, properties.buyer_offered_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally, how about a line chart showing the trend of average agreed selling price over the time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date on Market"
                    },
                    "y": {
                        "field": "avg(agreed_selling_price)",
                        "type": "quantitative",
                        "title": "Average Agreed Selling Price"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT properties.date_on_market, avg(properties.agreed_selling_price) FROM properties GROUP BY properties.date_on_market",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of properties by property type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                },
                "title": "Number of Properties by Property Type"
            },
            "VQL": "Visualize PIE SELECT property_type_description, COUNT(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What's the average selling price for each type of property?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "avg_price",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                },
                "title": "Average Selling Price per Property Type"
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) as avg_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you compare that with the vendor requested price?",
            "Vega-lite Code": {
                "mark": {
                    "type": "line",
                    "point": true
                },
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": [
                        {
                            "field": "avg_sales_price",
                            "type": "quantitative",
                            "aggregate": "average",
                            "title": "Average Sales Price"
                        },
                        {
                            "field": "avg_req_price",
                            "type": "quantitative",
                            "aggregate": "average",
                            "title": "Average Vendor Requested Price"
                        }
                    ]
                },
                "title": "Comparison of Average Selling Price and Vendor Requested Price by Property Type"
            },
            "VQL": "Visualize LINE SELECT property_type_description, AVG(agreed_selling_price) as avg_sales_price, AVG(vendor_requested_price) as avg_req_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How this compare for properties with different number of rooms?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "y": [
                        {
                            "field": "avg_sales_price",
                            "type": "quantitative",
                            "aggregate": "average",
                            "title": "Average Sales Price"
                        },
                        {
                            "field": "avg_req_price",
                            "type": "quantitative",
                            "aggregate": "average",
                            "title": "Average Vendor Requested Price"
                        }
                    ],
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                },
                "title": "Comparison of Average Selling Price and Vendor Requested Price by Property Type and Room Count"
            },
            "VQL": "Visualize SCATTER SELECT room_count, property_type_description, AVG(agreed_selling_price) as avg_sales_price, AVG(vendor_requested_price) as avg_req_price FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY room_count, property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of properties on sale grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you then show the average price range within each property type?",
            "Vega-lite Code": {
                "mark": "range",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    },
                    "y2": {
                        "aggregate": "mean",
                        "field": "vendor_requested_price"
                    }
                }
            },
            "VQL": "Visualize RANGE SELECT property_type_code, avg(buyer_offered_price), avg(vendor_requested_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the distribution of the number of rooms for 'Residential' type property?",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, count(*) FROM properties WHERE property_type_code = 'Residential' GROUP BY room_count",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of property types in the market.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price for each property type.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "field": "agreed_selling_price",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How does the selling price vary over time?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, agreed_selling_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the frequency of each feature in the property dataset.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "feature_type_name",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT feature_type_name, count(*) FROM other_property_features JOIN ref_feature_types ON other_property_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties on the market grouped by property type.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties JOIN ref_property_types on properties.property_type_code = ref_property_types.property_type_code GROUP By property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How does the average vendor requested price vary by property type?",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "vendor_requested_price",
                        "aggregate": "mean",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT property_type_description, AVG(vendor_requested_price) FROM properties JOIN ref_property_types on properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What are the most common features across the different property types?",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "feature_name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT feature_name, count(*) FROM other_available_features JOIN other_property_features on other_available_features.feature_type_code = other_property_features.feature_id GROUP By feature_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a scatter plot of buyer offered price against the vendor requested price.",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT vendor_requested_price, buyer_offered_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of properties count listed in each year",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date_on_market",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT YEAR(date_on_market), COUNT(*) FROM properties GROUP BY YEAR(date_on_market)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you break them down by property type?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date_on_market",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "legend": {
                            "title": "Property Type"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT YEAR(date_on_market), COUNT(*), property_type_code FROM properties GROUP BY YEAR(date_on_market), property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price for each property type over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date_sold",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "legend": {
                            "title": "Property Type"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_sold), AVG(agreed_selling_price), property_type_code FROM properties GROUP BY YEAR(date_sold), property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the average selling price in relation to the date put on market?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date_on_market",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "legend": {
                            "title": "Property Type"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_on_market), AVG(agreed_selling_price), property_type_code FROM properties GROUP BY YEAR(date_on_market), property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of properties grouped by property type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "legend": null
                    }
                },
                "view": {
                    "stroke": null
                },
                "width": 500,
                "height": 300
            },
            "VQL": "Visualize PIE SELECT property_type_description, count(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How many properties features are available for each property type?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "Count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                },
                "width": 500,
                "height": 300
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(feature_id) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code JOIN other_property_features ON properties.property_id = other_property_features.property_id GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart of date sold vs agreed selling price.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                },
                "width": 600,
                "height": 400
            },
            "VQL": "Visualize LINE SELECT date_sold, agreed_selling_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "On a scatter plot, show the relationship between room count and agreed selling price.",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                },
                "width": 600,
                "height": 400
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price FROM properties",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart of the number of properties on the market grouped by their property type.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price for each property type as a line chart.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "average",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT property_type_description, AVG(agreed_selling_price) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Present a scatter plot showing the correlation between the number of rooms and selling price, divided by property types.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price, property_type_description FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Display a pie chart showcasing the distribution of feature types among all available features.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Features"
                    },
                    "color": {
                        "field": "feature_type_name",
                        "type": "nominal",
                        "title": "Feature Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT feature_type_name, count(*) FROM other_available_features JOIN ref_feature_types ON other_available_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the average property asking price grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "average",
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Average Requested Price"
                    },
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-x",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, avg(vendor_requested_price) FROM properties INNER JOIN ref_property_types on properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the average buying offer price based on the property type?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "average",
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Average Offered Price"
                    },
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-x",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, avg(buyer_offered_price) FROM properties INNER JOIN ref_property_types on properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, let's compare the average agreed selling price by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    },
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "sort": "-x",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, avg(agreed_selling_price) FROM properties INNER JOIN ref_property_types on properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of properties on the market grouped by their property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "property_id",
                        "type": "quantitative",
                        "title": "Count of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(property_id) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the average buyer offered price for each property type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "avg_buyer_offered_price",
                        "type": "quantitative",
                        "title": "Average Buyer-offered Price"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_code, avg(buyer_offered_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can we see a line chart representing the trend of count of properties sold per month?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "yearmonth(date_sold)",
                        "type": "temporal",
                        "title": "Month"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "property_id",
                        "type": "quantitative",
                        "title": "Count of Properties Sold"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT yearmonth(date_sold), count(property_id) FROM properties WHERE date_sold is not Null GROUP BY yearmonth(date_sold)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally, can we see a scatter chart comparing vendor requested price and agreed selling price for each property?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Agreed Selling Price"
                    },
                    "color": {
                        "field": "property_id",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT property_id, vendor_requested_price, agreed_selling_price FROM properties WHERE vendor_requested_price is not Null AND agreed_selling_price is not Null",
            "Context Dependency Type": "Ellipse",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of property types in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "property_type_description",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_description, count(*) FROM properties GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How many of each property type were sold each year?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "field": "number_of_properties",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_sold), count(*), property_type_description FROM properties GROUP BY YEAR(date_sold), property_type_description",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average agreed selling price per property type in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "average_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Plot a scatter chart showing the correlation between room count and buyer offered price.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, buyer_offered_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of houses grouped by their date on market.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT date_on_market, count(*) FROM real_estate_properties WHERE property_type_code = 'hse' GROUP BY date_on_market",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Display a line chart, showing the trend of properties sold over time, grouped by property types.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, count(*), property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY date_sold, property_type_description ORDER BY date_sold",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you plot a scatter plot of the requested price versus the offered price for each type of property?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price, property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of features grouped by their feature types.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "feature_type_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT feature_type_name, COUNT(*) FROM other_available_features INNER JOIN ref_feature_types ON other_available_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of properties organized by their type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "property_type_code"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price over time for all property types.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, AVG(agreed_selling_price) FROM properties GROUP BY date_sold, property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Compare the trend of vendor requested price and buyer offered price over time for the properties of previous type.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y2": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, AVG(vendor_requested_price), AVG(buyer_offered_price) FROM properties WHERE property_type_description=PreviousType GROUP BY date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties on market by property type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "property_id",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(property_id) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show a line chart of the average property prices over time by property type.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Price"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, mean(agreed_selling_price), property_type_code FROM properties GROUP BY date_on_market, property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can I have a pie chart showing the number of features by feature type?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "feature_id",
                        "type": "quantitative",
                        "title": "Number of Features"
                    },
                    "color": {
                        "field": "feature_type_code",
                        "type": "nominal",
                        "title": "Feature Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT feature_type_code, count(feature_id) FROM other_available_features GROUP BY feature_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Lastly, show a scatter plot of the buyer offered price versus the agreed selling price for the type of properties we discussed before.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Agreed Selling Price"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT buyer_offered_price, agreed_selling_price, property_type_code FROM properties",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of properties grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Total Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price for each property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "aggregate": "mean",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the distribution of the number of rooms in these properties in a histogram.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "bin": true,
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT room_count, count(*) FROM properties GROUP BY room_count",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs INNER JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How many students are enrolled in each semester?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT semester_name, count(*) FROM semesters INNER JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What's the number of students registered for each course?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_name, count(*) FROM courses INNER JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id GROUP BY course_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you show me this data in a pie chart instead?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "course_name",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "count",
                        "type": "quantitative"
                    }
                },
                "view": {
                    "stroke": "transparent"
                }
            },
            "VQL": "Visualize PIE SELECT course_name, count(*) FROM courses INNER JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id GROUP BY course_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart that shows the total number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "title": "Degree Program"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "No. of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show me the number of students registered in each semester in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "y": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "title": "Semester"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "No. of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(*) FROM student_enrolment INNER JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Represent the distribution of the students' permanent addresses by country in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, count(*) FROM students INNER JOIN addresses ON students.permanent_address_id = addresses.address_id GROUP BY country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Finally, plot a scatter chart showing the number of courses taken by each student.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "y": {
                        "field": "student_id",
                        "type": "ordinal",
                        "title": "Student ID"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "No. of Courses"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, count(*) FROM student_enrolment_courses INNER JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id GROUP BY student_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "How many students are enrolled in each degree program?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What\u2019s the percentage of each degree program to total enrolment?",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "stat": "count"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_summary_name, (count(*)/ (SELECT COUNT(*) FROM student_enrolment))*100 as percentage FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How this distribution changed over semesters?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name, degree_summary_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Which course they took the most?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "course_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_name, count(*) FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs GROUP BY degree_summary_name HAVING count(*) >= ALL(SELECT count(*) FROM degree_programs GROUP BY degree_summary_name)) GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': { 'field': 'degree_program_id', 'type': 'quantitative', 'aggregate': 'count' }, 'color': { 'field': 'degree_program_id', 'type': 'nominal', 'legend': null } }, 'view': { 'stroke': null } }",
            "VQL": "Visualize PIE SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id.",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Which course has the most enrollments?",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': { 'field': 'course_id', 'type': 'nominal', 'sort': '-y' }, 'y': { 'field': 'course_id', 'type': 'quantitative', 'aggregate': 'count' } } }",
            "VQL": "Visualize BAR SELECT course_id, count(*) FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1.",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show the trend of students' enrollment in this course over semesters.",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': { 'field': 'semester_id', 'type': 'temporal' }, 'y': { 'field': 'course_id', 'type': 'quantitative', 'aggregate': 'count' } } }",
            "VQL": "Visualize LINE SELECT semester_id, count(*) FROM student_enrolment JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id WHERE student_enrolment_courses.course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1) GROUP BY semester_id ORDER BY semester_id.",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "In which department is this course?",
            "Vega-lite Code": "{ 'mark': 'point', 'encoding': { 'y': { 'field': 'course_id', 'type': 'nominal' }, 'x': { 'field': 'department_id', 'type': 'nominal' } } }",
            "VQL": "Visualize POINT SELECT course_id, department_id FROM departments JOIN degree_programs ON departments.department_id = degree_programs.department_id JOIN sections ON degree_programs.degree_program_id = sections.degree_program_id WHERE sections.course_id = (SELECT course_id FROM student_enrolment_courses GROUP BY course_id ORDER BY count(*) DESC LIMIT 1).",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart of the students registered in each degree program",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "degree_program_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show me a line chart of the number of students registered per semester.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "student_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_id, count(student_id) FROM student_enrolment GROUP BY semester_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you split that by degree program?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "student_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_id, degree_program_id, count(student_id) FROM student_enrolment GROUP BY semester_id, degree_program_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of students per degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_program_id GROUP BY degree_programs.degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the count of students in each semester",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "semester_name",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    },
                    "text": {
                        "aggregate": "count",
                        "field": "*"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, count(*) FROM semesters JOIN student_enrolment on semester_id GROUP BY semesters.semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How did the count of students change over time, per each semester",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "transcript_date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, transcript_date, count(*) FROM semesters JOIN student_enrolment on semester_id JOIN transcripts on student_id GROUP BY semester_name, transcript_date ORDER BY transcript_date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Which department has the most student enrollment",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, count(*) FROM departments JOIN degree_programs on department_id JOIN student_enrolment on degree_program_id GROUP BY departments.department_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students per degree program.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'y': {'field': 'degree_summary_name', 'type': 'ordinal'}, 'x': {'aggregate': 'count', 'field': 'student_id', 'type': 'quantitative'} }}",
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id) FROM degree_programs INNER JOIN student_enrolment ON degree_programs.degree_program_id=student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show a pie chart distribution of students in different semesters",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': {'field': 'semester_name', 'type': 'ordinal', 'stack': true}, 'color': {'aggregate': 'count', 'field': 'student_id', 'type': 'nominal', 'legend': { 'title': 'Semester' } } }}",
            "VQL": "Visualize PIE SELECT semester_name, count(student_id) FROM semesters INNER JOIN student_enrolment ON semesters.semester_id=student_enrolment.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "For the students in the first semester, show a line chart representation of their course enrolment over time.",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': {'field': 'transcript_date', 'type': 'temporal'}, 'y': {'aggregate': 'count', 'field': 'student_course_id', 'type': 'quantitative'}, 'color': {'field': 'course_name'} }}",
            "VQL": "Visualize LINE SELECT transcript_date, course_name, count(student_course_id) FROM student_enrolment_courses INNER JOIN transcripts ON student_enrolment_courses.student_course_id=transcripts.transcript_id INNER JOIN semesters ON student_enrolment.semester_id=semesters.semester_id INNER JOIN courses ON student_enrolment_courses.course_id=courses.course_id WHERE semester_name='First Semester' GROUP BY transcript_date, course_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart indicating the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_summary_name, count(student_id) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a bar chart for the number of male and female students in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id), gender FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id INNER JOIN students ON student_enrolment.student_id = students.student_id GROUP BY degree_summary_name, gender",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What about the distribution of students across different departments?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, count(student_id) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id INNER JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line graph of the number of students registered each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_first_registered) AS year, count(student_id) FROM students GROUP BY year",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart showing the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a pie chart for the same data.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "degree_summary_name",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you further breakdown the number of students in each degree program by semester in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment on degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN semesters on student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name, degree_summary_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A bar chart that shows the number of students enrolled in each degree program.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now breakdown the previous query by semesters, i.e., number of students enrolled in each degree program per semester.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A bar chart that shows the number of students enrolled in each degree program per semester.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "semester_id",
                        "type": "nominal",
                        "title": "Semester"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, semester_id, count(*) FROM student_enrolment GROUP BY degree_program_id, semester_id.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How about a line chart showing the trend of enrollments in each degree program over semesters?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A line chart showing the trend of enrollments in each degree program over semesters.",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "nominal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_id, degree_program_id, count(*) FROM student_enrolment GROUP BY semester_id, degree_program_id ORDER BY semester_id.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "On the same line chart, now show only the enrollments for the Computer Science program over semesters.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A line chart showing the trend of enrollments in the Computer Science program over semesters.",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "nominal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                },
                "transform": [
                    {
                        "filter": {
                            "field": "degree_program_id",
                            "equal": "Computer Science"
                        }
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT semester_id, count(*) FROM student_enrolment WHERE degree_program_id='Computer Science' GROUP BY semester_id ORDER BY semester_id.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of students registered for each degree program as a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show the percentage of student enrolment in each semester as a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, count(student_id) FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you also plot a line chart showing the number of students who left each year?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "left_year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_left) AS left_year, count(student_id) FROM students WHERE date_left IS NOT NULL GROUP BY left_year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of students' registered date versus their leaving date.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "date_left",
                        "type": "temporal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT date_first_registered, date_left FROM students",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart representing the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "axis": {
                            "title": "Degree Program"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Students"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(*) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a pie chart representing the number of students enrolled in each department.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal",
                        "legend": {
                            "title": "Department"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT department_name, COUNT(*) FROM degree_programs INNER JOIN departments ON degree_programs.department_id=departments.department_id INNER JOIN student_enrolment ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY department_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "For the largest department you just mentioned, show a scatter plot of students by the courses they enrolled in.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "nominal",
                        "axis": {
                            "title": "Course"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Students"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT course_name, COUNT(*) FROM students INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id INNER JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id INNER JOIN courses ON student_enrolment_courses.course_id = courses.course_id WHERE department_id =(SELECT department_id FROM departments ORDER BY COUNT(student_id) DESC LIMIT 1) GROUP BY course_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "And now, display a line chart showing the trend of students' registration in these courses over the semesters.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal",
                        "axis": {
                            "title": "Semester"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Students"
                        }
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal",
                        "legend": {
                            "title": "Course"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, course_name, COUNT(*) FROM students INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id INNER JOIN student_enrolment_courses ON student_enrolment.student_enrolment_id = student_enrolment_courses.student_enrolment_id INNER JOIN courses ON student_enrolment_courses.course_id = courses.course_id INNER JOIN semesters ON student_enrolment.semester_id = semesters.semester_id WHERE department_id = (SELECT department_id FROM departments ORDER BY COUNT(student_id) DESC LIMIT 1) GROUP BY semester_name, course_name ORDER BY semester_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each department.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "nominal",
                        "title": "Department"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, COUNT(*) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Detaliate the previous chart by the number of students in each degree program within the departments.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_code",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal",
                        "title": "Department"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, degree_code, COUNT(*) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name, degree_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a line chart of the trend of each department's student enrollments over semesters.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "nominal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal",
                        "title": "Department"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, department_name, COUNT(*) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name, department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Finally, let's have a pie chart illustrating the proportion of students within different courses.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "course_name",
                        "type": "nominal",
                        "title": "Course Name",
                        "stack": true
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT course_name, COUNT(*) FROM students JOIN student_enrolment_courses ON students.student_id = student_enrolment_courses.student_id JOIN courses ON student_enrolment_courses.course_id = courses.course_id GROUP BY course_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart showing the total number of students in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                },
                "config": {
                    "title": "Number of Students in Each Degree Program"
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart of students distribution among different semesters.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": null
                },
                "config": {
                    "title": "Students Distribution Among Semesters"
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, count(student_id) FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What's the gender distribution among students?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sex",
                        "type": "nominal"
                    }
                },
                "config": {
                    "title": "Gender Distribution Among Students"
                }
            },
            "VQL": "Visualize BAR SELECT sex, count(student_id) FROM students GROUP BY sex",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line graph of students registration over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                },
                "config": {
                    "title": "Number of Students Registered Over the Years"
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_first_registered) as year, count(student_id) FROM students GROUP BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id=student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now compare this with the number of courses each student is enrolled in.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT student_id, count(*) FROM students JOIN student_enrolment_courses ON students.student_id=student_enrolment_courses.student_enrolment_id GROUP BY student_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Break down the first chart, showing the number of students in each semester as a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id=student_enrolment.degree_program_id JOIN semesters ON semesters.semester_id=student_enrolment.semester_id GROUP BY semester_name, degree_summary_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What are the top 5 courses with the highest number of students?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "window": [
                            {
                                "op": "rank",
                                "as": "rank"
                            }
                        ],
                        "sort": [
                            {
                                "field": "count",
                                "order": "descending"
                            }
                        ]
                    },
                    {
                        "filter": "(datum.rank <= 5)"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT course_name, count(*) FROM courses JOIN student_enrolment_courses ON courses.course_id=student_enrolment_courses.course_id GROUP BY course_name ORDER BY count(*) DESC LIMIT 5",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "field": "student_id",
                        "title": "Number of Students",
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(student_id) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the cities the students come from.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "city",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT city, count(*) FROM addresses JOIN students ON addresses.address_id = students.permanent_address_id GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How has student enrollment changed over time?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "transcript_date",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "field": "student_id",
                        "type": "quantitative",
                        "aggregate": "count",
                        "title": "Number of Students Enrolled"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT transcript_date, count(student_id) FROM transcripts JOIN transcript_contents ON transcripts.transcript_id = transcript_contents.transcript_id JOIN student_enrolment_courses ON transcript_contents.student_course_id = student_enrolment_courses.student_course_id GROUP BY YEAR(transcript_date)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of courses taken by students",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": {
                    "type": "point",
                    "filled": true
                },
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "nominal",
                        "title": "Student ID"
                    },
                    "y": {
                        "field": "course_id",
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Courses Taken"
                    },
                    "color": {
                        "field": "course_id",
                        "type": "nominal",
                        "title": "Courses ID"
                    },
                    "tooltip": [
                        {
                            "field": "student_id",
                            "type": "nominal"
                        },
                        {
                            "field": "course_id",
                            "type": "nominal"
                        }
                    ]
                }
            },
            "VQL": "Visualize POINT SELECT student_id, count(course_id), course_id FROM student_enrolment_courses GROUP BY student_id, course_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled per degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id=degree_programs.degree_program_id GROUP BY degree_summary_name;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a pie chart divided by the number of students in each department.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT department_name, count(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id=degree_programs.degree_program_id JOIN departments ON departments.department_id=degree_programs.department_id GROUP BY department_name;",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "And what about the number of students per semester?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT semester_name, count(*) FROM student_enrolment JOIN semesters ON student_enrolment.semester_id=semesters.semester_id GROUP BY semester_name;",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of students enrolled in each degree program as a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(*) FROM degree_programs INNER JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Among these, show the number of students per semester for the most popular degree program.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "nominal",
                        "sort": "y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, COUNT(*) FROM semesters INNER JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1) GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show the distribution of the registered courses for the students of this program for the latest semester.",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "course_name",
                        "type": "nominal",
                        "stack": true
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT course_name, COUNT(*) FROM courses INNER JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM semesters ORDER BY semester_name DESC LIMIT 1) and degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)) GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of students enrolled in each degree program.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Student Enrollment in Degree Programs",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "student_id",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line chart of the total number of students enrolled in each semester for the most popular degree program.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Semester Enrollment for Popular Degree Program",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "student_id",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, COUNT(*) FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.semester_id WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1) GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a scatter plot of the students by their first registration date and the number of courses they've taken.",
            "Vega-Lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Student Course Load Over Time",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal",
                        "title": "First Registration Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "course_id",
                        "title": "Number of Courses Taken"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT date_first_registered, COUNT(*) FROM students JOIN student_enrolment_courses ON students.student_id = student_enrolment_courses.student_enrolment_id GROUP BY date_first_registered",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students registered in each semester.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "semester_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT semester_id, count(*) FROM student_enrolment GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "In those semesters, how many students are enrolled in each degree program?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "degree_program_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal",
                        "sort": "y"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(*), semester_name, degree_summary_name FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id=degree_programs.degree_program_id GROUP BY semester_name, degree_summary_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show me the distribution of students who enrolled in the Computer Science program over different semesters.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "y": {
                        "field": "student_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT student_id, count(*), semester_name FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id=degree_programs.degree_program_id WHERE degree_summary_name='Computer Science' GROUP BY semester_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the breakdown of concert themes",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT theme, COUNT(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How many concerts are organized by different stadiums",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, COUNT(concert.concert_id) as concert_count FROM stadium INNER JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show the age distribution of singers who performed in concerts",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "singer_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT singer.age, COUNT(singer.singer_id) as singer_count FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show the number of concerts performed by male and female singers in each year",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "is_male",
                        "type": "nominal"
                    },
                    "size": {
                        "field": "concert_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize Scatter SELECT concert.year, singer.is_male, COUNT(concert.concert_id) as concert_count FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert.year, singer.is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the average stadium capacity categorized by location.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "location",
                        "type": "nominal",
                        "sort": "y"
                    },
                    "x": {
                        "aggregate": "average",
                        "field": "capacity",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, AVG(capacity) FROM stadium GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Visualize the distribution of stadium size based on their highest and lowest altitude using a scatter chart.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "highest",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "lowest",
                        "type": "quantitative"
                    },
                    "size": {
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT highest, lowest, capacity FROM stadium",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Does the release year of the song affect the singer's participation in concerts? Show a line chart of counts of concerts by song release year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT song_release_year, COUNT(concert_id) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY song_release_year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of concerts hosted by each stadium.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "stadium_id",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT stadium_id, count(*) FROM stadium GROUP BY stadium_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, let's see a bar chart of the concert themes for the stadium with the most concerts.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, count(*) FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY count(*) DESC LIMIT 1) GROUP BY theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can we get a line chart representing the number of concerts hosted over the years for the top-theme in the stadium?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(concert_id) FROM concert WHERE theme = (SELECT theme FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY count(*) DESC LIMIT 1) GROUP BY theme ORDER BY count(*) DESC LIMIT 1) GROUP BY year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Lastly, show a scatter plot of the singer age and the number of their concerts for this top-theme.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, count(singer_id) FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id WHERE concert_id IN (SELECT concert_id FROM concert WHERE theme = (SELECT theme FROM concert WHERE stadium_id = (SELECT stadium_id FROM stadium ORDER BY count(*) DESC LIMIT 1) GROUP BY theme ORDER BY count(*) DESC LIMIT 1)) GROUP BY age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart depicting the capacity of different stadiums.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "name",
                        "type": "ordinal",
                        "title": "Stadium"
                    },
                    "x": {
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Capacity"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, capacity FROM stadium ORDER BY capacity DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What is the minimum, maximum and average capacity values across all stadiums?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "measure",
                        "type": "ordinal",
                        "title": "Measure"
                    },
                    "x": {
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Capacity"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT 'Highest' AS measure, highest FROM stadium UNION ALL SELECT 'Lowest', lowest FROM stadium UNION ALL SELECT 'Average', average FROM stadium",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Let's see the distribution of concerts in terms of their themes, shown as a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal",
                        "title": "Theme"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT theme, COUNT(*) as count FROM concert GROUP BY theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show me a scatter plot that reflects the age of singers and their corresponding song release year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "y": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Age of Singer"
                    },
                    "x": {
                        "field": "song_release_year",
                        "type": "quantitative",
                        "title": "Song Release Year"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT age, song_release_year FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts by year",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year, count(*) FROM concert GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show a pie chart of the number of male and female singers",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "is_male",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_male, count(*) FROM singer GROUP BY is_male",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you display a line chart showing the average stadium capacity over the years?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "average",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, average(capacity) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Finally, display a scatter plot of singers' age versus the release year of their songs",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "song_release_year",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, song_release_year FROM singer",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of concerts held at each stadium.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "location",
                        "type": "ordinal",
                        "title": "Locations"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.location, count(*) FROM concert INNER JOIN stadium on concert.stadium_id = stadium.stadium_id GROUP BY stadium.location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show me a pie chart of the number of male and female singers.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal",
                        "title": "Gender"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.is_male, count(*) FROM singer GROUP BY singer.is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about the age distribution of those singers?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Singers"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT singer.age, count(*) FROM singer GROUP BY singer.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Display a scatter plot showing the relation between singer's age and the number of concerts they have participated in.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "y": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Age"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.age, count(*) FROM singer_in_concert INNER JOIN singer on singer_in_concert.singer_id = singer.singer_id GROUP BY singer.age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total capacity of stadiums grouped by their location.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart representing stadium capacity categorized by location",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal",
                        "title": "Location"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Total Capacity"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, sum(capacity) FROM stadium GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of male and female singers.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A pie chart representing the percentage of male and female singers",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "quantitative",
                        "title": "Number of Singers"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal",
                        "title": "Gender",
                        "scale": {
                            "domain": [
                                "true",
                                "false"
                            ],
                            "range": [
                                "#1f77b4",
                                "#ff7f0e"
                            ]
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*), is_male FROM singer GROUP BY is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "For each concert, show a line chart of the number of attending singers.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart synonymous with the number of singers present at each concert",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert_id",
                        "type": "ordinal",
                        "title": "Concert"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative",
                        "title": "Number of Singers"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert_id, count(singer_id) FROM singer_in_concert GROUP BY concert_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "And the age distribution of these singers?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A histogram chart illustrating the age distribution of singers",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": true,
                        "field": "age",
                        "title": "Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative",
                        "title": "Number of Singers"
                    }
                }
            },
            "VQL": "Visualize HISTOGRAM SELECT age, count(singer_id) FROM singer GROUP BY age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total stadium capacities grouped by location.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, SUM(capacity) FROM stadium GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Then, for each country, show a line chart of the number of concerts over years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, country, COUNT(*) FROM concert JOIN singer_in_concert ON concert.concert_id=singer_in_concert.concert_id JOIN singer ON singer_in_concert.singer_id=singer.singer_id GROUP BY year, country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show the scatter plot of age vs song release year for the singers.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "song_release_year",
                        "type": "temporal"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, song_release_year, is_male FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about the average stadium capacity in each country?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, AVERAGE(capacity) FROM stadium GROUP BY location",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of concerts for each location.",
            "Vega-lite Code": "{ \"mark\": \"bar\", \"encoding\": { \"x\": { \"field\": \"location\", \"type\": \"nominal\" }, \"y\": { \"aggregate\": \"count\", \"field\": \"concert_id\", \"type\": \"quantitative\" } } }",
            "VQL": "Visualize BAR SELECT location, count(*) FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now how about a pie chart showing the number of concerts by theme?",
            "Vega-lite Code": "{ \"mark\": \"arc\", \"encoding\": { \"theta\": { \"aggregate\": \"count\", \"field\": \"concert_id\", \"type\": \"quantitative\" }, \"color\": { \"field\": \"theme\", \"type\": \"nominal\" } } }",
            "VQL": "Visualize PIE SELECT theme, count(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Let's see a scatter plot of stadium capacity and the number of concerts held there.",
            "Vega-lite Code": "{ \"mark\": \"point\", \"encoding\": { \"x\": { \"field\": \"capacity\", \"type\": \"quantitative\" }, \"y\": { \"aggregate\": \"count\", \"field\": \"concert_id\", \"type\": \"quantitative\" }, \"color\": { \"field\": \"location\", \"type\": \"nominal\" } } }",
            "VQL": "Visualize SCATTER SELECT capacity, count(*) FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY capacity",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Finally, can we get a line chart that represents the number of concerts over the years?",
            "Vega-lite Code": "{ \"mark\": \"line\", \"encoding\": { \"x\": { \"field\": \"year\", \"type\": \"temporal\" }, \"y\": { \"aggregate\": \"count\", \"field\": \"concert_id\", \"type\": \"quantitative\" } } }",
            "VQL": "Visualize LINE SELECT year, count(*) FROM concert GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts each singer has been in.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "singer.name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.name, count(concert_id) FROM singer_in_concert GROUP BY singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me a pie chart of the distribution of male and female singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARCS SELECT is_male, count(*) FROM singer GROUP BY is_male",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you show a line chart of the number of concerts held in each stadium over the years?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert.year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "stadium.name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.year, count(concert_id), stadium.name FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY concert.year, stadium.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of stadium capacity vs average ticket price.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "stadium.capacity",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "stadium.average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT stadium.capacity, stadium.average FROM stadium",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "How many concerts were held in each stadium?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium.name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "stadium.name"
                        ]
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) FROM concert, stadium WHERE concert.stadium_id = stadium.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a line chart of the capacity of each of these stadiums over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "stadium.capacity",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "stadium.name",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.stadium.name in ['stadium1', 'stadium2', 'stadium3', 'stadium4']"
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT year, stadium.name, stadium.capacity FROM concert, stadium WHERE concert.stadium_id = stadium.stadium_id AND stadium.name in ['stadium1', 'stadium2', 'stadium3', 'stadium4']",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Display a pie chart showing the percentage of concerts grouped by theme in these stadiums",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "theme"
                        ]
                    }
                ]
            },
            "VQL": "Visualize ARC SELECT theme, count(*) FROM concert WHERE concert.stadium_id IN (SELECT stadium_id FROM stadium WHERE stadium.name in ['stadium1', 'stadium2', 'stadium3', 'stadium4']) GROUP BY theme",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Who were the singers for the rock themed concerts in these stadiums?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "singer.name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "singer.name"
                        ]
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT singer.name, count(*) FROM concert, singer, singer_in_concert WHERE singer_in_concert.singer_id = singer.singer_id AND singer_in_concert.concert_id = concert.concert_id AND concert.theme = 'rock' AND concert.stadium_id IN (SELECT stadium_id FROM stadium WHERE stadium.name in ['stadium1', 'stadium2', 'stadium3', 'stadium4']) GROUP BY singer.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of concerts based on locations",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, COUNT(concert_id) FROM concert_singer.stadium, concert_singer.concert WHERE stadium.stadium_id=concert.stadium_id GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about the percentage of concerts in different locations? Show me in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": null
                }
            },
            "VQL": "Visualize PIE SELECT location, COUNT(concert_id) FROM concert_singer.stadium, concert_singer.concert WHERE stadium.stadium_id=concert.stadium_id GROUP BY location",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me the average concert count per year in each location as a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "concert_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, location, AVG(concert_count) AS concert_count FROM (SELECT year, location, COUNT(concert_id) AS concert_count FROM concert_singer.stadium, concert_singer.concert WHERE stadium.stadium_id=concert.stadium_id GROUP BY year, location) GROUP BY location",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts per stadium based on their capacity.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium_name",
                        "type": "ordinal",
                        "axis": {
                            "title": "Stadium"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Concerts"
                        }
                    },
                    "color": {
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) FROM concert GROUP BY stadium.stadium_id, stadium.capacity",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Share a scatter chart to compare the capacity of the stadium and the number of concerts.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "capacity",
                        "type": "quantitative",
                        "axis": {
                            "title": "Stadium Capacity"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Concerts"
                        }
                    }
                }
            },
            "VQL": "Visualize POINT SELECT stadium.capacity, count(*) FROM concert GROUP BY stadium.stadium_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Display a line chart showing the number of concerts held per year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal",
                        "axis": {
                            "title": "Year"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Concerts"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.year, count(*) FROM concert GROUP BY concert.year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of number of concerts held at each stadium.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "station_name",
                        "type": "ordinal",
                        "sort": "-x"
                    },
                    "x": {
                        "field": "concert_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "station_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me the percentage distribution of concerts by theme.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT theme, count(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you show a scatter plot of the age of the singer vs number of concerts they've performed at?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT singer.age, count(*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about a line chart showing the number of concerts over the years?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(*) FROM concert GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the number of concerts happening at each location as a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about the maximum capacity at each location? Display it as a line graph.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative",
                        "aggregate": "max"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT location, max(capacity) FROM stadium GROUP BY location;",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show a pie chart of concerts classified by their theme.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT theme, count(*) FROM concert GROUP BY theme;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about a scatter plot depicting the relationship between singer's age and the year of concert? Use color to differentiate male and female singers.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "year",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.age, concert.year, singer.is_male FROM singer, concert, singer_in_concert WHERE singer.singer_id = singer_in_concert.singer_id AND concert.concert_id = singer_in_concert.concert_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts performed by each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(concert_id) FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of singers' age against the number of concerts they have performed.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, count(concert_id) FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the gender distribution of singers who performed more than 5 concerts.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal",
                        "legend": {
                            "title": "Gender"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_male, count(*) FROM (SELECT singer.is_male FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.name HAVING count(concert_id) > 5) GROUP BY is_male",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "For the male singers who passed the above condition, plot a line chart with age as the x-axis and the number of concerts they performed per year as the y-axis.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert.year",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, count(concert.year), name FROM (SELECT singer.name, singer.age, concert.year FROM singer INNER JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id WHERE singer.is_male = 1 GROUP BY singer.name, singer.age, concert.year HAVING count(concert_id) > 5) GROUP BY name, age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts at each stadium.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(*) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show the average capacity of these stadiums.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "average",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, average FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a pie chart of concerts by theme.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT theme, count(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about the concerts by singer's country?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, count(*) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts each stadium has hosted.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, COUNT(concert.concert_id) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Tell me the distribution of the total capacity of each stadium.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, stadium.capacity FROM stadium",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What is the average age of singers who performed in each concert?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.concert_name, AVG(singer.age) FROM concert JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id JOIN singer ON singer.singer_id = singer_in_concert.singer_id GROUP BY concert.concert_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show the distribution of male and female singers at each concert in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "is_male",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": null
                }
            },
            "VQL": "Visualize PIE SELECT singer.is_male, COUNT(singer.singer_id) FROM singer JOIN singer_in_concert ON singer.singer_id = singer_in_concert.singer_id GROUP BY singer.is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts grouped by year.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year, count(*) FROM concert GROUP BY year.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show the average stadium capacity for each of those years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(capacity) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY year.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about a pie chart showing the proportion of male and female singers?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_male, count(*) FROM singer GROUP BY is_male.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Finally, let's see a scatter chart plotting the age of the singer versus the song's release year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT song_release_year, age FROM singer.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts held at each stadium.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) FROM concert INNER JOIN stadium on concert.stadium_id = stadium.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me a line chart of the concert stadium capacities over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "capacity",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.year, sum(stadium.capacity), stadium.name FROM concert INNER JOIN stadium on concert.stadium_id = stadium.stadium_id GROUP BY concert.year, stadium.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Let's see a pie chart showing the distribution of male and female performers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.is_male, count(*) FROM singer_in_concert INNER JOIN singer on singer_in_concert.singer_id = singer.singer_id GROUP BY singer.is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about a scatter plot to visualize the age of the singers when their songs were released?",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.song_release_year, singer.age, singer.is_male FROM singer",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their property type",
            "Vega-lite Code": {
                "data": {
                    "url": "data/real_estate_properties.json"
                },
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What is the median agreed selling price for each property type?",
            "Vega-lite Code": {
                "data": {
                    "url": "data/real_estate_properties.json"
                },
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "median"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT property_type_code, median(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you highlight the trend of agreed selling price over time for each property type?",
            "Vega-lite Code": {
                "data": {
                    "url": "data/real_estate_properties.json"
                },
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "mean"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, mean(agreed_selling_price) FROM properties GROUP BY date_on_market, property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the distribution of room count for each property type?",
            "Vega-lite Code": {
                "data": {
                    "url": "data/real_estate_properties.json"
                },
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT bin(room_count), count(*) FROM properties GROUP BY room_count, property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the average selling price for each type of property.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the average selling price for each type of property",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "average_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How many properties of each type were sold?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A pie chart showing the number of properties sold of each type",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_description, COUNT(property_id) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What is the trend of total selling price over time for each type of property?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart showing the trend of total selling price over time for each type of property",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "timeUnit": "year",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "field": "total_selling_price",
                        "type": "quantitative",
                        "title": "Total Selling Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_sold) as year, property_type_description, SUM(agreed_selling_price) as total_selling_price FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY year, property_type_description ORDER BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How are the number of rooms related to the agreed selling price for each type of property?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A scatter chart showing the relation between number of rooms and agreed selling price for each type of property",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Agreed Selling Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT property_type_description, room_count, agreed_selling_price FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code ORDER BY room_count",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of property type codes in the properties table in a pie chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "property_type_code",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": "transparent"
                }
            },
            "VQL": "Visualize PIE SELECT property_type_code, COUNT(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the trend of agreed selling prices over time in a line chart, for properties with 'apartment' as property type code.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.property_type_code === 'apt'"
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT date_sold, agreed_selling_price FROM properties WHERE property_type_code = 'apt' ORDER BY date_sold",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How many rooms does each 'apartment' property have? Show this in a bar chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "room_count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.property_type_code === 'apt'"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT property_name, room_count FROM properties WHERE property_type_code = 'apt'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a scatter plot of vendor requested price vs agreed selling price, for properties with 'apartment' as property type code.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.property_type_code === 'apt'"
                    }
                ]
            },
            "VQL": "Visualize SCATTER SELECT vendor_requested_price, agreed_selling_price FROM properties WHERE property_type_code = 'apt'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties available grouped by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now show a line chart of the properties sold each month.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal",
                        "timeUnit": "month"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, count(*) FROM properties GROUP BY month(date_sold)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about a scatter plot indicating the relationship between the vendor requested price and the buyer offered price?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally, let's visualize a pie chart showing the distribution of different room counts in the properties.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "room_count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "room_count",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT room_count, count(*) FROM properties GROUP BY room_count",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by property types",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show me the average selling price per property type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "x": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "average",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, AVG(agreed_selling_price) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Display the relation between the number of rooms and the selling prices in a scatter chart",
            "Vega-lite Code": {
                "mark": "scatter",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally represent the selling prices trend over time using a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal",
                        "title": "Date Sold"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, agreed_selling_price FROM properties ORDER BY date_sold",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of properties listed on the market grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "axis": {
                            "title": "Property Type"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Properties"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What about the selling prices of these different property types?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "axis": {
                            "title": "Property Type"
                        }
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "axis": {
                            "title": "Average Selling Price"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of room counts across the properties.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "room_count",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT room_count, count(*) FROM properties GROUP BY room_count",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How does the selling price vary with the room count?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Rooms"
                        }
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "axis": {
                            "title": "Selling Price"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by property type.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the count of properties grouped by property type code.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                },
                "config": {
                    "view": {
                        "stroke": "transparent"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the average selling price for each property type.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the average selling price for each property type code.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "aggregate": "mean",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                },
                "config": {
                    "view": {
                        "stroke": "transparent"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a scatter plot of the vendor requested price vs buyer offered price.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A scatter plot of the vendor requested price vs buyer offered price.",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    }
                },
                "config": {
                    "view": {
                        "stroke": "transparent"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart of property listing dates ",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart showing the number of properties listed over time.",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Rolling Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Listed Properties Count"
                    }
                },
                "config": {
                    "view": {
                        "stroke": "transparent"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, count(date_on_market) FROM properties GROUP BY date_on_market",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of average agreed selling prices grouped by property type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Add a line chart showing the trend of average agreed selling price over time for apartments.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, AVG(agreed_selling_price) FROM properties WHERE property_type_code='apt' GROUP BY date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart of the count of different room counts in apartments.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "room_count",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "room_count",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT room_count, COUNT(*) FROM properties WHERE property_type_code='apt' GROUP BY room_count",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Plot a scatter chart showing correlation between vendor requested price and buyer offered price for apartments.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT vendor_requested_price, buyer_offered_price FROM properties WHERE property_type_code='apt'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show the average selling price of properties for each type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show the distribution of room counts in the properties.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "ordinal",
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT room_count, count(*) FROM properties GROUP BY room_count",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How does the selling price vary with the number of rooms?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "title": "Number of Rooms"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show me the average selling price for each property type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "aggregate": "average",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, AVG(agreed_selling_price) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you show me the selling price trend over time for apartments?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal",
                        "title": "Date Sold"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.property_type_code === 'apt'"
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT date_sold, agreed_selling_price FROM properties WHERE property_type_code = 'apt' ORDER BY date_sold",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally, let's see a scatter plot of the number of rooms against the selling price for houses.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "room_count",
                        "type": "quantitative",
                        "title": "Room Count"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Selling Price"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.property_type_code === 'hse'"
                    }
                ]
            },
            "VQL": "Visualize SCATTER SELECT room_count, agreed_selling_price FROM properties WHERE property_type_code = 'hse'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show the count of different property types on the market.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, COUNT(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now, show a line graph representing the average vendor requested price for each property type over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date on Market"
                    },
                    "y": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "aggregate": "average",
                        "title": "Average Vendor Requested Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, AVG(vendor_requested_price), property_type_description FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY date_on_market, property_type_description ORDER BY date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you also visualize the correlation between vendor requested price and buyer offered price for these properties?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price, property_type_description FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties listed by their type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now show a line chart of the average selling prices of these properties, grouped by their types over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date On Market"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "average",
                        "title": "Average Selling Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, AVG(agreed_selling_price), property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description, date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can we also look at a pie chart of the distribution of different property types that were sold",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "aggregate": "count",
                        "title": "Number of Properties Sold"
                    }
                },
                "view": {
                    "stroke": null
                }
            },
            "VQL": "Visualize PIE SELECT property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code WHERE date_sold IS NOT NULL GROUP BY property_type_description",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Lastly, display a scatter plot of the vendor requested price against the buyer offered price for each property",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT vendor_requested_price, buyer_offered_price, property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their property types.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "property_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, COUNT(property_id) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart indicating the average selling price per property type over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, AVG(agreed_selling_price), property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY date_sold, property_type_description ORDER BY date_sold ASC",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you also show a scatter chart of the agreed selling price against the vendor requested price for each property type?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, agreed_selling_price, property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Finally, show a bar chart demonstrating the number of each feature type present in all properties.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "feature_type_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "feature_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT feature_type_name, COUNT(feature_id) FROM other_property_features INNER JOIN ref_feature_types ON other_property_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties on market for each property type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number of properties",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Add data label to the previous graph",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number of properties",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "text": {
                        "field": "number of properties",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code DETAIL count(*) AS 'number of properties'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a scatter plot of vendor requested price versus buyer offered price.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price FROM properties",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Change the scatter plot to a line chart with date_sold as the x-axis",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_sold",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_sold, buyer_offered_price FROM properties",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the count of real estate properties by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Now can you show me a line chart of the count of features used in each type of property?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT property_type_code, count(feature_id) FROM other_property_features GROUP BY property_type_code",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How many properties fall into each price range, can you display that as a histogram?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": {
                            "maxbins": 10
                        },
                        "field": "agreed_selling_price",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize HISTOGRAM SELECT agreed_selling_price, count(*) FROM properties GROUP BY agreed_selling_price",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Can you depict the number of rooms per property_type_code as a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "room_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT property_type_code, sum(room_count) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Generate a bar chart representing the distribution of different property types.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart indicating the monthly trends of the on-market properties.",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "month",
                        "type": "temporal",
                        "title": "Month"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Property Count"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT MONTH(date_on_market) as month, property_type_description, count(*) FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY month, property_type_description ORDER BY month",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Create a scatter chart to display the correlation between vendor requested price and buyer offered price for each property type.",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "vendor_requested_price",
                        "type": "quantitative",
                        "title": "Vendor Requested Price"
                    },
                    "y": {
                        "field": "buyer_offered_price",
                        "type": "quantitative",
                        "title": "Buyer Offered Price"
                    },
                    "color": {
                        "field": "property_type_description",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT vendor_requested_price, buyer_offered_price, property_type_description FROM properties INNER JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Display a pie chart detailing the number of various available feature types.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Count"
                    },
                    "color": {
                        "field": "feature_type_name",
                        "type": "nominal",
                        "title": "Feature Type"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT feature_type_name, count(*) FROM other_available_features INNER JOIN ref_feature_types ON other_available_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart detailing how the number of each type of property has changed over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    },
                    "color": {
                        "field": "property_type_code",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_on_market, property_type_code, count(*) FROM properties GROUP BY date_on_market, property_type_code.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Display a graph showing the average selling price of each property type.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "title": "Average Selling Price"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT property_type_code, average(agreed_selling_price) FROM properties GROUP BY property_type_code.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of properties by property type.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "Property_Type",
                        "type": "nominal",
                        "title": "Property Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Properties"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_description, COUNT(*) FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code GROUP BY property_type_description",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart of the count of features by feature type.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Number of Features",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "Feature Type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT feature_type_name, COUNT(*) FROM other_available_features JOIN ref_feature_types ON other_available_features.feature_type_code = ref_feature_types.feature_type_code GROUP BY feature_type_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show me all properties that have a pool as a feature.",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Property ID",
                        "type": "ordinal",
                        "title": "Property ID"
                    },
                    "y": {
                        "field": "Feature",
                        "type": "nominal",
                        "title": "Feature"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT properties.property_id, other_available_features.feature_name FROM properties JOIN other_property_features ON properties.property_id = other_property_features.property_id JOIN other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_name = 'Pool'",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Among those, which are houses?",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Property ID",
                        "type": "ordinal",
                        "title": "Property ID"
                    },
                    "y": {
                        "field": "Property Type",
                        "type": "nominal",
                        "title": "Property Type"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT properties.property_id, ref_property_types.property_type_description FROM properties JOIN ref_property_types ON properties.property_type_code = ref_property_types.property_type_code WHERE properties.property_id IN (SELECT properties.property_id FROM properties JOIN other_property_features ON properties.property_id = other_property_features.property_id JOIN other_available_features ON other_property_features.feature_id = other_available_features.feature_id WHERE other_available_features.feature_name = 'Pool') AND ref_property_types.property_type_description = 'house'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of properties grouped by their types",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': { 'aggregate': 'count', 'field': 'property_type_code' }, 'y': { 'field': 'property_type_code', 'type': 'nominal' } } }",
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a pie chart for the distribution of the features available for the properties",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': { 'aggregate': 'count', 'field': 'feature_type_code' } } }",
            "VQL": "Visualize PIE SELECT feature_type_code, count(*) FROM other_available_features GROUP BY feature_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart for the average offered price by buyers for each property type over time",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': { 'field': 'date_on_market', 'type': 'temporal' }, 'y': { 'aggregate': 'average', 'field': 'buyer_offered_price' }, 'color': { 'field': 'property_type_code', 'type': 'nominal' } } }",
            "VQL": "Visualize LINE SELECT date_on_market, avg(buyer_offered_price) FROM properties GROUP BY property_type_code, date_on_market",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "How about the average selling price over time?",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': { 'field': 'date_on_market', 'type': 'temporal' }, 'y': { 'aggregate': 'average', 'field': 'agreed_selling_price' }, 'color': { 'field': 'property_type_code', 'type': 'nominal' } } }",
            "VQL": "Visualize LINE SELECT date_on_market, avg(agreed_selling_price) FROM properties GROUP BY property_type_code, date_on_market",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the number of estate properties grouped by property type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "property_type_code",
                        "type": "ordinal",
                        "axis": {
                            "title": "Property Type"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Properties"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT property_type_code, count(*) FROM properties GROUP BY property_type_code",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "Show a line chart of the number of properties put on market each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_on_market",
                        "timeUnit": "year",
                        "type": "ordinal",
                        "axis": {
                            "title": "Year"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Properties"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_on_market), count(*) FROM properties GROUP BY YEAR(date_on_market)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "For the property type that was mentioned earlier, display a pie chart of the feature distribution.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "feature_name",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "feature_name",
                        "type": "nominal",
                        "legend": {
                            "title": "Features"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT feature_name, count(*) FROM other_available_features INNER JOIN properties ON other_available_features.feature_id = properties.oth_feature_1 WHERE properties.property_type_code = PreviousQuery.PropertyType GROUP BY feature_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        },
        {
            "Natural Language Query": "What about the distribution of agreed selling price for the previously mentioned property type?",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "agreed_selling_price",
                        "type": "quantitative",
                        "bin": {
                            "maxbins": 20
                        },
                        "axis": {
                            "title": "Agreed Selling Price"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Properties"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT agreed_selling_price, count(*) FROM properties WHERE property_type_code = PreviousQuery.PropertyType GROUP BY agreed_selling_price",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | real_estate_properties | ref_feature_types : feature_type_code , feature_type_name | ref_property_types : property_type_code , property_type_description | other_available_features : feature_id , feature_type_code , feature_name , feature_description | properties : property_id , property_type_code , date_on_market , date_sold , property_name , property_address , room_count , vendor_requested_price , buyer_offered_price , agreed_selling_price , apt_feature_1 , apt_feature_2 , apt_feature_3 , fld_feature_1 , fld_feature_2 , fld_feature_3 , hse_feature_1 , hse_feature_2 , hse_feature_3 , oth_feature_1 , oth_feature_2 , oth_feature_3 , shp_feature_1 , shp_feature_2 , shp_feature_3 , other_property_details | other_property_features : property_id , feature_id , property_feature_description"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students in each degree program",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "degree_program_id"
                    },
                    "color": {
                        "field": "degree_program_id"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How about a line chart for the trend of student enrolment in each semester",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "sort": "ascending"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id"
                    },
                    "color": {
                        "field": "semester_id"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_id, count(*) FROM student_enrolment GROUP BY semester_id ORDER BY semester_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of courses each student is enrolled in",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, count(*) FROM student_enrolment_courses GROUP BY student_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can I see a bar chart of the number of students residing in each state or province",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "state_province_county"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT state_province_county, count(*) FROM students JOIN addresses ON students.current_address_id = addresses.address_id GROUP BY state_province_county",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "degree_summary_name",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_summary_name, COUNT(*) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of male and female students in the most commonly enrolled degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "gender",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT students.gender, COUNT(*) FROM students INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE student_enrolment.degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1) GROUP BY students.gender",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "For this program, show the number of students per course on a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT course_name, COUNT(*) FROM student_enrolment_courses INNER JOIN courses ON student_enrolment_courses.course_id = courses.course_id WHERE student_enrolment_courses.student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1)) GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of the number of students from each city enrolled in this course",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT addresses.city, COUNT(*) FROM addresses INNER JOIN students ON addresses.address_id = students.current_address_id WHERE students.student_id IN (SELECT student_id FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY COUNT(*) DESC LIMIT 1) AND student_id IN (SELECT student_id FROM student_enrolment_courses WHERE course_id = (SELECT course_id FROM courses WHERE course_name = '#PREVIOUSLY_MENTIONED_COURSE_NAME#'))) GROUP BY addresses.city",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the number of students registered in each department using a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How about the distribution of students among different degree programs in 'Computer Science' department?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id WHERE department_name = 'Computer Science' GROUP BY degree_summary_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Display the number of students in each course of the 'Artificial Intelligence' degree using a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT course_name, count(student_id) FROM student_enrolment_courses JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN courses ON student_enrolment_courses.course_id = courses.course_id WHERE degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name='Artificial Intelligence' AND department_name = 'Computer Science') GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "And what is the trend of student registration in the 'Machine Learning' course over semesters?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(student_id) FROM student_enrolment_courses JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id WHERE course_id IN (SELECT course_id FROM courses WHERE course_name='Machine Learning') AND degree_program_id IN (SELECT degree_program_id FROM degree_programs WHERE degree_summary_name='Artificial Intelligence' AND department_name = 'Computer Science') GROUP BY semester_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "sort": "y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Filter to only show the graduate programs.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "sort": "y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.degree_summary_name.startsWith('Graduate')"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id WHERE degree_summary_name LIKE 'Graduate%' GROUP BY degree_summary_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "In these graduate programs, show a pie chart of the distribution of students across different semesters.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "semester_name",
                        "type": "nominal",
                        "stack": true
                    }
                },
                "view": {
                    "stroke": null
                },
                "spec": {
                    "layer": [
                        {
                            "mark": {
                                "type": "arc",
                                "tooltip": true
                            }
                        }
                    ]
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, COUNT(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id WHERE degree_summary_name LIKE 'Graduate%' GROUP BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Let's see the progression over the years. Show a line chart of the number of students enrolled in each semester within graduate programs.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, COUNT(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id WHERE degree_summary_name LIKE 'Graduate%' GROUP BY semester_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students registered in each degree program.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Number of Students",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "Degree Program",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_program_id, COUNT(student_id) as Number of Students FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of students in the most popular degree program, split by semester.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "Semester",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "Number of Students",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT semester_id as Semester, COUNT(student_id) as Number of Students FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id, MAX(COUNT(student_id)) FROM student_enrolment GROUP BY degree_program_id) GROUP BY semester_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line chart tracking the number of students in the most popular semester of the most popular degree program over time.",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "Date Registered",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "Number of Students",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_first_registered as Date Registered, COUNT(student_id) as Number of Students FROM students INNER JOIN student_enrolment ON students.student_id = student_enrolment.student_id WHERE semester_id = (SELECT semester_id, MAX(COUNT(student_id)) FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id, MAX(COUNT(student_id)) FROM student_enrolment GROUP BY degree_program_id) GROUP BY semester_id) AND degree_program_id = (SELECT degree_program_id, MAX(COUNT(student_id)) FROM student_enrolment GROUP BY degree_program_id) GROUP BY date_first_registered",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a line chart indicating the number of students registered in each academic semester.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, COUNT(student_id) FROM semesters JOIN students ON semesters.semester_id = students.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show me a pie chart showing the distribution of students across various degree programs.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_summary_name, COUNT(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "And what about the distribution of number of students enrolled for each course?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_name, COUNT(student_id) FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Fine, Now could you show me a scatter chart of the number of students as per each zip/postal code of their current address?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "zip_postcode",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT zip_postcode, COUNT(student_id) FROM students JOIN addresses ON students.current_address_id = addresses.address_id GROUP BY zip_postcode",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show me a pie chart of the number of students in each semester",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "semester_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "semester_id",
                        "type": "nominal",
                        "title": "Semester"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_id, count(*) FROM student_enrolment GROUP BY semester_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you make a scatter plot for the courses and their student counts?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "y": {
                        "field": "course_id",
                        "type": "nominal",
                        "title": "Course"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "student_course_id",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT course_id, count(*) FROM student_enrolment_courses GROUP BY course_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Create a pie chart representing the distribution of students across different degree programmes.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "degree_program_id",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show a bar chart of the number of students in each semester.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "student_id",
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT semester_id, count(*) FROM student_enrolment GROUP BY semester_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Could you also compare the number of students across different courses using a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "course_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "student_id",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "course_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT course_id, count(*) FROM student_enrolment_courses GROUP BY course_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Finally, depict a scatter plot to count the number of courses each student is enrolled in.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "course_id",
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT student_id, count(*) FROM student_enrolment_courses GROUP BY student_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Can you display a bar chart showing the number of students enrolled in each degree program?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal",
                        "sort": "y",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show me a pie chart representation of the distribution of students across different semesters.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal",
                        "sort": "count"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, count(*) FROM semesters JOIN student_enrolment on semester_id GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Compare the number of students enrolled in each department. Display this on a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "ordinal",
                        "title": "Department"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT department_name, count(student_id) FROM departments JOIN degree_programs ON department_id JOIN student_enrolment ON degree_program_id GROUP BY department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Which courses have the highest student enrollment? Represent this data in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_name",
                        "type": "ordinal",
                        "sort": "y",
                        "title": "Course"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_course_id",
                        "type": "quantitative",
                        "title": "Number of Enrolled Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_name, count(student_course_id) FROM courses JOIN student_enrolment_courses ON course_id GROUP BY course_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of students per degree program.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": {
                    "type": "bar"
                },
                "encoding": {
                    "y": {
                        "field": "count_Students",
                        "type": "quantitative"
                    },
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a pie chart of the number of students per semester.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": {
                    "type": "arc",
                    "tooltip": true
                },
                "encoding": {
                    "theta": {
                        "field": "count_Students",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, count(*) FROM student_enrolment JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of the number of courses each student is enrolled in.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": {
                    "type": "point"
                },
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "count_courses",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, count(*) FROM student_enrolment_courses JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id GROUP BY student_id",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you show the same information as a line chart?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": {
                    "type": "line"
                },
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "count_courses",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT student_id, count(*) FROM student_enrolment_courses JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id GROUP BY student_id",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart of the number of courses offered by each department.",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_name",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT department_name, count(course_name) FROM departments JOIN courses ON departments.department_id == courses.course_id GROUP BY department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Next, show me a bar graph of the number of students enrolled in each course divided by department.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, course_name, count(student_id) FROM departments JOIN courses ON departments.department_id == courses.course_id JOIN student_enrolment_courses ON courses.course_id == student_enrolment_courses.course_id GROUP BY department_name, course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Lastly, show me a line graph of the number of students who registered throughout the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_first_registered, count(student_id) FROM students GROUP BY date_first_registered ORDER BY date_first_registered",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM student_enrolment INNER JOIN degree_programs ON student_enrolment.degree_program_id=degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line chart of the number of students enrolled in the largest degree program over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(*) FROM student_enrolment INNER JOIN semesters ON student_enrolment.semester_id=semesters.semester_id WHERE degree_program_id=(SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1) GROUP BY semester_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What about the second largest program?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(*) FROM student_enrolment INNER JOIN semesters ON student_enrolment.semester_id=semesters.semester_id WHERE degree_program_id=(SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1 OFFSET 1) GROUP BY semester_name ORDER BY semester_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart representing the percentage distribution of students in various sections of the largest degree program",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "section_name",
                        "type": "nominal",
                        "title": "Section"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT section_name, count(*) FROM student_enrolment_courses INNER JOIN sections ON student_enrolment_courses.course_id=sections.course_id WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id=(SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1)) GROUP BY section_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart displaying the distribution of students according to their degree programs",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(student_id), degree_summary_name FROM student_enrolment JOIN degree_programs ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Based on the previous query, display a line chart showing the trend of students enrollment in different semesters for the degree program that has the most students",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_summary_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(student_id), degree_summary_name FROM student_enrolment JOIN degree_programs ON degree_programs.degree_program_id = student_enrolment.degree_program_id JOIN semesters ON semesters.semester_id = student_enrolment.semester_id WHERE degree_summary_name=(SELECT degree_summary_name FROM(student_enrolment JOIN degree_programs ON degree_programs.degree_program_id = student_enrolment.degree_program_id) GROUP BY degree_summary_name ORDER BY count(student_id) DESC LIMIT 1) GROUP BY semester_name, degree_summary_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "And how many different courses are provided in that degree program?",
            "Vega-lite Code": {
                "mark": "text",
                "encoding": {
                    "text": {
                        "aggregate": "count",
                        "field": "course_id"
                    }
                }
            },
            "VQL": "Visualize TEXT SELECT COUNT DISTINCT course_id FROM degree_programs JOIN departments ON departments.department_id = degree_programs.department_id JOIN courses ON courses.course_id = departments.course_id WHERE degree_summary_name=(SELECT degree_summary_name FROM(student_enrolment JOIN degree_programs ON degree_programs.degree_program_id = student_enrolment.degree_program_id) GROUP BY degree_summary_name ORDER BY count(student_id) DESC LIMIT 1)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of students' distribution by degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "students",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, COUNT(student_id) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart of students' distribution by their first registered semester",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "students",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "semester_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_name, COUNT(student_id) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN semesters ON student_enrolment.semester_id = semesters.semester_id GROUP BY semester_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of students by their number of enrolled courses",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "enrolled_courses",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, COUNT(course_id) FROM student_enrolment_courses JOIN student_enrolment ON student_enrolment_courses.student_enrolment_id = student_enrolment.student_enrolment_id GROUP BY student_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show the trend of total registered students over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "Count",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_first_registered) as year, COUNT(student_id) FROM students GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each department",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, count(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you break it down by gender?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "department_name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT department_name, gender, count(*) FROM students JOIN student_enrolment ON students.student_id = student_enrolment.student_id JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY department_name, gender",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Then show a line chart of student enrollments over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "enrollment_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT enrollment_date, count(*) FROM student_enrolment GROUP BY enrollment_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Is there a breakdown by their corresponding departments?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "enrollment_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "department_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT enrollment_date, department_name, count(*) FROM student_enrolment JOIN degree_programs ON student_enrolment.degree_program_id = degree_programs.degree_program_id JOIN departments ON degree_programs.department_id = departments.department_id GROUP BY enrollment_date, department_name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(student_id) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the number of students in each semester for the most popular degree program from the previous query.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "semester_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT semester_id, count(student_id) FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(student_id) DESC LIMIT 1) GROUP BY semester_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Lastly, show a line chart of the distribution of students over time for the most enrolled semester from the previous query.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_first_registered, count(student_id) FROM students WHERE student_id IN (SELECT student_id FROM student_enrolment WHERE semester_id = (SELECT semester_id FROM student_enrolment GROUP BY semester_id ORDER BY count(student_id) DESC LIMIT 1)) GROUP BY date_first_registered ORDER BY date_first_registered",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(student_id) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line chart showing the number of students who have left over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_left",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_left, count(student_id) FROM students WHERE date_left IS NOT NULL GROUP BY date_left",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "How about those who first registered?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date_first_registered",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date_first_registered, count(student_id) FROM students WHERE date_first_registered IS NOT NULL GROUP BY date_first_registered",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of students by department based on their degree program",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "department_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT department_id, count(student_id) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY department_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students enrolled in each degree program.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_summary_name",
                        "type": "nominal",
                        "title": "Degree Program"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_summary_name, count(*) FROM degree_programs JOIN student_enrolment ON degree_programs.degree_program_id = student_enrolment.degree_program_id GROUP BY degree_summary_name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Display a line chart showing the trend of student enrollment in the most popular degree program over semesters.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_name",
                        "type": "temporal",
                        "title": "Semester"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_name, count(*) FROM semesters JOIN student_enrolment ON semesters.semester_id = student_enrolment.semester_id WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1) GROUP BY semester_name ORDER BY semester_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now show a pie chart of the distribution of students in the selected degree program across various courses.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "course_name",
                        "type": "nominal",
                        "title": "Course"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT course_name, count(*) FROM courses JOIN student_enrolment_courses ON courses.course_id = student_enrolment_courses.course_id WHERE student_enrolment_id IN (SELECT student_enrolment_id FROM student_enrolment WHERE degree_program_id = (SELECT degree_program_id FROM student_enrolment GROUP BY degree_program_id ORDER BY count(*) DESC LIMIT 1)) GROUP BY course_name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the number of students enrolled in each degree program",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "degree_program_id",
                        "type": "ordinal",
                        "title": "Degree Program"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Can you compare their enrollment progression based on semesters? ",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "semester_id",
                        "type": "ordinal",
                        "title": "Semester"
                    },
                    "y": {
                        "field": "Count",
                        "type": "quantitative",
                        "aggregate": "count",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT semester_id, degree_program_id, count(*) FROM student_enrolment GROUP BY semester_id, degree_program_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What about their distribution spread in various courses for the last semester?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_id",
                        "type": "ordinal",
                        "title": "Course"
                    },
                    "y": {
                        "field": "Count",
                        "type": "quantitative",
                        "aggregate": "count",
                        "title": "Number of Students"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal",
                        "title": "Degree Program"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_id, degree_program_id, count(*) FROM student_enrolment_courses WHERE semester_id = 'Last Semester' GROUP BY course_id, degree_program_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the students enrolled in each degree program.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A pie chart showing the number of students in each degree program.",
                "data": {
                    "url": "data/student_enrolment.csv"
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "degree_program_id"
                        ]
                    }
                ],
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT degree_program_id, count(*) FROM student_enrolment GROUP BY degree_program_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Now, show a bar chart comparing the number of male and female students in each degree program.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the number of male and female students in each degree program.",
                "data": {
                    "url": "data/student_enrolment.csv"
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "degree_program_id",
                            "gender"
                        ]
                    }
                ],
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, gender, count(*) FROM student_enrolment GROUP BY degree_program_id, gender",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "What about the total count of courses taken by students in each degree program?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the total count of courses taken by students in each degree program.",
                "data": {
                    "url": "data/student_enrolment_courses.csv"
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "degree_program_id"
                        ]
                    }
                ],
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "degree_program_id",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT degree_program_id, count(*) FROM student_enrolment_courses GROUP BY degree_program_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        },
        {
            "Natural Language Query": "Show a line chart of the number of students registered each year.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart showing the number of students registered each year.",
                "data": {
                    "url": "data/students.csv"
                },
                "transform": [
                    {
                        "timeUnit": "year",
                        "field": "date_first_registered",
                        "as": "year"
                    },
                    {
                        "aggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "year"
                        ]
                    }
                ],
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(date_first_registered), count(*) FROM students GROUP BY YEAR(date_first_registered)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | student_transcripts_tracking | addresses : address_id , line_1 , line_2 , line_3 , city , zip_postcode , state_province_county , country , other_address_details | courses : course_id , course_name , course_description , other_details | departments : department_id , department_name , department_description , other_details | degree_programs : degree_program_id , department_id , degree_summary_name , degree_summary_description , other_details | sections : section_id , course_id , section_name , section_description , other_details | semesters : semester_id , semester_name , semester_description , other_details | students : student_id , current_address_id , permanent_address_id , first_name , middle_name , last_name , cell_mobile_number , email_address , ssn , date_first_registered , date_left , other_student_details | student_enrolment : student_enrolment_id , degree_program_id , semester_id , student_id , other_details | student_enrolment_courses : student_course_id , course_id , student_enrolment_id | transcripts : transcript_id , transcript_date , other_details | transcript_contents : student_course_id , transcript_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts held at each stadium.",
            "VQL": "Visualize BAR SELECT stadium.name, COUNT(*) FROM stadium INNER JOIN concert ON stadium.stadium_id=concert.stadium_id GROUP BY stadium.name",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    },
                    "y": {
                        "field": "stadium.name",
                        "type": "nominal",
                        "title": "Stadium Name"
                    }
                }
            },
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you give me a line chart for the yearly trend of concerts in the stadium with the highest number of concerts?",
            "VQL": "Visualize LINE SELECT concert.year, COUNT(*) FROM concert WHERE concert.stadium_id = (SELECT stadium.stadium_id FROM stadium INNER JOIN concert ON stadium.stadium_id=concert.stadium_id GROUP BY stadium.name ORDER BY COUNT(*) DESC LIMIT 1) GROUP BY concert.year",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of the number of male versus female singers at each concert.",
            "VQL": "Visualize SCATTER SELECT concert.concert_id, COUNT(singer.is_male=true) AS male_singers, COUNT(singer.is_male=false) AS female_singers FROM concert INNER JOIN singer_in_concert ON concert.concert_id=singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id=singer.singer_id GROUP BY concert.concert_id",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "male_singers",
                        "type": "quantitative",
                        "title": "Number of Male Singers"
                    },
                    "y": {
                        "field": "female_singers",
                        "type": "quantitative",
                        "title": "Number of Female Singers"
                    }
                }
            },
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts grouped by their theme.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, count(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you show these numbers over the years in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "theme",
                        "type": "quantitative",
                        "color": "theme"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(theme) FROM concert GROUP BY year, theme",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about the number of male and female singers in each concert?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "concert_id",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT concert_id, count(is_male) FROM singer_in_concert INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY concert_id, is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "And which themes are most popular among male singers?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "is_male",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, count(is_male) FROM concert INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id WHERE is_male = true GROUP BY theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts grouped by their themes.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, COUNT(concert_id) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, present a line chart showing the change of the number of concerts over years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, COUNT(concert_id) FROM concert GROUP BY year Order by year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Based on the previous query, break down the concerts by theme over years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, theme, COUNT(concert_id) FROM concert GROUP BY year, theme Order by year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Let's see a scatter plot of singer age vs song release year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT song_release_year, age FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts grouped by theme.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, COUNT(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about the number of concerts based on location?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, COUNT(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY location",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a line chart of the number of concerts over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, COUNT(*) FROM concert GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now display a pie chart of the percentage of male and female singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_male, COUNT(*) FROM singer GROUP BY is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts per stadium",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium",
                        "type": "nominal",
                        "title": "Stadium"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) as concert_count FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, can you show the average stadium capacity where concerts were held?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium",
                        "type": "nominal",
                        "title": "Stadium"
                    },
                    "y": {
                        "field": "average_capacity",
                        "type": "quantitative",
                        "title": "Average Capacity"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, avg(stadium.capacity) as average_capacity FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "How about a pie chart distribution of concerts by theme in these stadiums?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "concert_count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT concert.theme, count(*) as concert_count FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY concert.theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts held by each stadium.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR Select name, count(concert_id) FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now break it down by the number of male and female singers.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR Select name, count(singer_id), is_male FROM concert INNER JOIN stadium ON concert.stadium_id = stadium.stadium_id INNER JOIN singer_in_concert ON concert.concert_id = singer_in_concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id GROUP BY name, is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Display the age distribution of the singers in a histogram.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": true,
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select age, count(*) From singer GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can we look at this distribution separately for each country?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": true,
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR Select age, count(*), country From singer GROUP BY age, country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts each stadium hosted.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium.name",
                        "type": "nominal",
                        "title": "Stadium's Name"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert.concert_id",
                        "type": "quantitative",
                        "title": "Count of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show a line chart that depicts how the number of concerts at each stadium changes annually.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert.year",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert.concert_id",
                        "type": "quantitative",
                        "title": "Count of Concerts"
                    },
                    "color": {
                        "field": "stadium.name",
                        "type": "nominal",
                        "title": "Stadium's Name"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.year, stadium.name, count(*) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY concert.year, stadium.name ORDER BY concert.year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Plot a bar chart to show the number of male and female singers.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "singer.is_male",
                        "type": "nominal",
                        "title": "Gender"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer.singer_id",
                        "type": "quantitative",
                        "title": "Count of Singers"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.is_male, count(*) FROM singer GROUP BY singer.is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can we have a pie chart to visualize the proportion of concerts for each theme?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert.concert_id",
                        "type": "quantitative",
                        "title": "Proportion"
                    },
                    "color": {
                        "field": "concert.theme",
                        "type": "nominal",
                        "title": "Concert Theme"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT concert.theme, count(*) FROM concert GROUP BY concert.theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts by location",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, count(*) FROM concert_singer.stadium GROUP BY location;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Display a line chart of the number of concerts per year, for the location of the most concerts.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, count(concert_id) FROM concert_singer.concert WHERE stadium_id IN (SELECT stadium_id FROM concert_singer.stadium GROUP BY location ORDER BY count(*) DESC LIMIT 1) GROUP BY year;",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the singer genders who performed in those concerts.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_male, count(singer_id) FROM concert_singer.singer WHERE singer_id IN (SELECT singer_id FROM concert_singer.singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert_singer.concert WHERE stadium_id IN (SELECT stadium_id FROM concert_singer.stadium GROUP BY location ORDER BY count(*) DESC LIMIT 1))) GROUP BY is_male;",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Display the total number of concerts held in each stadium in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Stadium"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(concert_id) FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, make a line graph of stadium capacity over these stadiums.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Stadium"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Capacity"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, capacity FROM stadium WHERE name IN (SELECT name FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id GROUP BY name)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Plot a pie chart showcasing distribution of concerts by theme.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "theme",
                        "type": "nominal",
                        "title": "Theme"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT theme, count(*) FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Finally, show me a scatter plot of the release year and age of singers.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "quantitative",
                        "title": "Release Year"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Singer's Age"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT song_release_year, age FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart of the total concert count in each stadium.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "stadium_id"
                    },
                    "color": {
                        "field": "name"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*) FROM concert GROUP BY stadium_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me the same but as a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "stadium_id"
                    },
                    "y": {
                        "field": "name"
                    },
                    "color": {
                        "field": "name"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT count(*) FROM concert GROUP BY stadium_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show me the age distribution of the singers by gender in a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age"
                    },
                    "y": {
                        "field": "count"
                    },
                    "color": {
                        "field": "is_male"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, count(singer_id) FROM singer GROUP BY is_male, age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "And how does it look over time? Show me a line chart of the average age of singers in each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age"
                    },
                    "color": {
                        "field": "is_male"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, avg(age) FROM singer_in_concert JOIN concert ON singer_in_concert.concert_id = concert.concert_id GROUP BY year, is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize a pie chart showing the number of concerts organized in each stadium.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, count(concert_id) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show a bar chart comparing the capacities of these stadiums.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, capacity FROM stadium",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What was the highest attendance in each of these stadiums?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "highest",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, highest FROM stadium",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show me a line chart of the average attendance of each stadium over different years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "average",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, average, name FROM concert JOIN stadium ON concert.stadium_id = stadium.stadium_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of concerts organized in each stadium.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium_id, count(concert_id) FROM concert GROUP BY stadium_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about the multi-line chart comparing the number of male and female singers in each concert?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert_id, count(singer_id), is_male FROM singer_in_concert GROUP BY concert_id, is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "On the other hand, create a pie chart to show the proportion of singers from each country.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, count(singer_id) FROM singer GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Lastly, generate a scatter chart to compare the singer's age and their song's release year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "song_release_year",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, song_release_year FROM singer",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of concerts grouped by their years.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "tooltip": [
                        {
                            "aggregate": "count",
                            "field": "*",
                            "type": "quantitative"
                        }
                    ]
                }
            },
            "VQL": "Visualize BAR SELECT year, count(*) FROM concert GROUP BY year",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "For the year with the most concerts, show a pie chart of concerts grouped by their themes.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "theme",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "tooltip": [
                        {
                            "field": "theme",
                            "type": "nominal"
                        },
                        {
                            "field": "*",
                            "aggregate": "count",
                            "type": "quantitative"
                        }
                    ]
                }
            },
            "VQL": "Visualize PIE SELECT theme, count(*) FROM concert WHERE year=(SELECT year FROM concert GROUP BY year ORDER BY count(*) DESC LIMIT 1) GROUP BY theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of the stadiums where these concerts took place, with the x-axis representing the stadium's highest attendance and y-axis representing the stadium's lowest attendance.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "highest",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "lowest",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "legend": null
                    },
                    "tooltip": [
                        {
                            "field": "name",
                            "type": "nominal"
                        }
                    ]
                }
            },
            "VQL": "Visualize SCATTER_PLOT SELECT highest, lowest, name FROM stadium WHERE stadium_id IN (SELECT stadium_id FROM concert WHERE year=(SELECT year FROM concert GROUP BY year ORDER BY count(*) DESC LIMIT 1))",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a line chart with the age of singers at these concerts grouped by their song release year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT song_release_year, average(age) FROM singer WHERE singer_id IN (SELECT singer_id FROM singer_in_concert WHERE concert_id IN (SELECT concert_id FROM concert WHERE year=(SELECT year FROM concert GROUP BY year ORDER BY count(*) DESC LIMIT 1))) GROUP BY song_release_year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of concerts grouped by theme in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT theme, count(*) as concert_count FROM concert GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show the average age of singers for each theme.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "average_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT c.theme, AVG(s.age) as average_age FROM concert AS c, singer_in_concert AS si, singer AS s WHERE c.concert_id = si.concert_id AND si.singer_id = s.singer_id GROUP BY c.theme",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Next, represent the count of male and female singers in each theme in a stacked bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "singer_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize STACKED_BAR SELECT c.theme, count(*) as singer_count, s.is_male FROM concert AS c, singer_in_concert AS si, singer AS s WHERE c.concert_id = si.concert_id AND si.singer_id = s.singer_id GROUP BY c.theme, s.is_male",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Lastly, show a line chart over the years for concert count grouped by location of stadium.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT c.year, st.location, count(*) as concert_count FROM concert AS c, stadium AS st WHERE c.stadium_id = st.stadium_id GROUP BY c.year, st.location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts per location.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, count(concert_id) FROM concert_singer GROUP BY location",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the same information.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT location, count(concert_id) FROM concert_singer GROUP BY location",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a line chart of the average age of singers for each concert theme.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "theme",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT theme, AVG(age) FROM concert_singer GROUP BY theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show a scatter plot illustrating the relation between the highest and lowest capacity of stadiums.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "highest",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "lowest",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT highest, lowest FROM stadium",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of concerts by theme.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal",
                        "legend": {
                            "title": "Concert Theme"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT theme, count(concert_id) FROM concert GROUP BY theme.",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show a bar chart of the number of singers based on their origin country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(singer_id) FROM singer GROUP BY country.",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "What about a scatter chart of the stadiums capacity?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "none"
                    },
                    "y": {
                        "field": "capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, capacity FROM stadium.",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Finally, let's see a line chart of number of songs released by singers per year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "song_release_year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "song_name",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT song_release_year, count(song_name), name FROM singer GROUP BY song_release_year, name.",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Produce a pie chart with different pieces representing the total capacity of concerts that different singers have performed at.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "capacity",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "legend": {
                            "title": "Singer"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.name, SUM(stadium.capacity) FROM singer_in_concert INNER JOIN concert ON singer_in_concert.concert_id = concert.concert_id INNER JOIN singer ON singer_in_concert.singer_id = singer.singer_id INNER JOIN stadium on concert.stadium_id = stadium.stadium_id GROUP BY singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show me a line chart of highest, lowest and average ticket prices of concerts grouped by years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "highest",
                        "type": "quantitative"
                    },
                    "y2": {
                        "field": "lowest"
                    },
                    "color": {
                        "field": "year",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year, AVG(highest), AVG(lowest), AVG(average) FROM stadium JOIN concert ON stadium.stadium_id = concert.stadium_id GROUP BY year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "And show a bar chart of the number of male and female singers per country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_male",
                        "type": "nominal",
                        "legend": {
                            "title": "Gender"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, COUNT(*) FROM singer GROUP BY country, is_male",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts by singer",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT s.name, COUNT(c.concert_id) as concert_count FROM singer AS s JOIN singer_in_concert AS sc ON s.singer_id = sc.singer_id JOIN concert AS c ON sc.concert_id = c.concert_id GROUP BY s.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of concerts by theme",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "concert_count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    },
                    "color": {
                        "field": "theme",
                        "type": "nominal",
                        "title": "Theme"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT c.theme, COUNT(c.concert_id) as concert_count FROM concert AS c GROUP BY c.theme",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "For the singer from the first query, show a line chart of concerts over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "field": "concert_count",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT c.year, COUNT(c.concert_id) as concert_count FROM singer AS s JOIN singer_in_concert AS sc ON s.singer_id = sc.singer_id JOIN concert AS c ON sc.concert_id = c.concert_id WHERE s.name={SINGER_NAME_FROM_FIRST_QUERY} GROUP BY c.year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "In the location of these concerts, show a scatter plot of the stadium capacity vs average concert attendance",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Stadium Capacity"
                    },
                    "y": {
                        "field": "average",
                        "type": "quantitative",
                        "title": "Average Concert Attendance"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT st.capacity, st.average FROM stadium AS st JOIN concert AS c ON st.stadium_id = c.stadium_id WHERE c.concert_id IN (SELECT concert_id FROM singer_in_concert WHERE singer_id = (SELECT singer_id FROM singer WHERE name = {SINGER_NAME_FROM_FIRST_QUERY}))",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart with the total number of concerts held at each stadium",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stadium.name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert.concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stadium.name, count(concert.concert_id) FROM stadium, concert WHERE stadium.stadium_id=concert.stadium_id GROUP BY stadium.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now show a line chart of the average stadium capacity over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "concert.year",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "stadium.capacity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT concert.year, AVG(stadium.capacity) FROM stadium, concert WHERE stadium.stadium_id=concert.stadium_id GROUP BY concert.year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Can you compare the number of male and female singers in concerts?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "singer.is_male",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "singer_in_concert.concert_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.is_male, count(singer_in_concert.concert_id) FROM singer, singer_in_concert WHERE singer.singer_id=singer_in_concert.singer_id GROUP BY singer.is_male",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "For the same, show the ratio in the form of a pie chart",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "singer_in_concert.concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "singer.is_male",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.is_male, count(singer_in_concert.concert_id) FROM singer, singer_in_concert WHERE singer.singer_id=singer_in_concert.singer_id GROUP BY singer.is_male",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of concerts by each country where the singers are from",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal",
                        "title": "Country"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.country, COUNT(concert.concert_id) FROM concert, singer, singer_in_concert WHERE concert.concert_id = singer_in_concert.concert_id AND singer.singer_id = singer_in_concert.singer_id GROUP BY singer.country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Now, show a pie chart of concerts by these countries for only male singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.country, COUNT(concert.concert_id) FROM concert, singer, singer_in_concert WHERE concert.concert_id = singer_in_concert.concert_id AND singer.singer_id = singer_in_concert.singer_id AND singer.is_male = True GROUP BY singer.country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        },
        {
            "Natural Language Query": "Plot a scatter chart of the capacity of the stadiums by the number of concerts held",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "capacity",
                        "type": "quantitative",
                        "title": "Stadium Capacity"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "concert_id",
                        "type": "quantitative",
                        "title": "Number of Concerts"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT stadium.capacity, COUNT(concert.concert_id) FROM concert, stadium WHERE concert.stadium_id = stadium.stadium_id GROUP BY stadium.capacity",
            "Context Dependency Type": "Independent",
            "Database Schema": " | concert_singer | stadium : stadium_id , location , name , capacity , highest , lowest , average | singer : singer_id , name , country , song_name , song_release_year , age , is_male | concert : concert_id , concert_name , theme , stadium_id , year | singer_in_concert : concert_id , singer_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of highschooler students by grade",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Number of highschooler students by Grade",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show the distribution of students who likes others by their grades",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Distribution of students who likes others by Grade",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students who like others"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT h.grade, count(*) FROM highschooler h, likes l WHERE h.id=l.student_id GROUP BY h.grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show the distribution of students who have friends by their grades",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Distribution of students who have friends by Grade",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students who have friends"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT h.grade, count(*) FROM highschooler h, friend f WHERE h.id=f.student_id GROUP BY h.grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of students who likes others by their grades",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Pie chart of Number of students who likes others by Grade",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal",
                        "title": "Grade"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT h.grade, count(*) FROM highschooler h, likes l WHERE h.id=l.student_id GROUP BY h.grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the distribution of students across different grades",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Can I see a pie chart of how many friends each grade has?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Friends count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(friend.student_id) as Friends count FROM highschooler JOIN friend ON highschooler.id=friend.student_id GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How about the number of likes received by each grade? Show it in a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "Likes received",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT grade, count(likes.liked_id) as Likes received FROM highschooler JOIN likes ON highschooler.id=likes.student_id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show the scatter chart of the relation between friends count and likes received for each grade",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Friends count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "Likes received",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT grade, count(friend.student_id) as Friends count, count(likes.liked_id) as Likes received FROM highschooler JOIN friend ON highschooler.id=friend.student_id JOIN likes ON highschooler.id=likes.student_id GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of students across grades in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show how many friends each student has.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Student Name"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative",
                        "title": "Number of Friends"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(friend_id) FROM highschooler INNER JOIN friend ON highschooler.id = friend.student_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Give me a pie chart showing the proportion of students who like others.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "student_id",
                        "aggregate": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "likes",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT student_id, CASE WHEN liked_id IS NOT NULL THEN 'Likes Others' ELSE 'Does Not Like Others' END AS likes FROM likes GROUP BY likes",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschoolers in each grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How many friends does each highschooler have?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, count(friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Who are the high schoolers that do not like anyone?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "value": 1,
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name FROM highschooler WHERE id NOT IN (SELECT student_id FROM likes)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show the distribution of highschoolers' grades who liked someone.",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT grade, count(id) FROM highschooler WHERE id IN (SELECT student_id FROM likes) GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of highschoolers in each grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the proportion of highschoolers who like someone in the same grade.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "stack": true
                    },
                    "color": {
                        "field": "same_grade",
                        "type": "nominal"
                    },
                    "tooltip": [
                        {
                            "field": "same_grade",
                            "type": "nominal"
                        },
                        {
                            "aggregate": "count",
                            "field": "student_id",
                            "type": "quantitative"
                        }
                    ],
                    "title": "Proportion of Highschoolers Who Like Someone in the Same Grade"
                }
            },
            "VQL": "Visualize PIE SELECT same_grade, count(*) FROM (SELECT s1.id AS student_id, IF(s1.grade = s2.grade, 'Yes', 'No') AS same_grade FROM highschooler s1, highschooler s2, likes l WHERE s1.id=l.student_id AND s2.id=l.liked_id) GROUP BY same_grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of the number of friends each highschooler has.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Highschooler"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative",
                        "title": "Number of Friends"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, count(friend_id) FROM highschooler h, friend f WHERE h.id=f.student_id GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschoolers grouped by grade",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "tooltip": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the same count",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of friends each highschooler has",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, count(friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY name, grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Display a line chart depicting the trend of the number of likes received by each highschooler",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "liked_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, count(liked_id) FROM highschooler JOIN likes ON highschooler.id = likes.liked_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of students across different grades.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Now show me the number of friends each student has in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "friend_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT student_id, count(friend_id) FROM friend GROUP BY student_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Lastly, plot a scatter chart representing the grade of each student and the number of their liked students.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "liked_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "student_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT highschooler.grade, count(likes.liked_id) FROM highschooler JOIN likes ON highschooler.ID = likes.student_id GROUP BY highschooler.grade, likes.student_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschooler students in each grade.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Now show a pie chart with the proportion of students who have at least one friend, for each grade.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal",
                        "legend": {
                            "title": "Grade"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(DISTINCT student_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "I would like to see a scatter chart of the number of friends vs the grade of students.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative",
                        "title": "Number of Friends"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT grade, count(friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Finally, show a line chart with the number of liked individuals each grade has.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "liked_id",
                        "type": "quantitative",
                        "title": "Number of Liked"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT grade, count(liked_id) FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show the total number of highschoolers per grade in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "total_number_of_highschoolers",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How many friends does each highschooler have? Show this in a scatter plot with grade on the x-axis and number of friends on the y-axis.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "number_of_friends",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT grade, count(*) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY grade, highschooler.id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show in a pie chart the distribution of liked students among the grades.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "total_liked",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT grade, count(*) FROM highschooler LEFT JOIN likes ON highschooler.id = likes.liked_id GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How many students who are liked do not have any friends? Show this in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "lonely_students",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT grade, count(*) FROM ((SELECT highschooler.id FROM highschooler LEFT JOIN friend ON highschooler.id = friend.friend_id WHERE friend.friend_id IS NULL) AS no_friends) LEFT JOIN likes ON no_friends.id = likes.liked_id GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students in each grade",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of friends each student has",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "student_id",
                        "type": "nominal",
                        "title": "Student ID"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT student_id, count(friend_id) FROM friend GROUP BY student_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of student ID and the ID they liked",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "quantitative",
                        "title": "Student ID"
                    },
                    "y": {
                        "field": "liked_id",
                        "type": "quantitative",
                        "title": "Liked ID"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, liked_id FROM likes",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a line chart of the grade distribution among liked students",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Likes"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT grade, count(*) FROM highschooler WHERE id IN (SELECT liked_id FROM likes) GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of highschooler students per grade",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count highschooler grade",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a bar chart comparing the number of highschooler students who like someone in their own grade compared to a different grade",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "likes own grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count highschooler grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hg.grade, COUNT(*) FROM highschooler hg JOIN likes l ON hg.id = l.student_id JOIN highschooler h2 ON l.liked_id = h2.id WHERE hg.grade = h2.grade GROUP BY hg.grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatterplot of the grade vs the number of friends in that grade",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "count friends grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT f.grade, COUNT(*) FROM highschooler hg JOIN friend f ON hg.id = f.student_id GROUP BY f.grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the distribution of highschoolers across different grades.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative",
                        "title": "Number of Highschoolers"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Now, show the distribution of the number of friends per student.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal",
                        "title": "Student ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative",
                        "title": "Number of Friends"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT student_id, count(friend_id) FROM friend GROUP BY student_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Display a pie chart of the highest number of likes received by students.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "liked_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "student_id",
                        "type": "nominal",
                        "title": "Student ID"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT student_id, count(liked_id) FROM likes GROUP BY student_id ORDER BY count(liked_id) DESC LIMIT 1",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of highschoolers grouped by their grade.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of friends each highschooler has.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "number_of_friends",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT student_id, COUNT(friend_id) AS number_of_friends FROM friend GROUP BY student_id JOIN highschooler ON student_id = id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How many likes does each highschooler gain?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "number_of_likes",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT liked_id as student_id, COUNT(student_id) AS number_of_likes FROM likes GROUP BY liked_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "What's the relationship between a highschooler's grade and the number of likes they receive?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "number_of_likes",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT grade, COUNT(student_id) AS number_of_likes FROM likes JOIN highschooler ON liked_id = id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschooler grouped by their grade",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of friends per highschooler's grade",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT grade, count(student_id) FROM highschooler JOIN friend ON highschooler.id=friend.student_id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatter plot of friends versus likes for highschooler's grade",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "likes_count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "friends_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT highschooler.grade, count(friend.student_id) as friends_count, count(likes.student_id) as likes_count FROM highschooler LEFT JOIN friend on highschooler.id=friend.friend_id LEFT JOIN likes on highschooler.id=likes.liked_id GROUP BY highschooler.grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of students in each grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "grade",
                        "type": "ordinal",
                        "sort": "none",
                        "title": "Grade"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Now, let\u2019s see the distribution of friends across different grades.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "grade",
                        "type": "ordinal",
                        "sort": "none",
                        "title": "Grade"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "friend_id",
                        "title": "Number of Friends"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(friend_id) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "What about the number of students who liked someone in each grade?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "grade",
                        "type": "ordinal",
                        "sort": "none",
                        "title": "Grade"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "field": "liked_id",
                        "title": "Number of 'Likes'"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(liked_id) FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show me a scatter chart of the average grade versus the number of 'likes'.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "average_grade",
                        "type": "quantitative",
                        "title": "Average Grade"
                    },
                    "y": {
                        "field": "count_likes",
                        "type": "quantitative",
                        "title": "Number of 'Likes'"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT avg(grade) as average_grade, count(liked_id) as count_likes FROM highschooler JOIN likes ON highschooler.id = likes.student_id GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschoolers grouped by grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of highschoolers in each grade.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(id) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How many highschoolers have made at least one friend?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "HasFriends",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT CASE WHEN friend.student_id IS NULL THEN 'No' ELSE 'Yes' END as HasFriends, count(highschooler.id) FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id GROUP BY HasFriends",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show the relationship between the number of friends and likes received by each highschooler.",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "Friends",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "Likes",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "size": {
                        "field": "id",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT COUNT(friend.student_id) as Friends, COUNT(likes.liked_id) as Likes, highschooler.grade FROM highschooler LEFT JOIN friend ON highschooler.id = friend.student_id LEFT JOIN likes ON highschooler.id = likes.liked_id GROUP BY highschooler.grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the quantity of highschoolers grouped by grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "What about the number of friend connections by grade?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT highschooler.grade, count(*) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Lastly, show a scatter plot representing the number of likes between students.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "liked_id",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT student_id, liked_id FROM likes",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a scatter chart of the grades of students",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, grade FROM highschooler",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Do the same for the number of friends each student has",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "friend_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, COUNT(friend_id) AS friend_count FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How about the number of likes each student has received?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "liked_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, COUNT(liked_id) AS liked_count FROM highschooler JOIN likes ON highschooler.id = likes.liked_id GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart representing the distribution of students' grades",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "grade",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of highschoolers in each grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a pie chart of the gender distribution in each grade.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "nominal",
                        "agg": "count"
                    },
                    "color": {
                        "field": "gender",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT gender, grade, COUNT(*) FROM highschooler GROUP BY gender, grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "What's the trend of total school kids with respect to grade?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal",
                        "title": "Grade"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT grade, COUNT(*) FROM highschooler GROUP BY grade ORDER BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Show a scatter chart of the friendship links between students.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "friend_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student_id, friend_id FROM friend",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of high schoolers grouped by their grade?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "What about the same data but represented in a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, COUNT(*) FROM highschooler GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "Now can you chart the number of friendships each grade has, using a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT highschooler.grade, COUNT(*) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        },
        {
            "Natural Language Query": "How about if we show the same data but in a scatter chart?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT highschooler.grade, COUNT(*) FROM highschooler JOIN friend ON highschooler.id = friend.student_id GROUP BY highschooler.grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | network_1 | highschooler : id , name , grade | friend : student_id , friend_id | likes : student_id , liked_id"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Teacher"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(*) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "What is the age distribution of the teachers?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "ordinal",
                        "title": "Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Teachers",
                        "stack": null
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM course_teach GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a line chart of average grades for each course over time.",
            "Vega-lite Code": {
                "mark": {
                    "type": "line",
                    "point": true
                },
                "encoding": {
                    "y": {
                        "field": "average grades",
                        "type": "quantitative",
                        "title": "Average Grades"
                    },
                    "x": {
                        "field": "staring_date",
                        "type": "time",
                        "title": "Date"
                    },
                    "color": {
                        "field": "course",
                        "type": "nominal",
                        "title": "Course"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT starting_date, course, avg(grade) FROM course_arrange GROUP BY starting_date, course",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Compare the grades given by teachers from different hometowns.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "average grades",
                        "type": "quantitative",
                        "title": "Average Grades"
                    },
                    "x": {
                        "field": "hometown",
                        "type": "nominal",
                        "title": "Hometown"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hometown, avg(grade) FROM course_arrange, course_teach WHERE course_teach.teacher_id = course_arrange.teacher_id GROUP BY hometown ",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses assigned to each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher_id",
                        "type": "ordinal",
                        "title": "Teacher"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher_id, count(course_id) FROM course_arrange GROUP BY teacher_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now show a pie chart of the same data.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "teacher_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT teacher_id, count(course_id) FROM course_arrange GROUP BY teacher_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, visualize a line chart showing distribution of teacher age.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Teachers"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, count(*) FROM teacher GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Let's see a scatter plot of teacher's age versus the number of courses they teach.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Teacher Age"
                    },
                    "y": {
                        "field": "course_count",
                        "title": "Number of Courses",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT teacher.age, count(course_arrange.course_id) as course_count FROM teacher JOIN course_arrange ON teacher.teacher_id = course_arrange.teacher_id GROUP BY teacher.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher_id",
                        "type": "ordinal",
                        "title": "Teacher ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher_id, count(course_id) FROM course_teach GROUP BY teacher_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Which teachers teach more than one course?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher_id",
                        "type": "ordinal",
                        "title": "Teacher ID"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.count > 1"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT teacher_id, count(course_id) FROM course_teach WHERE count(course_id) > 1 GROUP BY teacher_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "What are the average grades for each teacher's course?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher_id",
                        "type": "ordinal",
                        "title": "Teacher ID"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative",
                        "title": "Average Grade"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher_id, average(grade) FROM course_arrange GROUP BY teacher_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Create a scatterplot representing age and hometown for all teachers.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Teacher's Age"
                    },
                    "y": {
                        "field": "hometown",
                        "type": "nominal",
                        "title": "Teacher's Hometown"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Teacher's Name"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, age, hometown FROM teacher",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, COUNT(course_id) FROM course_teach, teacher WHERE course_teach.teacher_id = teacher.teacher_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a line chart of the average grade for each teacher over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "staring_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT staring_date, AVG(grade), name FROM course_teach, course, course_arrange WHERE course_teach.course_id = course.course_id AND course_teach.teacher_id = course_arrange.teacher_id GROUP BY staring_date, name ORDER BY staring_date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, show a pie chart that represents the age distribution of teachers",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "age",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT age, COUNT(*) FROM teacher GROUP BY age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Finally, Show a scatter plot of the average grade vs. age of teacher",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, AVG(grade) FROM teacher, course_arrange WHERE teacher.teacher_id = course_arrange.teacher_id GROUP BY age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, show a line chart portraying how these different course counts correlate with the ages of teachers.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of courses"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, count(course_id) FROM course_teach GROUP BY age, name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, illustrate how these course counts vary according to the teachers' hometowns using a scatter chart.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "hometown",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of courses"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT hometown, count(course_id) FROM course_teach GROUP BY hometown, name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Finally, show a pie chart of the proportion of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "course_id",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "tooltip": {
                        "field": "course_id",
                        "type": "quantitative",
                        "aggregate": "count",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Number of Courses per Teacher",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal",
                        "title": "Teacher"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher.name, count(*) FROM course_teach GROUP BY teacher.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show me the distribution of teachers by age in a pie chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Distribution of Teachers by Age",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "age",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "age",
                        "type": "ordinal",
                        "title": "Age"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*), teacher.age FROM course_teach GROUP BY teacher.age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can we see the average grade distribution per course in a line chart?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "title": "Average Grade Distribution per Course",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "course",
                        "type": "ordinal",
                        "title": "Course"
                    },
                    "y": {
                        "field": "grade",
                        "aggregate": "mean",
                        "type": "quantitative",
                        "title": "Average Grade"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT course_arrange.course_id, AVG(grade) FROM course_teach GROUP BY course_arrange.course_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show the number of courses taught by each teacher in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can you add the teacher's age as additional information on the X axis of the chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Teacher (age)"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    },
                    "tooltip": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id), age FROM course_teach GROUP BY name",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show the average course grade taught by each teacher in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, avg(grade) FROM course_teach GROUP BY name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can you show the teacher's hometown as an added detail in the tooltip?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative"
                    },
                    "tooltip": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, avg(grade), hometown FROM course_teach GROUP BY name",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now show the number of courses arranged by grade.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT grade, count(course_id) FROM course_arrange GROUP BY grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show the age distribution of teachers.",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "teacher_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT age, count(teacher_id) FROM teacher GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can you show that on a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "age",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT age, count(teacher_id) AS count FROM teacher GROUP BY age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now show the distribution of teachers' age in a histogram chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM course_teach GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Let's see a pie chart of teachers' hometown distribution.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "hometown",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT hometown, count(*) FROM course_teach GROUP BY hometown",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, plot a scatter chart to show the relationship between teacher age and the number of courses they teach.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "number_of_courses",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, count(course_id) as number_of_courses FROM course_teach GROUP BY name, age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart displaying the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher.name, count(course.course_id) FROM course_teach JOIN teacher ON course_teach.teacher_id = teacher.teacher_id JOIN course on course_teach.course_id = course.course_id GROUP BY teacher.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "How old are these teachers?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher.name, teacher.age FROM teacher WHERE teacher.name IN (SELECT teacher.name FROM course_teach JOIN teacher on course_teach.teacher_id = teacher.teacher_id GROUP BY teacher.name)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Where are these teachers from?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "hometown",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "name",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher.hometown, count(teacher.name) FROM teacher WHERE teacher.name IN (SELECT teacher.name FROM course_teach JOIN teacher on course_teach.teacher_id = teacher.teacher_id GROUP BY teacher.name) GROUP BY teacher.hometown",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart displaying the number of teachers according to their hometown.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hometown, count(*) FROM teacher GROUP BY hometown",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now show the distribution of the teachers' ages in these hometowns.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, hometown FROM teacher GROUP BY age, hometown",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "For the youngest teacher, show a pie chart of the courses they teach.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "course",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "course",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT course FROM course_teach WHERE teacher_id = (SELECT teacher_id FROM teacher ORDER BY age ASC LIMIT 1)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Display a scatter chart of grade against course for this teacher.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "course",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT course, grade FROM course_arrange WHERE teacher_id = (SELECT teacher_id FROM teacher ORDER BY age ASC LIMIT 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, count(*) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, display a line chart of teachers' age.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, age FROM course_teach",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can I see the average grade given by each teacher in a bar chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "avgGrade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, AVG(grade) AS avgGrade FROM course_teach GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Lastly, let's see a scatter plot of the teacher age and average grade they give.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "avgGrade",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, AVG(grade) AS avgGrade, name FROM course_teach GROUP BY name, age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by teachers, grouped by each teacher's name.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": {
                            "op": "count",
                            "field": "course_id",
                            "order": "descending"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a line chart of the average age of teachers who teach each course, grouped by course_id.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "course_id",
                        "type": "nominal",
                        "sort": {
                            "order": "ascending"
                        }
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT course_id, avg(age) FROM course_teach GROUP BY course_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a pie chart of the hometowns of teachers who teach the same course from the last query.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "hometown",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT hometown, count(*) FROM course_teach WHERE course_id = PreviousQuery.course_id GROUP BY hometown",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "What are the average grades for the same course from the previous queries, displayed as a bar chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "course_id",
                        "type": "nominal",
                        "sort": {
                            "order": "ascending"
                        }
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT course_id, avg(grade) FROM course_arrange WHERE course_id = PreviousQuery.course_id",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show the total number of courses taught by each teacher in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Teacher"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a pie chart of the grade distribution for the teacher who teaches the most courses.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(*) FROM course_arrange WHERE teacher_id = (SELECT teacher_id FROM course_teach GROUP BY teacher_id ORDER BY count(course_id) DESC LIMIT 1) GROUP BY grade",
            "Context Dependency Type": "coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, show the teachers' age distribution who teach this grade level using a histogram",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": true,
                        "field": "age",
                        "title": "Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "title": "Count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM course_teach WHERE teacher_id IN (SELECT teacher_id FROM course_arrange WHERE grade = __(previous_selected_grade)__ GROUP BY teacher_id) GROUP BY age",
            "Context Dependency Type": "ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of teachers classified by their hometown.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "teacher_id",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "hometown",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hometown, count(*) FROM teacher GROUP BY hometown",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now, show me the comparison of teachers' ages in a box plot categorized by their hometowns.",
            "Vega-lite Code": {
                "mark": "boxplot",
                "encoding": {
                    "x": {
                        "field": "hometown",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BOXPLOT SELECT age, hometown FROM teacher GROUP BY hometown",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "What is the age distribution of teachers in each grade?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "grade",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, grade FROM course_arrange GROUP BY grade",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can you show the number of courses each teacher teaches in a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the number of courses each teacher is teaching in a bar chart",
            "Vega-lite Code": {
                "width": 500,
                "height": 300,
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher_id",
                        "type": "ordinal",
                        "axis": {
                            "title": "Teacher"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Courses"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR Select teacher_id, count(course_id) from course_arrange group by teacher_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show me the age distribution of these teachers in a histogram",
            "Vega-lite Code": {
                "width": 500,
                "height": 300,
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "bin": true,
                        "type": "quantitative",
                        "axis": {
                            "title": "Age"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "axis": {
                            "title": "Count"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR Select age, count(*) from teacher where teacher_id in (select distinct teacher_id from course_arrange) group by age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a pie chart of the grades of the courses arranged by these teachers",
            "Vega-lite Code": {
                "width": 500,
                "height": 300,
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "grade",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal",
                        "legend": {
                            "title": "Grades"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE Select grade, count(*) from course_arrange where teacher_id in (select distinct teacher_id from teacher) group by grade",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a scatter plot of the teachers' age against the average grade of the courses they teach",
            "Vega-lite Code": {
                "width": 500,
                "height": 300,
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "average_grade",
                        "type": "quantitative",
                        "axis": {
                            "title": "Average Grade"
                        }
                    },
                    "y": {
                        "field": "age",
                        "type": "quantitative",
                        "axis": {
                            "title": "Age"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER Select t.age, avg(c.grade) from teacher t, course_arrange c where t.teacher_id = c.teacher_id group by t.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of grades for different courses taught by each teacher in a bar chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Distribution of grades for different courses taught by each teacher",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "teacher.name",
                        "type": "nominal",
                        "title": "Teacher"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative",
                        "title": "Average Grade"
                    },
                    "color": {
                        "field": "course.course_id",
                        "type": "nominal",
                        "title": "Course"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT teacher.name, AVG(course_arrange.grade), course.course_id FROM course_arrange INNER JOIN teacher ON course_arrange.teacher_id=teacher.teacher_id INNER JOIN course ON course_arrange.course_id=course.course_id GROUP BY teacher.name, course.course_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Now show a line chart representing the changes in the average grade of each course over time.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Average grades for each course over time",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "course.staring_date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative",
                        "title": "Average Grade"
                    },
                    "color": {
                        "field": "course.course_id",
                        "type": "nominal",
                        "title": "Course"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT course.staring_date, AVG(course_arrange.grade), course.course_id FROM course_arrange INNER JOIN course ON course_arrange.course_id=course.course_id GROUP BY course.staring_date, course.course_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Next, depict the number of teachers from each hometown in a pie chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "Number of teachers from each hometown",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "title": "Number of Teachers"
                    },
                    "color": {
                        "field": "teacher.hometown",
                        "type": "nominal",
                        "title": "Hometown"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT COUNT(teacher.teacher_id), teacher.hometown FROM teacher GROUP BY teacher.hometown",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Create a pie chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "How about a bar chart comparing the teachers' ages?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, age FROM course_teach",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a line chart of the courses' starting_date.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "staring_date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT staring_date, count(course_id) FROM course_teach GROUP BY staring_date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Can you show scatter plot of grades received in the courses taught by each teacher?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, grade FROM course_arrange GROUP BY name, grade",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of courses taught by each teacher.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Teacher"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(course_id) FROM course_teach GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Display a line chart showing the average age of teachers grouped by their hometown.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "hometown",
                        "type": "nominal",
                        "title": "Hometown"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative",
                        "title": "Average Age"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT hometown, avg(age) FROM course_teach GROUP BY hometown",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a pie chart of the grades distribution for each course.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "grade",
                        "type": "quantitative",
                        "title": "Number of Grades"
                    },
                    "color": {
                        "field": "grade",
                        "type": "nominal",
                        "title": "Grade"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT grade, count(grade) FROM course_arrange GROUP BY grade",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Draw a scatter chart of teacher age against the number of courses they teach.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Teacher Age"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative",
                        "title": "Number of Courses"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, count(course_id) FROM course_teach GROUP BY age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of teachers grouped by their hometown",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "hometown",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "teacher_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT hometown, count(teacher_id) FROM teacher GROUP BY hometown",
            "Context Dependency Type": "Independent",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a line chart of the number of courses a teacher from each hometown is teaching",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "hometown",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "course_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT hometown, count(course_id) FROM course_arrange INNER JOIN teacher on course_arrange.teacher_id = teacher.teacher_id GROUP BY hometown",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of teachers' age from the hometown which has the most courses",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "age",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT age, count(*) FROM teacher WHERE hometown = (SELECT hometown FROM course_arrange INNER JOIN teacher on course_arrange.teacher_id = teacher.teacher_id GROUP BY hometown ORDER BY count(course_id) DESC LIMIT 1) GROUP BY age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        },
        {
            "Natural Language Query": "Show a scatter chart of teachers' age and the grade of the courses they are teaching",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "grade",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT age, grade FROM course_arrange INNER JOIN teacher on course_arrange.teacher_id = teacher.teacher_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | course_teach | course : course_id , staring_date , course | teacher : teacher_id , name , age , hometown | course_arrange : course_id , teacher_id , grade"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, can I see a pie chart showing the proportion of total flights per country of airline origin?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airlines.country, count(flights.airline) FROM flights JOIN airlines ON flights.airline = airlines.uid GROUP BY airlines.country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can we see a scatter chart of the number of flights per originating city?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT airports.city, count(flights.sourceairport) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY airports.city",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Lastly, can you show a line chart indicating the number of flights per destination country?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT airports.country, count(flights.destairport) FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY airports.country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the total number of flights grouped by airlines.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "flights",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, COUNT(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show a bar chart comparing the total number of flights from different cities.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "flights",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, COUNT(*) FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY city",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Let's see this data in a line chart where x-axis is cities and y-axis is the total number of flights",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "flights",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT city, COUNT(*) FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY city",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Let's drill down and look at the scatter chart of all flights from each city to country.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "size": {
                        "field": "flights",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT city, country, COUNT(*) FROM airports JOIN flights ON airports.airportcode = flights.sourceairport GROUP BY city, country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, COUNT(flightno) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show the flights distribution as a pie chart",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, COUNT(flightno) FROM flights GROUP BY airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "How about showing this time the number of flights emanating from each source airport as a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT sourceairport, COUNT(flightno) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Finally, represent the number of destination airports per airline in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "destairport",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, COUNT(destairport) FROM flights GROUP BY airline",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(flightno) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, show me a pie chart of the distribution of flights across different destinations.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "destairport",
                        "type": "ordinal",
                        "stack": true
                    },
                    "color": {
                        "field": "destairport",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT destairport, count(*) FROM flights GROUP BY destairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Visualize the relationship between source airports and destination airports using a scatter chart.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "destairport",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT sourceairport, destairport FROM flights",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Compare the number of flights per source airport using a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT sourceairport, count(flightno) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart representing the number of flights for each airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, COUNT(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, can we see these counts as a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "size": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, COUNT(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of flights to each destination airport.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "destairport",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT destairport, COUNT(*) FROM flights GROUP BY destairport",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "How about a line chart of the same data?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "destairport",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT destairport, COUNT(*) FROM flights GROUP BY destairport",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of flights across different countries",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "country",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT country, count(*) FROM airports GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "How many flights are there from each city?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "And to each destination city?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY city",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights each airline operates.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "For the airline with the most flights, show a pie chart of the proportion of flights per destination airport.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "destairport",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "destairport",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT destairport, count(*) FROM flights WHERE airline = (SELECT airline FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 1) GROUP BY destairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Plot a scatter plot mapping the number of flights versus destination airports for this airline.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "destairport",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "numflights",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT destairport, count(*) as numflights FROM flights WHERE airline = (SELECT airline FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 1) GROUP BY destairport",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "What are the top 5 airlines with the most flights?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "sort": {
                            "order": "descending"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 5",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a pie chart of the flights by these airlines",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "airline",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT airline, count(*) FROM flights WHERE airline IN (SELECT airline FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 5) GROUP BY airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "And the average flights per country of these airlines?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT countries, AVG(count(*)) FROM flights INNER JOIN airlines ON flights.airline = airlines.airline WHERE airlines.airline IN (SELECT airline FROM flights GROUP BY airline ORDER BY count(*) DESC LIMIT 5) GROUP BY countries",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart of the number of flights per airline.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "airline",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "What about those airlines that are in the United States?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "airline",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal",
                        "legend": null
                    },
                    "filter": {
                        "field": "country",
                        "oneOf": [
                            "United States"
                        ]
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, count(*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.country = 'United States' GROUP BY airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, show a bar chart of flights based on source airports for these US airlines.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sourceairport, count(*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.country = 'United States' GROUP BY sourceairport, airline",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "And how about those flights with Chicago as a destination?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal",
                        "legend": null
                    },
                    "filter": {
                        "field": "destairport",
                        "oneOf": [
                            "Chicago"
                        ]
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sourceairport, count(*) FROM flights JOIN airlines ON flights.airline = airlines.airline WHERE airlines.country = 'United States' AND flights.destairport = 'Chicago' GROUP BY sourceairport, airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart for the number of flights per airline.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of source airports per country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(distinct sourceairport) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show the number of destination airports per country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(distinct destairport) FROM flights JOIN airports ON flights.destairport = airports.airportcode GROUP BY country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Lastly, show a scatter plot for the flight number per airline.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT airline, flightno FROM flights",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of flights per airline.",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': { 'field': 'airline', 'type': 'quantitative', 'aggregate': 'count' }, 'color': { 'field': 'airline', 'type': 'nominal' } } }",
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, show a bar chart of the flights by source airport.",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': { 'field': 'sourceairport', 'type': 'nominal' }, 'y': { 'field': 'sourceairport', 'type': 'quantitative', 'aggregate': 'count' } } }",
            "VQL": "Visualize BAR SELECT sourceairport, count(*) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can you show a scatter plot comparing the number of flights from source airport to destination airport?",
            "Vega-lite Code": "{ 'mark': 'point', 'encoding': { 'x': { 'field': 'sourceairport', 'type': 'nominal' }, 'y': { 'field': 'destairport', 'type': 'nominal' }, 'size': { 'field': 'destairport', 'type': 'quantitative', 'aggregate': 'count' } } }",
            "VQL": "Visualize POINT SELECT sourceairport, destairport, count(*) FROM flights GROUP BY sourceairport, destairport",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can we see that spread out across multiple countries?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "country",
                        "type": "ordinal"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airlines.country, count(*), flights.airline FROM flights JOIN airlines ON flights.airline = airlines.airline GROUP BY airlines.country, flights.airline",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a pie chart of the flights broken down by source airport.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "sourceairport",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT sourceairport, count(*) FROM flights GROUP BY sourceairport",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can we also display that for the destination airports?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "destairport",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT destairport, count(*) FROM flights GROUP BY destairport",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights for each airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now, show me a line chart of flight numbers per each country of airline.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE JOIN airlines ON flights.airline=airlines.airline SELECT country, count(*) FROM flights GROUP BY country, airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can you show a pie chart of the flights distribution to different destination countries?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE JOIN airports ON flights.destairport=airports.airportcode SELECT country, count(*) FROM flights GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Finally, could you show a scatter chart of flight numbers from each source city to each destination city?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sourceCity",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "destCity",
                        "type": "nominal"
                    },
                    "size": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER JOIN airports AS src ON flights.sourceairport = src.airportcode JOIN airports AS dest ON flights.destairport = dest.airportcode SELECT src.city AS sourceCity, dest.city AS destCity, count(*) FROM flights GROUP BY sourceCity, destCity",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show the distribution of flights by airlines",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show the number of flights from each source airport",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sourceairport, count(*) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "How about the number of flights going to each destination airport?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "destairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT destairport, count(*) FROM flights GROUP BY destairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the number of flights per airline in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, COUNT(flightno) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show the number of airlines per country using a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "airline",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, COUNT(airline) FROM airlines GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Continuing on the topic of countries, can we visualize the number of airports per country using a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "ordinal",
                        "sort": "y"
                    },
                    "y": {
                        "field": "airportcode",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT country, COUNT(airportcode) FROM airports GROUP BY country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Lastly, show the number of flights from each source airport using a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "flightno",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT sourceairport, COUNT(flightno) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights per airline",
            "Vega-lite Code": "{ 'mark': 'bar', 'encoding': { 'x': {'field': 'airline', 'type': 'nominal'}, 'y': {'aggregate': 'count', 'type': 'quantitative'} } }",
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a pie chart of the flights distribution by source airport",
            "Vega-lite Code": "{ 'mark': 'arc', 'encoding': { 'theta': {'field': 'sourceairport', 'type': 'nominal', 'stack': true}, 'color': {'field':'sourceairport', 'type':'nominal'} } }",
            "VQL": "Visualize PIE SELECT sourceairport, count(*) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Display a scatter chart of flights, with source airports on the x-axis and destination airports on the y-axis",
            "Vega-lite Code": "{ 'mark': 'point', 'encoding': { 'x': {'field': 'sourceairport', 'type': 'nominal'}, 'y': {'field':'destairport', 'type':'nominal'} } }",
            "VQL": "Visualize SCATTER SELECT sourceairport, destairport FROM flights",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "How about showing a line graph for the number of flights per destination airport",
            "Vega-lite Code": "{ 'mark': 'line', 'encoding': { 'x': {'field': 'destairport', 'type': 'nominal'}, 'y': {'aggregate': 'count', 'type': 'quantitative'} } }",
            "VQL": "Visualize LINE SELECT destairport, count(*) FROM flights GROUP BY destairport",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart with the distribution of airlines by country",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "airline",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT country, count(*) FROM airlines GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show me a bar chart with the count of airports per country",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "country",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT country, count(*) FROM airports GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can we compare the airline distribution with the airports count in the same countries?",
            "Vega-lite Code": {
                "layer": [
                    {
                        "mark": "bar",
                        "encoding": {
                            "y": {
                                "field": "country",
                                "type": "nominal"
                            },
                            "x": {
                                "aggregate": "count",
                                "field": "*",
                                "type": "quantitative"
                            },
                            "color": {
                                "value": "blue"
                            }
                        }
                    },
                    {
                        "mark": "line",
                        "encoding": {
                            "y": {
                                "field": "country",
                                "type": "nominal"
                            },
                            "x": {
                                "aggregate": "count",
                                "field": "airline",
                                "type": "quantitative"
                            },
                            "color": {
                                "value": "red"
                            }
                        }
                    }
                ]
            },
            "VQL": "Visualize LAYER(Visualize BAR SELECT country, count(*) FROM airports GROUP BY country, Visualize LINE SELECT country, count(*) FROM airlines GROUP BY country)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Finally, show a scatter chart of flights from each source airport to destination airport",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "destairport",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT sourceairport, destairport FROM flights",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of flights per airline",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "airline"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "What are the top 5 airlines with the most number of flights?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    },
                    "order": {
                        "field": "flightno",
                        "sort": "descending"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(flightno) FROM flights GROUP BY airline ORDER BY count(flightno) DESC LIMIT 5",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Of these airlines, which has the most number of flights departing from the 'US'?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT f.airline, count(f.flightno) FROM flights f INNER JOIN airports a ON f.sourceairport = a.airportcode WHERE a.country = 'US' AND f.airline IN (SELECT airline FROM flights GROUP BY airline ORDER BY count(flightno) DESC LIMIT 5) GROUP BY f.airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Show a scatter plot of these airlines and their destinations",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "destairport",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT f.airline, f.destairport FROM flights f WHERE f.airline IN (SELECT airline FROM flights GROUP BY airline ORDER BY count(flightno) DESC LIMIT 5)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of flights aggregated by airlines",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(flightno) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can you break it down further by destinations?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "airline",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "destairport",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, destairport, count(flightno) FROM flights GROUP BY airline, destairport",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "What about the number of flights from each source airport?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sourceairport",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sourceairport, count(flightno) FROM flights GROUP BY sourceairport",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Can you show these data in a pie chart, grouped by country of the source airport?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "flightno",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "country",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT country, count(*) FROM flights INNER JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total number of flights for each airline.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "airline",
                        "type": "nominal",
                        "title": "Airline"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Total Number of Flights"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Now show these values in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Total Number of Flights"
                    },
                    "color": {
                        "field": "airline",
                        "type": "nominal",
                        "title": "Airline"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT airline, count(*) FROM flights GROUP BY airline",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "We can now look at a line chart showing the number of flights per country.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "country",
                        "type": "nominal",
                        "title": "Country"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Number of Flights"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT country, count(*) FROM flights JOIN airlines ON flights.airline = airlines.airline GROUP BY country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        },
        {
            "Natural Language Query": "Let's compare this to a scatter plot of number of flights per city.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal",
                        "title": "City"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative",
                        "title": "Number of Flights"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT city, count(*) FROM flights JOIN airports ON flights.sourceairport = airports.airportcode GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | flight_2 | airlines : uid , airline , abbreviation , country | airports : city , airportcode , airportname , country , countryabbrev | flights : airline , flightno , sourceairport , destairport"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees grouped by their age.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "age",
                        "type": "ordinal",
                        "title": "Age"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Employees"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM employee GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show where these employees are distributed by city in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now show a line chart of the average bonus against the year awarded.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "y": {
                        "field": "AVG(bonus)",
                        "type": "quantitative",
                        "title": "Average Bonus"
                    },
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal",
                        "title": "Year Awarded"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, AVG(bonus) FROM evaluation GROUP BY year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Finally, how is the number of products distributed among the shops? Show this in a scatter plot against the district.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "y": {
                        "field": "number_products",
                        "type": "quantitative",
                        "title": "Number of Products"
                    },
                    "x": {
                        "field": "district",
                        "type": "nominal",
                        "title": "District"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT district, number_products FROM shop",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees in each city.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(employee_id) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now show these numbers split by their full-time status.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(employee_id), is_full_time FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id GROUP BY city, is_full_time",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of bonus trend over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, avg(bonus) FROM evaluation GROUP BY year_awarded ORDER BY year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now show these trends split by their city of residence.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "bonus",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, avg(bonus), city FROM evaluation JOIN employee ON employee.employee_id = evaluation.employee_id GROUP BY city, year_awarded ORDER BY year_awarded",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart of the number of employees based on their city.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of full-time and part-time employees in each city.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    },
                    "column": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT city, is_full_time, count(*) FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id GROUP BY city, is_full_time",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Can you display a line chart showing the progression of the bonuses awarded to employees each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "average_bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, AVG(bonus) as average_bonus FROM evaluation GROUP BY year_awarded ORDER BY year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "In the same line, can you show the number of employees awarded each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, count(*) FROM evaluation GROUP BY year_awarded ORDER BY year_awarded",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart for the number of employees in each city.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "What about the age distribution of employees in the city with most employees?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "histogram",
                "encoding": {
                    "x": {
                        "field": "age",
                        "bin": true,
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize HISTOGRAM SELECT age, count(*) FROM employee WHERE city = (SELECT city FROM (SELECT city, count(*) as num_employees FROM employee GROUP BY city ORDER BY num_employees DESC LIMIT 1))",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show each shop's number of products in a scatter chart.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "shop_id",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number_products",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT shop_id, number_products FROM shop",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How many full time employees does each shop have?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop_id",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop_id, count(*) FROM hiring WHERE is_full_time = True GROUP BY shop_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees hired per shop",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop.name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "hiring.employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop.name, count(hiring.employee_id) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the total number products in the shops",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "x": {
                        "field": "shop.name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "shop.number_products",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT shop.name, sum(shop.number_products) FROM shop GROUP BY shop.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Can you show me a scatter chart of employee's age and their corresponding bonus?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "employee.age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "evaluation.bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT employee.age, evaluation.bonus FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Finally, show a line chart of the bonus employees received each year",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "evaluation.year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "evaluation.bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT evaluation.year_awarded, sum(evaluation.bonus) FROM evaluation GROUP BY evaluation.year_awarded",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees working in each shop.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop",
                        "type": "ordinal",
                        "title": "Shop"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Employees"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop, count(*) FROM hiring GROUP BY shop",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How about the average age of employees at each shop?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop",
                        "type": "ordinal",
                        "title": "Shop"
                    },
                    "y": {
                        "aggregate": "mean",
                        "field": "age",
                        "type": "quantitative",
                        "title": "Average Age"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop, AVG(age) FROM hiring JOIN employee ON hiring.employee_id = employee.employee_id GROUP BY shop",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Next, I want a pie chart showing the proportion of full-time and part-time employees in each shop.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "number_of_employees",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal",
                        "legend": {
                            "title": "Employee Type"
                        }
                    }
                }
            },
            "VQL": "Visualize ARC SELECT is_full_time, count(*) AS number_of_employees FROM hiring GROUP BY is_full_time",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Lastly, display a scatter chart of bonus against the year awarded for each employee.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "ordinal",
                        "title": "Year Awarded"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative",
                        "title": "Bonus"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT year_awarded, bonus FROM evaluation",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart showing the number of employees hired per shop.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "Number of Employees",
                        "type": "quantitative"
                    },
                    "x": {
                        "field": "Shop Name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop.name, count(*) FROM employee_hire_evaluation JOIN shop ON shop.shop_id = hiring.shop_id GROUP BY shop.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a scatter plot of the bonuses awarded per year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "Bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT evaluation.year_awarded, evaluation.bonus FROM employee_hire_evaluation JOIN evaluation ON employee.employee_id = evaluation.employee_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "What about the age distribution of employees at the shop with the highest number of hires?",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "Age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "Number of Employees",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT employee.age, count(*) FROM employee_hire_evaluation JOIN employee ON employee.employee_id = hiring.employee_id WHERE shop_id = (SELECT shop_id FROM hiring GROUP BY shop_id ORDER BY count(employee_id) DESC LIMIT 1) GROUP BY employee.age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show the products quantity for the shops managed by employees who have got the maximum bonus in year 2020.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Shop",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "Products Quantity",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT shop.name, shop.number_products FROM employee_hire_evaluation JOIN shop ON shop.manager_name = employee.name JOIN evaluation ON evaluation.employee_id = employee.employee_id WHERE evaluation.year_awarded=2020 AND evaluation.bonus=(SELECT MAX(bonus) FROM evaluation WHERE year_awarded=2020)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees hired for each shop.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "number_of_employees",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(*) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id GROUP BY shop.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of the proportion of full time employees at each shop.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "number_of_full_time_employees",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "shop",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT shop.name, count(*) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.is_full_time = 1 GROUP BY shop.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "From the employees who work full time, how is the bonus distribution over years in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "average_bonus",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "shop",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT evaluation.year_awarded, AVG(evaluation.bonus), shop.name FROM evaluation JOIN hiring ON evaluation.employee_id = hiring.employee_id JOIN shop ON shop.shop_id = hiring.shop_id WHERE hiring.is_full_time = 1 GROUP BY evaluation.year_awarded, shop.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Does a manager's age influence the average employee bonus? Show it with a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "manager_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "average_bonus",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "shop",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT AVG(evaluation.bonus), shop.manager_name, AVG(employee.age) AS manager_age FROM evaluation JOIN hiring ON evaluation.employee_id = hiring.employee_id JOIN shop ON hiring.shop_id = shop.shop_id JOIN employee ON shop.manager_name = employee.name GROUP BY shop.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees grouped by their city",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee_hire_evaluation GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now show the number of shops located in each of those cities",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "shop_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "location",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, count(*) FROM employee_hire_evaluation GROUP BY location",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Can we see a pie chart of the proportion of employees who work full-time and part-time",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_full_time",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_full_time, count(*) FROM employee_hire_evaluation GROUP BY is_full_time",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Plot a scatter plot of the bonus each employee received each year",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "year_awarded",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT year_awarded, bonus FROM employee_hire_evaluation",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees distributed across different cities.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal",
                        "title": "City"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of employees"
                    }
                }
            },
            "VQL": "Visualize Bar Select city, count(*) FROM employee GROUP BY city",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Now show a pie chart of the distribution of full-time and part-time employees in the city with the highest number of employees.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "is_full_time",
                        "type": "nominal",
                        "title": "Employment type"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal",
                        "title": "Employment type"
                    },
                    "tooltip": [
                        {
                            "field": "is_full_time",
                            "type": "nominal"
                        }
                    ]
                }
            },
            "VQL": "Visualize Pie Select is_full_time, count(*) FROM hiring WHERE city = (Visualize Bar Select city, count(*) FROM employee GROUP BY city ORDER BY count(*) DESC Limit 1) GROUP BY is_full_time",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the yearly bonus given to employees over time in the same city.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative",
                        "aggregate": "average",
                        "title": "Average Bonus"
                    }
                }
            },
            "VQL": "Visualize Line Select year_awarded, avg(bonus) FROM evaluation, employee, hiring WHERE evaluation.employee_id=hiring.employee_id and hiring.shop_id=shop.shop_id and shop.city=(Visualize Bar Select city, count(*) FROM employee GROUP BY city ORDER BY count(*) DESC Limit 1) GROUP BY year_awarded ORDER BY year_awarded",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees hired by each shop",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative",
                        "title": "Number of employees"
                    },
                    "y": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Shop name"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop.name, count(employee.employee_id) FROM hiring JOIN shop ON hiring.shop_id = shop.shop_id GROUP BY shop.name",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of full-time and part-time employees",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_full_time",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal",
                        "legend": {
                            "title": "Employment Type"
                        },
                        "scale": {
                            "domain": [
                                "Full-time",
                                "Part-time"
                            ],
                            "range": [
                                "#1f77b4",
                                "#ff7f0e"
                            ]
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT is_full_time, count(*) FROM hiring GROUP BY is_full_time",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a scatter chart of employee ages against their bonus",
            "Vega-lite Code": {
                "mark": {
                    "type": "point",
                    "filled": true
                },
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Age of employee"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative",
                        "title": "Bonus awarded"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT employee.age, evaluation.bonus FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Update the scatter chart to show only full-time employees",
            "Vega-lite Code": {
                "mark": {
                    "type": "point",
                    "filled": true
                },
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Age of employee"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative",
                        "title": "Bonus awarded"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT employee.age, evaluation.bonus FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id JOIN evaluation ON employee.employee_id = evaluation.employee_id WHERE hiring.is_full_time = 'true'",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of employees based on their city.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing the number of employees based on their city.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "ordinal",
                        "title": "Cities"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Employees"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of all the shops based on their district.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A pie chart showing the proportion of shops based on their district.",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "district",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT district, count(*) FROM shop GROUP BY district",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of products for each shop.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A scatter chart showing the number of products for each shop.",
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal",
                        "title": "Shop name"
                    },
                    "y": {
                        "field": "number_products",
                        "type": "quantitative",
                        "title": "Number of Products"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, number_products FROM shop",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show the distribution of bonuses for the past year.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A histogram showing the distribution of bonuses for the past year.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "bonus",
                        "type": "ordinal",
                        "title": "Bonus"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Employees"
                    }
                }
            },
            "VQL": "Visualize HISTOGRAM SELECT bonus, count(*) FROM evaluation WHERE year_awarded = year(current_date) - 1 GROUP BY bonus",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees per age",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM employee GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How many employees are there in each city?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show the number of products for each shop, sorted by district",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "district",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "number_products",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "sort": [
                            "district"
                        ],
                        "window": [
                            {
                                "op": "rank",
                                "as": "rank"
                            }
                        ]
                    },
                    {
                        "filter": "(datum.rank <= 10)"
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT district, number_products, name FROM shop ORDER BY district",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show the distribution of bonus amounts awarded to employees over the years",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, bonus FROM evaluation ORDER BY year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of employees in each city.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT city, COUNT(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How many of these employees are full time in each city?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT employee.city, COUNT(*) FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id WHERE hiring.is_full_time = 'Yes' GROUP BY employee.city",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "What is the district distribution of the shops these employees are working at?",
            "Vega-lite Code": {
                "mark": "area",
                "encoding": {
                    "x": {
                        "field": "district",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "district",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize AREA SELECT shop.district, COUNT(*) FROM shop JOIN hiring ON shop.shop_id = hiring.shop_id WHERE hiring.employee_id IN (SELECT employee_id FROM employee WHERE city = 'the city from the previous queries') GROUP BY shop.district",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the bonuses employees received each year.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, SUM(bonus) FROM evaluation WHERE employee_id IN (SELECT employee_id FROM employee WHERE city = 'the city from the first and second queries') GROUP BY year_awarded",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees grouped by their city",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(employee_id) FROM employee_hire_evaluation GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of the employees distributed among different shops",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "shop_id",
                        "type": "nominal",
                        "aggregate": "count",
                        "stack": true
                    }
                }
            },
            "VQL": "Visualize PIE SELECT shop_id, count(employee_id) FROM hiring GROUP BY shop_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Display a scatter chart showing the distribution of bonuses awarded to employees over the years",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT year_awarded, bonus FROM evaluation",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the number of full-time employees hired each year",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "start_from",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative",
                        "condition": {
                            "test": "datum.is_full_time == 1"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT YEAR(start_from), count(employee_id) FROM hiring WHERE is_full_time = 1 GROUP BY YEAR(start_from)",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees based on their city.",
            "Vega-Lite Code": "{ \"mark\": \"bar\", \"encoding\": { \"x\": {\"field\": \"city\", \"type\": \"ordinal\"}, \"y\": {\"aggregate\": \"count\", \"type\": \"quantitative\"} } }",
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Plot age wise distribution of employees from the top city with most employees.",
            "Vega-Lite Code": "{ \"mark\": \"bar\", \"encoding\": {\"x\": {\"field\": \"age\", \"type\": \"quantitative\", \"bin\": true}, \"y\": {\"aggregate\": \"count\", \"type\": \"quantitative\"} } }",
            "VQL": "Visualize BAR SELECT age, count(*) FROM employee WHERE city = (Select city from employee group by city order by count(*) desc limit 1) GROUP BY age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How many employees work full-time and part-time in that city?",
            "Vega-Lite Code": "{ \"mark\": \"bar\", \"encoding\": {\"x\": {\"field\": \"is_full_time\", \"type\": \"ordinal\"}, \"y\": {\"aggregate\": \"count\", \"type\": \"quantitative\"} } }",
            "VQL": "Visualize BAR SELECT is_full_time, count(*) FROM hiring INNER JOIN employee ON hiring.employee_id = employee.employee_id WHERE city = (Select city from employee group by city order by count(*) desc limit 1) GROUP BY is_full_time",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a scatter plot of their bonuses against the years they were awarded in the same city.",
            "Vega-Lite Code": "{ \"mark\": \"point\", \"encoding\": { \"x\": {\"field\": \"year_awarded\", \"type\": \"ordinal\"}, \"y\": {\"field\": \"bonus\", \"type\": \"quantitative\" } } }",
            "VQL": "Visualize POINT SELECT year_awarded, bonus FROM evaluation INNER JOIN employee ON evaluation.employee_id = employee.employee_id WHERE city = (Select city from employee group by city order by count(*) desc limit 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees grouped by their city.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "In these cities, how many employees are full time? Show the data in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT city, count(*) FROM employee INNER JOIN hiring ON employee.employee_id=hiring.employee_id WHERE is_full_time=1 GROUP BY city",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "In these cities, which has the highest bonus awarded in this year? Show data in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "max",
                        "field": "bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT city, max(bonus) FROM employee INNER JOIN evaluation ON employee.employee_id=evaluation.employee_id WHERE year_awarded=2022 GROUP BY city",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees per shop.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "shop_id",
                        "type": "ordinal",
                        "title": "Shop ID"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "employee_id",
                        "type": "quantitative",
                        "title": "Total Employees"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop_id, count(employee_id) FROM hiring GROUP BY shop_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of full-time and part-time employees in each shop.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "is_full_time",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal",
                        "legend": {
                            "title": "Employment Type",
                            "labels": [
                                "Part Time",
                                "Full Time"
                            ]
                        }
                    },
                    "facet": {
                        "field": "shop_id",
                        "type": "ordinal",
                        "columns": 1,
                        "title": "Shop ID"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT shop_id, is_full_time, count(*) FROM hiring GROUP BY shop_id, is_full_time",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the bonus awarded each year to the employees.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "bonus",
                        "type": "quantitative",
                        "title": "Awarded Bonus"
                    },
                    "color": {
                        "field": "employee_id",
                        "type": "nominal",
                        "title": "Employee ID"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, sum(bonus), employee_id FROM evaluation GROUP BY year_awarded, employee_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a scatter chart of the age of employees and their awarded bonus per year.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "title": "Employee Age"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "bonus",
                        "type": "quantitative",
                        "title": "Awarded Bonus"
                    },
                    "color": {
                        "field": "year_awarded",
                        "type": "nominal",
                        "title": "Year Awarded"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT employee.age, sum(evaluation.bonus), evaluation.year_awarded FROM employee JOIN evaluation ON employee.employee_id = evaluation.employee_id GROUP BY employee.age, evaluation.year_awarded",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees grouped by their city.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count(*)",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, count(*) FROM employee GROUP BY city",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "What is the distribution of full-time and part-time employees in each city?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count(*)",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "city",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city, is_full_time, count(*) FROM employee JOIN hiring ON employee.employee_id = hiring.employee_id GROUP BY city, is_full_time",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the bonus trends over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "average(bonus)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, average(bonus) FROM evaluation GROUP BY year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "How does the bonus change over time for full-time employees?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "average(bonus)",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "is_full_time",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year_awarded, is_full_time, average(bonus) FROM evaluation JOIN hiring ON evaluation.employee_id = hiring.employee_id GROUP BY year_awarded, is_full_time",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of employees hired by each shop",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "shop.name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee.employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop.name, count(employee.employee_id) FROM hiring JOIN shop ON hiring.shop_id=shop.shop_id JOIN employee ON hiring.employee_id=employee.employee_id GROUP BY shop.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Can you break that down by full time and part time employees?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "column": {
                        "field": "hiring.is_full_time",
                        "type": "nominal"
                    },
                    "x": {
                        "field": "shop.name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "employee.employee_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT shop.name, hiring.is_full_time, count(employee.employee_id) FROM hiring JOIN shop ON hiring.shop_id=shop.shop_id JOIN employee ON hiring.employee_id=employee.employee_id GROUP BY shop.name, hiring.is_full_time",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Show a line chart of the total bonuses awarded each year",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "evaluation.year_awarded",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "evaluation.bonus",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT evaluation.year_awarded, sum(evaluation.bonus) FROM evaluation GROUP BY evaluation.year_awarded",
            "Context Dependency Type": "Independent",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        },
        {
            "Natural Language Query": "Can you show that data as a pie chart instead?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "evaluation.bonus",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "evaluation.year_awarded",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT evaluation.year_awarded, sum(evaluation.bonus) FROM evaluation GROUP BY evaluation.year_awarded",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | employee_hire_evaluation | employee : employee_id , name , age , city | shop : shop_id , name , location , district , number_products , manager_name | hiring : shop_id , employee_id , start_from , is_full_time | evaluation : employee_id , year_awarded , bonus"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar-chart displaying the total sales of each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Name of Singer"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "title": "Total Sales",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT s.name, SUM(so.sales) FROM singer s JOIN song so ON s.singer_id = so.singer_id GROUP BY s.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can we break down these sales by each singer's nationality?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "color": {
                        "field": "citizenship",
                        "type": "nominal",
                        "title": "Citizenship"
                    },
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Name of Singer"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "title": "Total Sales",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT s.name, SUM(so.sales), s.citizenship FROM singer s JOIN song so ON s.singer_id = so.singer_id GROUP BY s.name, s.citizenship",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What about a line-graph showing increase in singer's net worth over the years?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_year",
                        "type": "temporal",
                        "title": "Years"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth in Millions"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_year, net_worth_millions FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs each singer has",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "song_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(song_id) FROM singer INNER JOIN song ON singer.singer_id=song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Display the sales of songs for the singer with the most songs",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT title, sales FROM song WHERE singer_id = (SELECT singer_id FROM (SELECT singer_id, count(song_id) AS numberOfSongs FROM song GROUP BY singer_id ORDER BY numberOfSongs DESC LIMIT 1))",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Plot the distribution of the highest positions these songs achieved",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "highest_position",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT highest_position, count(*) FROM song WHERE singer_id = (SELECT singer_id FROM (SELECT singer_id, count(song_id) AS numberOfSongs FROM song GROUP BY singer_id ORDER BY numberOfSongs DESC LIMIT 1)) GROUP BY highest_position",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total net worth of all singers grouped by their citizenship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, sum(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "How about we look at a pie chart of their total net worth with the same grouping?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT citizenship, sum(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show a line chart of sales over the highest position for each song.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT highest_position, sales FROM song",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now, let's see a scatter chart with the same song data.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT highest_position, sales FROM song",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs grouped by singer's name.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "singer_name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(*) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now, show a line chart of net worth of the singers.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, net_worth_millions FROM singer",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "How about a scatter chart of the sales of songs vs their highest position on the charts?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT sales, highest_position FROM song",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Finally, show a pie chart of the distribution of the singer's citizenship.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT citizenship, count(*) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs by each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal",
                        "axis": {
                            "title": "Singer"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "title",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Songs"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(title) FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now show a line chart of the highest song position of each singer over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_year",
                        "type": "temporal",
                        "axis": {
                            "title": "Birth Year"
                        }
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative",
                        "axis": {
                            "title": "Highest Song Position"
                        }
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "legend": {
                            "title": "Singer"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, birth_year, MAX(highest_position) FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name, birth_year",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What about a scatter plot of net worth in millions against total song sales for each singer?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "axis": {
                            "title": "Net Worth (in Millions)"
                        }
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative",
                        "axis": {
                            "title": "Total Song Sales"
                        }
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "legend": {
                            "title": "Singer"
                        }
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, net_worth_millions, SUM(sales) FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name, net_worth_millions",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs each singer has sung",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "song_id",
                        "type": "quantitative",
                        "title": "Number of Songs"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(song_id) FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Among those shown before, what is a pie chart of the songs' highest rankings?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "highest_position",
                        "type": "nominal",
                        "title": "Song Position"
                    },
                    "color": {
                        "field": "highest_position",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT highest_position, count(*) FROM song WHERE singer_id IN (SELECT singer_id FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name) GROUP BY highest_position",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "And what about a scatter plot of the singer's net worth against the total sales of their songs?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth (Millions)"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative",
                        "title": "Total Sales"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT net_worth_millions, sum(sales) FROM singer JOIN song ON singer.singer_id=song.singer_id GROUP BY net_worth_millions",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the total sales per singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.name, sum(song.sales) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "How about their net worth?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, net_worth_millions FROM singer",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show a scatter chart comparing their total sales and net worth.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT singer.name, sum(song.sales), singer.net_worth_millions FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now, show a pie chart of the highest position reached by their songs.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT singer.name, sum(song.highest_position) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total song sales by each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum",
                        "title": "Total Song Sales"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, SUM(sales) FROM singer s INNER JOIN song so ON s.singer_id = so.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now show the net worth of these singers in a similar bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth (in Millions)"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, net_worth_millions FROM singer",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Let's see how they compare on a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum",
                        "title": "Total Song Sales"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth (in Millions)"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, SUM(sales) as sales, net_worth_millions FROM singer s INNER JOIN song so ON s.singer_id = so.singer_id GROUP BY name, net_worth_millions",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Finally, show a pie chart of citizenship distribution among these singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "title": "Singers"
                    },
                    "color": {
                        "field": "citizenship",
                        "type": "nominal",
                        "title": "Citizenship"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT citizenship, COUNT(*) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart representing the net worth of all singers grouped by citizenship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, sum(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now show a pie chart of the number of songs by each singer.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "name",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": null
                }
            },
            "VQL": "Visualize PIE SELECT name, count(*) FROM singer INNER JOIN song ON singer.singer_id = song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Let's compare the total sales of these singers' songs in a line graph.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, sum(sales) FROM singer INNER JOIN song ON singer.singer_id = song.singer_id GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can you show a scatter chart illustrating each song's sales and its highest chart position?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "title",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT sales, highest_position, title FROM song",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs per singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "title",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select singer.name, count(song.title) From singer Join song On singer.singer_id = song.singer_id Group By singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show a line chart detailing the total sales of the songs per singer.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE Select singer.name, sum(song.sales) From singer Join song On singer.singer_id = song.singer_id Group By singer.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Among these singers, how many are from each citizenship?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "citizenship",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "citizenship",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select citizenship, count(*) From singer Group By citizenship",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now show the total net worth of singers by citizenship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "citizenship",
                        "type": "nominal",
                        "sort": "-x"
                    },
                    "x": {
                        "aggregate": "sum",
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select citizenship, sum(net_worth_millions) From singer Group By citizenship",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the net worth of singers sorted by their net worth.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "name",
                        "type": "ordinal",
                        "sort": "-x"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, net_worth_millions FROM singer ORDER BY net_worth_millions DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now show a pie chart depicting the sales of songs by the singer with the highest net worth.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "title",
                        "type": "nominal"
                    }
                },
                "view": {
                    "stroke": "transparent"
                }
            },
            "VQL": "Visualize PIE SELECT title, sales FROM song WHERE singer_id = (SELECT singer_id FROM singer ORDER BY net_worth_millions DESC LIMIT 1)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Represent the highest position achieved by each song of this singer in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT title, highest_position FROM song WHERE singer_id = (SELECT singer_id FROM singer ORDER BY net_worth_millions DESC LIMIT 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Finally, depict a scatter plot between the sales and the highest position of this singer's songs.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "title",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT sales, highest_position, title FROM song WHERE singer_id = (SELECT singer_id FROM singer ORDER BY net_worth_millions DESC LIMIT 1)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show me the net worth of singers broken down by their citizenship in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "y": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, sum(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now, show me the total song sales for each citizenship category",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "y": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, sum(sales) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY citizenship",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show me a scatter plot of singer's net worth versus their total song sales",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sumsales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.net_worth_millions, sum(song.sales) as sumsales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name, singer.net_worth_millions",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What is the age of the most successful singers? Show it in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_year, sum(sales) FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY birth_year",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the net worth of each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, net_worth_millions FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can you then plot a line graph showing the birth year and net worth of each singer?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "birth_year",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_year, net_worth_millions, name FROM singer",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What are the top songs by sales for these singers?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT title, sales, name FROM song INNER JOIN singer ON song.singer_id=singer.singer_id ORDER BY sales DESC",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What's the highest chart position for these songs?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "highest_position",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT title, highest_position, name FROM song INNER JOIN singer ON song.singer_id=singer.singer_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the distribution of the singers' net worth with a histogram.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "bin": {
                            "maxbins": 50
                        },
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT net_worth_millions, count(*) FROM singer GROUP BY bin(net_worth_millions, 50)",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What is the average net worth of the singers by citizenship?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, avg(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show me the top 10 songs with the most sales.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT title, sales FROM song ORDER BY sales DESC LIMIT 10",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "How many of these top 10 songs have reached the No. 1 spot?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "title",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                },
                "transform": [
                    {
                        "filter": "datum.highest_position === 1"
                    }
                ]
            },
            "VQL": "Visualize POINT SELECT title, count(*) FROM song WHERE highest_position = 1 AND title IN (SELECT title FROM song ORDER BY sales DESC LIMIT 10)",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of songs produced by each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "title",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(title) FROM singer JOIN song on singer.singer_id = song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "And which of these singers has the highest song sales?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "max",
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, max(sales) FROM singer JOIN song on singer.singer_id = song.singer_id GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Display a pie chart of citizenship distribution among these singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "citizenship",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT citizenship, count(*) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "In a scatter plot, show the correlation between a singer's net worth and their highest selling song.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "max",
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT net_worth_millions, max(sales), name FROM singer JOIN song on singer.singer_id = song.singer_id GROUP BY name, net_worth_millions",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of net worth for all singers sorted by citizenship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, net_worth_millions FROM singer ORDER BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can we view this as a line chart instead?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT citizenship, net_worth_millions FROM singer ORDER BY citizenship",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now let's visualize the top song sales grouped by singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT singer.name, song.sales FROM singer JOIN song ON singer.singer_id = song.singer_id GROUP BY singer.name ORDER BY song.sales DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can we see a scatter plot showing the correlation between a singer's net worth and their top song's sales?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT singer.net_worth_millions, song.sales FROM singer JOIN song ON singer.singer_id = song.singer_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Create a bar chart of the top 10 singers with the highest net worth.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "axis": {
                            "title": "Net Worth in Millions"
                        }
                    },
                    "y": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-x",
                        "axis": {
                            "title": "Singer"
                        }
                    },
                    "color": {
                        "field": "net_worth_millions",
                        "scale": {
                            "scheme": "reds"
                        }
                    }
                }
            },
            "VQL": "SELECT name, net_worth_millions FROM singer ORDER BY net_worth_millions DESC LIMIT 10",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now, create a scatter plot of birth year versus net worth for these singers.",
            "Vega-lite Code": {
                "mark": "circle",
                "encoding": {
                    "x": {
                        "field": "birth_year",
                        "type": "quantitative",
                        "axis": {
                            "title": "Birth Year"
                        }
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "axis": {
                            "title": "Net Worth in Millions"
                        }
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "size": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "SELECT name, birth_year, net_worth_millions FROM singer ORDER BY net_worth_millions DESC LIMIT 10",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show a pie chart representing the singers' citizenships.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "citizenship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "SELECT citizenship, COUNT(*) as count FROM singer GROUP BY citizenship",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Finally, create a line chart depicting the sales of the singers' top-performing song.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "axis": {
                            "title": "Singer"
                        }
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative",
                        "axis": {
                            "title": "Sales"
                        }
                    },
                    "color": {
                        "field": "title",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "SELECT s.name, so.title, so.sales FROM singer as s JOIN song as so ON s.singer_id = so.singer_id WHERE so.highest_position = 1 ORDER BY sales DESC",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart showing the net worth of each singer.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth in Millions"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, net_worth_millions FROM singer",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Now let's see a scatter plot of the singer's sales against their net worth.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "sales",
                        "type": "quantitative",
                        "title": "Sales"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "title": "Net Worth in Millions"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Singer"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.name, singer.net_worth_millions, song.sales FROM singer INNER JOIN song ON singer.singer_id = song.singer_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Lastly, I want to see a pie chart of sales by song title.",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "sales",
                        "type": "quantitative",
                        "title": "Sales"
                    },
                    "color": {
                        "field": "title",
                        "type": "nominal",
                        "title": "Song Title"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT title, sales FROM song",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of songs each singer has",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "song_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select name, count(song_id) From singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What is the total sales for each singer?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR Select name, sum(sales) From singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show a scatter chart comparing a singer's net worth and their total song sales",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "sales",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTERPLOT Select name, net_worth_millions, sum(sales) From singer JOIN song ON singer.singer_id=song.singer_id GROUP BY name, net_worth_millions",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "What about songs that reached number one position?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "song_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "condition": {
                            "test": "datum.highest_position === 1",
                            "value": "steelblue"
                        },
                        "value": "grey"
                    }
                }
            },
            "VQL": "Visualize BAR Select name, count(song_id) From singer JOIN song ON singer.singer_id=song.singer_id WHERE highest_position = 1 GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the net worth of singers grouped by their citizenship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "citizenship",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT citizenship, sum(net_worth_millions) FROM singer GROUP BY citizenship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Show me a pie chart of the total sales of songs sung by these singers.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "field": "name",
                    "type": "nominal",
                    "value": {
                        "field": "sales",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT singer.name, sum(song.sales) FROM song JOIN singer ON song.singer_id=singer.singer_id GROUP BY singer.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Can you display a line graph of singers' net worth over their age?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT birth_year as age, net_worth_millions FROM singer",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        },
        {
            "Natural Language Query": "Finally, could you scatter plot the relationship between the sales of songs and the net worth of their singers?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "net_worth_millions",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "sales",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT singer.net_worth_millions, song.sales FROM song JOIN singer ON song.singer_id=singer.singer_id",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | singer | singer : singer_id , name , birth_year , net_worth_millions , citizenship | song : song_id , title , singer_id , sales , highest_position"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population across different countries.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the population distribution across different districts within these countries?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "district",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT district, population FROM city WHERE countrycode IN (SELECT code FROM country)",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a line chart of surface area against population for these countries.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "surfacearea",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT surfacearea, population FROM country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What percentage of each country's population speaks the official language?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "countrycode",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "percentage",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT countrycode, percentage FROM countrylanguage WHERE isofficial = 'T'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population of each country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the average lifespan in these countries?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, AVG(lifeexpectancy) FROM country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show the number of languages spoken in each country in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "countrycode",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT countrycode, COUNT(language) FROM countrylanguage GROUP BY countrycode",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "And which of these languages are official?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "countrycode",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "isofficial",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT countrycode, COUNT(language), isofficial FROM countrylanguage WHERE isofficial='T' GROUP BY countrycode",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population of the countries grouped by their continents.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, SUM(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now, show a line chart that represents the average life expectancy of the continents over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "indepyear",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT indepyear, AVG(lifeexpectancy) FROM country WHERE continent = Previous.continent GROUP BY indepyear",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Let's see a pie chart to understand the distribution of different languages spoken in the country that has the highest population in each continent.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT language, percentage FROM countrylanguage WHERE countrycode = (SELECT code FROM country WHERE population = MAX(population) GROUP BY continent)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the city population for each continent",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "aggregate": "sum",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, sum(population) FROM city JOIN country ON city.countrycode=country.code GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the average life expectancy in these continents?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT continent, AVG(lifeexpectancy) FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a distribution of the number of languages spoken in each country in Europe.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "languages",
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, count(language) as languages FROM countrylanguage JOIN country ON countrylanguage.countrycode=country.code WHERE continent='Europe' GROUP BY name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "And which of these languages are official?",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "language",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, count(language) FROM countrylanguage JOIN country ON countrylanguage.countrycode=country.code WHERE continent='Europe' and isofficial='T' GROUP BY language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population by country.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a scatter chart of surface area vs. GNP for these countries.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "surfacearea",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "gnp",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT surfacearea, gnp FROM country",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the life expectancy for these countries?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, lifeexpectancy FROM country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a pie chart of the percentage of official languages per country",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "countrycode",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT countrycode, percentage FROM countrylanguage WHERE isofficial='T'",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total population for each continent",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, sum(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can I see the distribution of population in Asia in a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "population",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT name, population FROM country WHERE continent='Asia'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "How about the top 10 most populous countries in Asia shown in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT name, population FROM country WHERE continent='Asia' ORDER BY population DESC LIMIT 10",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "And their GNP represented in a scatter chart?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "gnp",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT name, gnp FROM country WHERE continent='Asia' ORDER BY population DESC LIMIT 10",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population by continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Continent, sum(Population) FROM Country GROUP BY Continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now show a pie chart of the percentage of each language spoken in Asia.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Language, sum(Percentage) FROM CountryLanguage WHERE CountryCode IN (SELECT Code FROM Country WHERE Continent = 'Asia') GROUP BY Language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "How does the population trend of cities in Asia differ by countries? Show a line chart for better clarity.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "countryname",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    },
                    "color": {
                        "field": "countryname",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT Country.Name AS CountryName, sum(City.Population) FROM City JOIN Country ON City.CountryCode = Country.Code WHERE Country.Continent = 'Asia' GROUP BY CountryName",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population of each district in the world.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "district",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT district, population FROM city GROUP BY district ORDER BY SUM(population) DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What's the distribution of population per country?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country ORDER BY SUM(population) DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show the Percentage of different languages spoken per country in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, percentage FROM countrylanguage GROUP BY language ORDER BY SUM(percentage) DESC",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "How does distinct languages change across different continents?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "distinct_languages",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT continent, COUNT(DISTINCT language) as distinct_languages FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY continent ORDER BY continent ASC",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total surface area for each continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "sum",
                        "field": "surfacearea",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Continent, sum(SurfaceArea) FROM Country GROUP BY Continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What about the average life expectancy for each continent?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "average",
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Continent, avg(LifeExpectancy) FROM Country GROUP BY Continent",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now display a pie chart of languages and their respective percentages spoken in 'America' continent.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Language, sum(Percentage) FROM CountryLanguage WHERE CountryCode IN (SELECT Code FROM Country WHERE Continent = 'America') GROUP BY Language",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Finally, show a scatter plot of GNP vs Population for countries in 'Europe' continent.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "gnp",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT Population, GNP FROM Country WHERE Continent = 'Europe'",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of population grouped by continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, sum(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What about the life expectancy by continent?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, avg(lifeexpectancy) FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a scatter plot of the relationship between GNP and population.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "gnp",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT gnp, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now show the same scatter plot but color the points by continent.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "gnp",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT gnp, population, continent FROM country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart of the total population in each continent",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "Continent",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "Population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Continent, SUM(Population) FROM country GROUP BY Continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a line chart representing the change in population over time for each continent",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "Time",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "Population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "Continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT Time, Population, Continent FROM population_over_time WHERE Continent = PREVIOUS.Continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Display a pie chart showing the percentage of official languages spoken in each continent",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT language, Percentage FROM countrylanguage WHERE CountryCode IN (SELECT code FROM country WHERE Continent = PREVIOUS.Continent)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a scatter chart of GNP vs population for each country in the previously mentioned continent",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "GNP",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "Population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT GNP, Population FROM country WHERE Continent = PREVIOUS.Continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total population of each country",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the average population of each continent?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "avg_population",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, AVG(population) as avg_population FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What is the surface area of each continent?",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "field": "surfacearea",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT continent, SUM(surfacearea) as surfacearea FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can you show the life expectancy in different regions?",
            "Vega-lite Code": {
                "mark": "scatter",
                "encoding": {
                    "x": {
                        "field": "region",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT region, AVG(lifeexpectancy) FROM country GROUP BY region",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Visualize the population of countries by continents in a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "aggregate": "sum"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, SUM(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can we breakdown the population by country for Asia continent in bar chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country WHERE continent = 'Asia'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Let's visualize the life expectancy versus GNP for these countries in a scatter plot.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "gnp",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT gnp, lifeexpectancy, name FROM country WHERE continent = 'Asia'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can you also display the languages used in these countries and the percentage of the population using them in a line chart?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "language",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "detail": {
                        "field": "countrycode",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "countrycode",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT countrycode, language, percentage FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent = 'Asia')",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total population for each continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal",
                        "sort": "-y",
                        "title": "Continent"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "population",
                        "type": "quantitative",
                        "title": "Total Population"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, SUM(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Then, show me a line chart of the average life expectancy by continent.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal",
                        "title": "Continent"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "lifeexpectancy",
                        "type": "quantitative",
                        "title": "Average Life Expectancy"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT continent, AVG(lifeexpectancy) FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can you group the countries by government form and show the number in a pie chart?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "code",
                        "type": "quantitative",
                        "title": "Number of Countries"
                    },
                    "color": {
                        "field": "governmentform",
                        "type": "nominal",
                        "title": "Government Form"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT governmentform, COUNT(code) FROM country GROUP BY governmentform",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now, can you display a scatterplot of the surface area versus population for each country?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "population",
                        "type": "quantitative",
                        "title": "Population"
                    },
                    "y": {
                        "field": "surfacearea",
                        "type": "quantitative",
                        "title": "Surface Area"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal",
                        "title": "Country Name"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT population, surfacearea FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total population of each continent.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "title": "Total Population of Each Continent",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "ordinal",
                        "title": "Continent"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative",
                        "agg": "sum",
                        "title": "Total Population"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, sum(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of countries in each continent",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "title": "Number of Countries in Each Continent",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT continent, count(*) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What are the top 10 most populous cities in Asia?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "title": "Top 10 Most Populous Cities in Asia",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "city",
                        "type": "ordinal",
                        "sort": "-y"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT city.name, city.population From city JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' ORDER BY city.population DESC LIMIT 10",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Among these cities, give me a scatter chart of population versus the percentage of the official language spoken.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "title": "Population vs Official Language Percentage",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "city",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT city.population, countrylanguage.percentage, city.name FROM city JOIN countrylanguage ON city.countrycode = countrylanguage.countrycode WHERE countrylanguage.isofficial = 'T' AND city.name IN (SELECT city.name FROM city JOIN country ON city.countrycode = country.code WHERE country.continent = 'Asia' ORDER BY city.population DESC LIMIT 10)",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of cities per continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "nominal",
                        "title": "Continent"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Cities"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, count(*) FROM world_1 JOIN country ON world_1.countrycode = country.code GROUP BY continent.",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "How many languages are spoken in each of those continents? Show it in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "language",
                        "type": "quantitative",
                        "title": "Number of Languages"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal",
                        "title": "Continent"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT continent, count(language) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code GROUP BY continent.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Plot a scatter chart showing the relationship between population and number of languages in each country.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "population",
                        "type": "quantitative",
                        "title": "Population"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "language",
                        "type": "quantitative",
                        "title": "Number of Languages"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT population, count(language) FROM country JOIN countrylanguage ON country.code = countrylanguage.countrycode GROUP BY name.",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show a line chart of the evolution of the global population over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "indepyear",
                        "type": "ordinal",
                        "title": "Year"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "population",
                        "type": "quantitative",
                        "title": "Global Population"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT indepyear, sum(population) FROM country GROUP BY indepyear HAVING indepyear is not Null ORDER BY indepyear.",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population grouped by continent.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, sum(population) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now, show a line chart of the average life expectancy on each continent.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT continent, average(lifeexpectancy) FROM country GROUP BY continent",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What are the languages with their percentages spoken in Europe.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "aggregate": "average",
                        "field": "percentage",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "language",
                        "type": "ordinal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT language, average(percentage) FROM countrylanguage JOIN country ON countrylanguage.countrycode = country.code WHERE country.continent = 'Europe' GROUP BY language",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Lastly, what are the names of the countries in Asia and their population in a scatter chart.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT name, population FROM country WHERE continent = 'Asia'",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the total population survived for each continent.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "sum",
                        "field": "population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT sum(population) FROM country GROUP BY continent;",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What's the distribution of government form for countries in North America displayed by a bar chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "governmentform",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT governmentform, count(*) FROM country WHERE continent='North America' GROUP BY governmentform;",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Let's organize the count of languages spoken in these countries with a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "countrycode",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "language",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT countrycode, count(language) FROM countrylanguage WHERE countrycode IN (SELECT code FROM country WHERE continent='North America') GROUP BY countrycode;",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Show the scatter plot indicating the correlation between life expectancy and Gross National Product (GNP) for North American countries.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "gnp",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT lifeexpectancy, gnp, name FROM country WHERE continent='North America';",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the population of each continent.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT population, continent FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "What about the population distribution of each language as a bar chart?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "language",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "language",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT language, sum(population) FROM country, countrylanguage WHERE country.code=countrylanguage.countrycode GROUP BY language",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Now show me a line graph representing the change in the worldwide population over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "indepyear",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT indepyear, sum(population) FROM country GROUP BY indepyear ORDER BY indepyear",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Lastly, can you provide a scatter plot indicating the relationship between life expectancy and GNP of the countries?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "lifeexpectancy",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "gnp",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "continent",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT lifeexpectancy, gnp, continent FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the population of every country",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "population",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT name, population FROM country",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Can I see that as a pie chart instead?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "population",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT name, population FROM country",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Compare the total surface area of each continent using a bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "surfacearea",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT continent, SUM(surfacearea) FROM country GROUP BY continent",
            "Context Dependency Type": "Independent",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        },
        {
            "Natural Language Query": "Represent that using a line chart",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "continent",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "surfacearea",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT continent, SUM(surfacearea) FROM country GROUP BY continent",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | world_1 | city : id , name , countrycode , district , population | sqlite_sequence : name , seq | country : code , name , continent , region , surfacearea , indepyear , population , lifeexpectancy , gnp , gnpold , localname , governmentform , headofstate , capital , code2 | countrylanguage : countrycode , language , isofficial , percentage"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by their result.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "result",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT count(*), result FROM battle GROUP BY result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of ships grouped by their ship_type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*), ship_type FROM ship GROUP BY ship_type",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show on a line chart the tonnage of ships lost in each battle grouped by battle name.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "battle.name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "sum(tonnage)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT battle.name, sum(ship.tonnage) FROM battle JOIN ship ON battle.id=ship.lost_in_battle GROUP BY battle.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show on a scatter chart, the count of deaths caused by each ship.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "ship.name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count(death.id)",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT ship.name, count(death.id) FROM ship JOIN death ON ship.id=death.caused_by_ship_id GROUP BY ship.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by the results",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A bar chart of the number of battles by the results.",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "ordinal",
                        "title": "Battle Result"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Battles"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT result, COUNT(id) FROM battle GROUP BY result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart representing the proportions of ships lost in different battles",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A pie chart showing the proportions of ships lost in different battles.",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "Ship_loss_count",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "battle_id",
                        "type": "nominal",
                        "title": "Battle"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT lost_in_battle, COUNT(id) FROM ship GROUP BY lost_in_battle",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now, show a line chart reflecting the number of deaths caused by each ship over time",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A line chart of deaths caused by each ship over time.",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "Date",
                        "type": "temporal",
                        "title": "Time"
                    },
                    "y": {
                        "field": "Death_count",
                        "type": "quantitative",
                        "title": "Number of Deaths"
                    },
                    "color": {
                        "field": "Ship_id",
                        "type": "nominal",
                        "title": "Ship Id"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date as Date, COUNT(id) as Death_count, caused_by_ship_id as Ship_id FROM death JOIN battle on death.caused_by_ship_id = battle.id GROUP BY caused_by_ship_id, date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Lastly, represent in a scatter chart the relationship between tonnage of a ship and number of deaths caused by it",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v4.json",
                "description": "A scatterchart showing the relationship between the ship tonnage and the number of deaths caused by it.",
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "Tonnage",
                        "type": "quantitative",
                        "title": "Ship Tonnage"
                    },
                    "y": {
                        "field": "Death_count",
                        "type": "quantitative",
                        "title": "Number of Deaths"
                    },
                    "color": {
                        "field": "Ship_name",
                        "type": "nominal",
                        "title": "Ship Name"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT tonnage as Tonnage, COUNT(death.id) as Death_count, ship.name as Ship_name FROM ship JOIN death on death.caused_by_ship_id = ship.id GROUP BY tonnage, ship.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of deaths caused by each ship.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "caused_by_ship_id",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT caused_by_ship_id, count(id) FROM death GROUP BY caused_by_ship_id",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now, could you provide a pie chart to reflect the proportion of different ship types?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "ship_type",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(*), ship_type FROM ship GROUP BY ship_type",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Can you show a scatter chart of the tonnage and ship type?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "tonnage",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT tonnage, ship_type FROM ship",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What about a line chart representing the number of battles each latin commander has won over time?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "latin_commander",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "latin_commander",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, count(*), latin_commander FROM battle WHERE result = 'won' GROUP BY date, latin_commander",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Display a bar chart showing the number of battles by result.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT result, count(*) FROM battle GROUP BY result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now show a pie chart illustrating the proportion of ship types lost in battles.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship_type",
                        "type": "ordinal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM ship WHERE lost_in_battle IS NOT NULL GROUP BY ship_type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Lastly, let's have a line chart of deaths caused by different ships over years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "timeUnit": "year"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "joinaggregate": [
                            {
                                "op": "count",
                                "as": "count"
                            }
                        ],
                        "groupby": [
                            "date",
                            "name"
                        ]
                    }
                ]
            },
            "VQL": "Visualize LINE SELECT date, name, count(*) FROM death JOIN ship ON death.caused_by_ship_id=ship.id JOIN battle ON ship.lost_in_battle=battle.id GROUP BY date, name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a pie chart of different types of ships lost in battle.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "ship_type",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM ship WHERE lost_in_battle = 1 GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "For the most common ship type lost, plot a bar chart showing number of such ships lost in each battle.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "ship_type",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT b.name, count(*) FROM ship s JOIN battle b ON s.lost_in_battle = b.id WHERE ship_type = (SELECT ship_type FROM ship GROUP BY ship_type ORDER BY count(*) DESC LIMIT 1) GROUP BY b.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What is the trend of deaths caused by this ship type in those battles, shown as a line chart?",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "killed",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT b.date, sum(d.killed) FROM ship s JOIN battle b ON s.lost_in_battle = b.id JOIN death d ON d.caused_by_ship_id = s.id WHERE ship_type = (SELECT ship_type FROM ship GROUP BY ship_type ORDER BY count(*) DESC LIMIT 1) GROUP BY b.date ORDER BY b.date",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles won by each Bulgarian commander",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "bulgarian_commander",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT bulgarian_commander, count(result) FROM battle WHERE result = 'won' GROUP BY bulgarian_commander",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "And how many battles they lost?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "bulgarian_commander",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT bulgarian_commander, count(result) FROM battle WHERE result = 'lost' GROUP BY bulgarian_commander",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a scatter plot of the number of people killed and injured in battles",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "killed",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "injured",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT killed, injured FROM death",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Can you display a pie chart of the ship types that were lost in battles?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "lost_in_battle",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(lost_in_battle), ship_type FROM ship WHERE lost_in_battle = 'yes' GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battle deaths caused by each ship",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "ship.name",
                        "type": "nominal",
                        "title": "Ship"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Battle Deaths"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship.name, count(*) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What about the number of injured by each ship?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "ship.name",
                        "type": "nominal",
                        "title": "Ship"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "death.injured",
                        "type": "quantitative",
                        "title": "Number of Injured"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship.name, count(death.injured) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart indicating the proportion of the ship tonnage lost in battles",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship.tonnage",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship.name",
                        "type": "nominal",
                        "legend": null
                    },
                    "title": "Proportion of Ship Tonnage Lost in Battles"
                }
            },
            "VQL": "Visualize PIE SELECT ship.name, sum(ship.tonnage) FROM ship JOIN death ON death.caused_by_ship_id = ship.id WHERE ship.lost_in_battle = TRUE GROUP BY ship.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Display a scatter chart of the number of deaths vs number of injured caused by each ship",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "ships.name",
                        "type": "nominal",
                        "title": "Ship"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "death.killed",
                        "type": "quantitative",
                        "title": "Number of Deaths"
                    },
                    "size": {
                        "aggregate": "count",
                        "field": "death.injured",
                        "type": "quantitative",
                        "title": "Number of Injured"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT ship.name, count(death.killed), count(death.injured) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of how many battles were won by the Bulgarian commander and the Latin commander respectively",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "commander",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT bulgarian_commander, latin_commander, count(*) FROM battle WHERE result = 'won' GROUP BY bulgarian_commander, latin_commander",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Compare the number of people killed and injured in each battle as a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "battle.name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "death.killed",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "death.killed",
                        "type": "nominal"
                    },
                    "y2": {
                        "field": "death.injured"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT battle.name, death.killed, death.injured FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What battles had the largest number of ship losses?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "battle.name",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "ship.lost_in_battle",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT battle.name, count(*) FROM battle JOIN ship ON battle.id = ship.lost_in_battle GROUP BY battle.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart of the overall deaths, broken down by the type of ship that caused them.",
            "Vega-lite Code": {
                "mark": "pie",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "ship.ship_type",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship.ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship.ship_type, count(*) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship.ship_type",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of ships lost in battle, layered by ship type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "ship.type",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "ship.id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship.type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship.type, count(ship.id) FROM ship WHERE ship.lost_in_battle IS NOT NULL GROUP BY ship.type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a line chart of the number of deaths caused by each ship type over time",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "battle.date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "death.id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship.type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT battle.date, count(death.id) FROM death JOIN ship ON death.caused_by_ship_id = ship.id JOIN battle ON ship.lost_in_battle = battle.id GROUP BY battle.date, ship.type",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a scatter plot of the tonnage of ships versus the number of deaths they caused",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "ship.tonnage",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "death.id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT ship.tonnage, count(death.id) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship.tonnage",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles resulted in Bulgarian victory categorized by year",
            "Vega-lite code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "result",
                        "type": "nominal",
                        "legend": {
                            "title": "Victory by"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT year(date), count(*) FROM battle WHERE result='Bulgarian victory' GROUP BY year(date)",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a line chart of the total tonnage of ships lost in the battles where Bulgarians won across years",
            "Vega-lite code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "timeUnit": "year",
                        "field": "battle.date",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "ship.tonnage",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT year(battle.date), sum(ship.tonnage) FROM battle JOIN ship ON battle.id=ship.lost_in_battle WHERE battle.result='Bulgarian victory' GROUP BY year(battle.date)",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart of the proportion of different ship types lost in the battles where Bulgarians won",
            "Vega-lite code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM ship JOIN battle ON ship.lost_in_battle=battle.id WHERE battle.result='Bulgarian victory'  GROUP BY ship_type",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Display a scatter chart of number of people killed vs injured in the battles won by Bulgarians",
            "Vega-lite code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "killed",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "injured",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT killed, injured FROM death JOIN ship ON death.caused_by_ship_id=ship.id JOIN battle ON ship.lost_in_battle=battle.id WHERE battle.result='Bulgarian victory'",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by result.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "Result",
                        "type": "nominal",
                        "title": "Result of Battle"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Battles"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Result, count(*) FROM battle GROUP BY Result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now, how many ships were lost in each of these battles?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "battle.name",
                        "type": "nominal",
                        "title": "Battle"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "lost_in_battle",
                        "type": "quantitative",
                        "title": "Number of Ships Lost"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT battle.name, count(ship.lost_in_battle) FROM battle JOIN ship ON battle.id=ship.lost_in_battle GROUP BY battle.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Can you show a pie chart of the number of deaths caused by each lost ship?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship.name",
                        "type": "nominal",
                        "stack": true
                    },
                    "color": {
                        "field": "killed",
                        "type": "quantitative",
                        "aggregate": "sum",
                        "title": "Number of Deaths"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship.name, sum(death.killed) FROM ship JOIN death ON death.caused_by_ship_id=ship.id GROUP BY ship.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Lastly, can you plot a scatter chart to show the correlation between the tonnage of ship and the number of deaths it has caused in battles?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "tonnage",
                        "type": "quantitative",
                        "title": "Tonnage of Ship"
                    },
                    "y": {
                        "field": "killed",
                        "type": "quantitative",
                        "aggregate": "sum",
                        "title": "Number of Deaths Caused"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT ship.tonnage, sum(death.killed) FROM ship JOIN death ON death.caused_by_ship_id=ship.id GROUP BY ship.tonnage",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by result.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "ordinal",
                        "title": "Battle Result"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Battles"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT result, count(*) FROM battle GROUP BY result",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "How about the number of ships lost in battles grouped by ship type?",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "ship_type",
                        "type": "ordinal",
                        "title": "Ship Type"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Ships Lost"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship_type, count(*) FROM ship WHERE lost_in_battle = True GROUP BY ship_type",
            "Context Denpendency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a line chart of the number of deaths caused by ships over time.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Date"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Deaths"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, count(*) FROM death JOIN battle on death.caused_by_ship_id = ship.id JOIN battle on ship.lost_in_battle = battle.id GROUP BY date",
            "Context Denpendency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now show me a pie chart of the results of battles caused by each ship type.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative",
                        "title": "Battle Result"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal",
                        "title": "Ship Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, result, count(*) FROM ship JOIN battle on ship.lost_in_battle = battle.id GROUP BY ship_type, result",
            "Context Denpendency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the total tonnage of ships grouped by ship type.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A bar chart showing total ship tonnage by ship type.",
                "width": 400,
                "height": 200,
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "ship_type",
                        "type": "ordinal",
                        "title": "Ship Type"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "tonnage",
                        "type": "quantitative",
                        "title": "Total Tonnage"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship_type, SUM(tonnage) FROM ship GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now show a line chart reflecting the number of ships lost in each battle over time.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A line chart showing number of ships lost in each battle by date.",
                "width": 400,
                "height": 200,
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "battle.date",
                        "type": "temporal",
                        "title": "Date",
                        "timeUnit": "year"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "ship.lost_in_battle",
                        "type": "quantitative",
                        "title": "Lost Ships"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT BATTLE.date, COUNT(ship.lost_in_battle) FROM battle, ship WHERE battle.id == ship.lost_in_battle GROUP BY battle.date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Finally, exhibit a pie chart displaying the proportion of deaths caused by each type of ship.",
            "Vega-lite Code": {
                "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
                "description": "A pie chart showing the proportion of deaths caused by each type of ship.",
                "width": 400,
                "height": 200,
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "death.caused_by_ship_id",
                        "type": "quantitative",
                        "title": "Deaths"
                    },
                    "color": {
                        "field": "ship.ship_type",
                        "type": "nominal",
                        "legend": {
                            "title": "Ship Type"
                        }
                    }
                }
            },
            "VQL": "Visualize ARC SELECT ship.ship_type, COUNT(death.caused_by_ship_id) FROM death, ship WHERE death.caused_by_ship_id == ship.id GROUP BY ship.ship_type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the count of battles grouped by result",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "result",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "result",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Result, count(*) FROM battle GROUP BY Result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What about the number of ships lost in each battle?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "battle_name",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "battle_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT battle.name, count(*) FROM ship JOIN battle ON ship.lost_in_battle=battle.id GROUP BY battle.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart of the count of deaths caused by each ship type",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship.ship_type, count(*) FROM death JOIN ship ON death.caused_by_ship_id=ship.id GROUP BY ship.ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Display a scatter chart showing the relationship between tonnage of the ship and the number of deaths it caused",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "tonnage",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "death_count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT ship.tonnage, count(death.id) as death_count FROM death JOIN ship ON death.caused_by_ship_id=ship.id GROUP BY ship.tonnage",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the different ship types engaged in battles and the numbers of each.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship_type",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    },
                    "tooltip": [
                        {
                            "field": "ship_type",
                            "type": "nominal"
                        },
                        {
                            "field": "count",
                            "type": "quantitative"
                        }
                    ]
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM ship GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "How many of these ship types were lost in each battle?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "ship_type",
                        "type": "nominal"
                    },
                    "x": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "battle_name",
                        "type": "nominal"
                    },
                    "row": {
                        "field": "battle_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship.ship_type, battle.name AS battle_name, count(*) FROM ship, battle WHERE ship.lost_in_battle=battle.id GROUP BY ship.ship_type, battle.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Which battle has resulted in the most deaths?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "battle_name",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "death_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "battle_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT battle.name AS battle_name, sum(death.killed) AS death_count FROM battle, death WHERE battle.id = death.caused_by_ship_id GROUP BY battle_name ORDER BY death_count DESC LIMIT 1",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show the trend of deaths caused by each specific battle over the years.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "field": "death_count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "battle_name",
                        "type": "nominal"
                    },
                    "tooltip": {
                        "field": "battle_name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT battle.name AS battle_name, battle.date AS date, sum(death.killed) AS death_count FROM battle, death WHERE battle.id = death.caused_by_ship_id GROUP BY date, battle_name ORDER BY date ASC",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a donut chart of disposition of ships.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "disposition_of_ship",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize DONUT SELECT count(id) FROM ship GROUP BY disposition_of_ship",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now, how many ships were lost in each battle?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "name",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "lost_in_battle",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT count(lost_in_battle) FROM battle, ship WHERE battle.id = ship.lost_in_battle GROUP BY battle.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Display a line graph showing the number of deaths caused by each ship over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "caused_by_ship_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT count(caused_by_ship_id), date FROM death, ship WHERE death.caused_by_ship_id = ship.id GROUP BY date, ship.name",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "For the last step, show a scatter plot of the tonnage against the number of deaths caused by each ship.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "tonnage",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "caused_by_ship_id",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "name",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT tonnage, count(caused_by_ship_id) FROM ship, death WHERE death.caused_by_ship_id = ship.id GROUP BY ship.name, ship.tonnage",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by result.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "ordinal",
                        "title": "Battle Result"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Battles"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT result, count(*) FROM battle GROUP BY result",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Now show a line chart of number of ships lost in each battle, sorted by date.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal",
                        "title": "Battle Date"
                    },
                    "y": {
                        "field": "lost_in_battle",
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Ships Lost"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, count(lost_in_battle) FROM ship GROUP BY date ORDER BY date",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Let's see a pie chart of the types of ships lost in battles.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship_type",
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Ships"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal",
                        "title": "Ship Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM ship WHERE lost_in_battle=1 GROUP BY ship_type",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Lastly, show a scatter chart of the number of killed and injured in each battle.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "killed",
                        "type": "quantitative",
                        "title": "Number of Killed"
                    },
                    "y": {
                        "field": "injured",
                        "type": "quantitative",
                        "title": "Number of Injured"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT killed, injured FROM death",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles won by each Bulgarian commander.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "bulgarian_commander",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "result",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT bulgarian_commander, COUNT(result) FROM battle WHERE result = 'won' GROUP BY bulgarian_commander",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Can you show the number of deaths caused by ship in each battle?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "caused_by_ship_id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT battle.name, COUNT(death.caused_by_ship_id) FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.name",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What about injuries caused by ship in each of these battles?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "name",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "injured",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT battle.name, COUNT(death.injured) FROM battle JOIN death ON battle.id = death.caused_by_ship_id GROUP BY battle.name",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a pie chart of the different ship types that were lost in battles.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "ship_type",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, COUNT(*) FROM ship WHERE lost_in_battle = TRUE GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of ship lost in battles grouped by their ship types.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "ship_type",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT ship_type, count(id) FROM ship WHERE lost_in_battle = true GROUP BY ship_type",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "What about those lost in a specific location?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "location",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT location, count(id) FROM ship WHERE lost_in_battle = true GROUP BY location",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Let's see the death caused by these lost ships. Show me a scatter chart of killed and injured.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "killed",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "injured",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "caused_by_ship_id",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTERPLOT SELECT killed, injured, caused_by_ship_id FROM death",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Can we see a line chart of death over time by battles?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "id",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, count(id) FROM battle_death GROUP BY date",
            "Context Dependency Type": "Independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of battles grouped by their results.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "result",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT result, count(*) FROM battle GROUP BY result",
            "Context Denpendency Type": "independent",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show the number of deaths caused by each ship type in a pie chart.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "ship_type",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT ship_type, count(*) FROM death JOIN ship ON death.caused_by_ship_id = ship.id GROUP BY ship_type",
            "Context Dependency Type": "coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Plot the total tonnage of ships lost in battles over time.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "date",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "sum",
                        "field": "tonnage",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT date, sum(tonnage) FROM battle JOIN ship ON battle.id = ship.lost_in_battle GROUP BY date",
            "Context Dependency Type": "coreference",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        },
        {
            "Natural Language Query": "Show a scatter chart of the number of injured and killed in each battle.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "killed",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "injured",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT killed, injured FROM death",
            "Context Dependency Type": "ellipsis",
            "Database Schema": " | battle_death | battle : id , name , date , bulgarian_commander , latin_commander , result | ship : lost_in_battle , id , name , tonnage , ship_type , location , disposition_of_ship | death : caused_by_ship_id , id , note , killed , injured"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students by their major",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, count(stuid) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter plot of the pets' ages and their weights",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How many students own each type of pet? Show this in a bar chart.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT pettype, count(stuid) FROM has_pet, pets WHERE has_pet.petid = pets.petid GROUP BY pettype",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Display a line chart showing the average age of students by their major",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT major, average(age) FROM student GROUP BY major",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of pets grouped by their type.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT pettype, count(*) FROM pets GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter plot of pet age against weight, color coded by pettype.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight, pettype FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How about a pie chart of the distribution of student majors who have pets?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "major",
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT s.major, count(*) FROM student s INNER JOIN has_pet hp ON s.stuid = hp.stuid GROUP BY s.major",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Let's see a bar chart of the number of pets each age group (0-2, 3-5, 6-8, 9-11, 12+) of students own.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age_group",
                        "type": "ordinal",
                        "sort": "ascending"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT CASE WHEN age < 3 THEN '0-2' WHEN age < 6 THEN '3-5' WHEN age < 9 THEN '6-8' WHEN age < 12 THEN '9-11' ELSE '12+' END AS age_group, count(*) FROM student s INNER JOIN has_pet hp ON s.stuid = hp.stuid GROUP BY age_group",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students grouped by their major",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT Major, count(*) FROM student GROUP BY Major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What's the breakdown by gender for each major?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "sex",
                        "type": "nominal"
                    },
                    "color": {
                        "field": "sex",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT Major, Sex, count(*) FROM student GROUP BY Major, Sex",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter chart representing student's age and their pet's weight",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "student.age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "pets.weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student.Age, pets.Weight FROM student JOIN has_pet ON student.StuID = has_pet.StuID JOIN pets ON has_pet.PetID = pets.PetID",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What types of pet are there?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT pettype, count(*) FROM pets GROUP BY pettype",
            "Context Dependency Type": "Elipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students per major",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(stuid) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How does age distribution change among different majors?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, count(stuid), major FROM student GROUP BY major, age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a pie chart of the variety of pets students have",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "petid",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pettype, count(petid) FROM has_pet JOIN pets ON has_pet.petid=pets.petid GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What's the scatter plot of pet weight and their age?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "pet_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal",
                        "sort": "-y"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of pets owned by students, grouped by pet type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "color": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pettype, count(*) FROM pets INNER JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What about the distribution of pet ages?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT pet_age, count(*) FROM pets GROUP BY pet_age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter plot of pet weight against age.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What about grouping those students by their sex?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sex",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sex, major, count(*) FROM student GROUP BY sex, major",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Can you show a pie chart illustrating the distribution of the pet types among students?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "pettype",
                        "type": "ordinal"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize ARC SELECT pettype, count(*) FROM student, has_pet, pets WHERE student.stuid = has_pet.stuid AND has_pet.petid = pets.petid GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Display a scatter plot of pet_age and weight.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, COUNT(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of pets that each major's students have.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "x": {
                        "aggregate": "count",
                        "field": "petid",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Pets"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, COUNT(petid) FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY major",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What about a scatter chart that represents the age and weight of those pets?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative",
                        "axis": {
                            "title": "Pet Age"
                        }
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative",
                        "axis": {
                            "title": "Weight"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets JOIN has_pet ON pets.petid = has_pet.petid",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Compare the age distribution of these pets in a line chart.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative",
                        "axis": {
                            "title": "Age"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "petid",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Pets"
                        }
                    }
                }
            },
            "VQL": "Visualize LINE SELECT pet_age, COUNT(petid) FROM pets GROUP BY pet_age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a pie chart of the distribution of students by gender.",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "sex",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "sex",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT sex, count(*) FROM student GROUP BY sex",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Tell me how does the age distribution of students look like?",
            "Vega-Lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative",
                        "bin": true
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "*",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT age, count(*) FROM student GROUP BY age",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What is the average weight of each type of pet that students have?",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative",
                        "aggregate": "average"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pettype, AVG(weight) FROM pets INNER JOIN has_pet ON pets.petid = has_pet.petid GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of student majors",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT count(major), major FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "And for each major, what is the gender distribution?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "sex",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT count(sex), major, sex FROM student GROUP BY major, sex",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter chart of pet age and weight",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Then compare the average weight of each pet type using a Bar chart",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                },
                "transform": [
                    {
                        "aggregate": [
                            {
                                "op": "mean",
                                "field": "weight",
                                "as": "average_weight"
                            }
                        ],
                        "groupby": [
                            "pettype"
                        ]
                    }
                ]
            },
            "VQL": "Visualize BAR SELECT AVG(weight), pettype FROM pets GROUP BY pettype",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How many male and female students are there in each major?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "sex",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, sex, count(*) FROM student GROUP BY major, sex",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show me a scatter plot of pet's age vs weight.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Can you show this by pet type?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize POINT SELECT pet_age, weight, pettype FROM pets",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of student majors.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "major",
                        "type": "nominal",
                        "stack": true
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How many students are there in each major?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(stuid) FROM student GROUP BY major",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "In the earlier mentioned majors, show a bar chart of the number of pets each student has.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "stuid",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "petid",
                        "type": "quantitative",
                        "title": "Number of Pets"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT stuid, count(petid), major FROM student INNER JOIN has_pet USING (stuid) GROUP BY stuid",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show me a scatter plot of the pet ages and weights.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "major",
                        "type": "ordinal",
                        "title": "Major"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, COUNT(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Now show a bar chart of the number of students who own a pet by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "y": {
                        "field": "major",
                        "type": "ordinal",
                        "title": "Major"
                    },
                    "x": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "title": "Number of Pet Owners"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT student.major, COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.major",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How about a pie chart of the types of pets owned by students in the Computer Science major?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "pettype",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal",
                        "title": "Pet Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pets.pettype, COUNT(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.major='Computer Science' GROUP BY pets.pettype",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Finally, show a scatter plot representing the weight and age of pets owned by students in the Computer Science major.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "weight",
                        "type": "quantitative",
                        "title": "Pet Weight"
                    },
                    "y": {
                        "field": "pet_age",
                        "type": "quantitative",
                        "title": "Pet Age"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pets.weight, pets.pet_age FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid WHERE student.major='Computer Science'",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students grouped by their major",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, Count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter chart comparing student's age and number of pets",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT student.age, Count(has_pet.petid) FROM student JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY student.age",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a bar chart of the number of pets grouped by pet type",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT pettype, Count(*) FROM pets GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Is there a relationship between pet's age and weight",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal",
                        "title": "Major"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "stuid",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, COUNT() FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What about the number of students by their sex?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sex",
                        "type": "nominal",
                        "title": "Sex"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "sex",
                        "type": "quantitative",
                        "title": "Number of Students"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sex, COUNT() FROM student GROUP BY sex",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Display a pie chart showing the distribution of pets by type.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "pettype",
                        "type": "quantitative",
                        "title": "Number of Pets"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal",
                        "title": "Pet Type"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pettype, COUNT() FROM pets GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Can we see the same distribution, but this time with respect to pet age?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "pet_age",
                        "type": "quantitative",
                        "title": "Number of Pets"
                    },
                    "color": {
                        "field": "pet_age",
                        "type": "nominal",
                        "title": "Pet Age"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pet_age, COUNT() FROM pets GROUP BY pet_age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the number of students by major",
            "Vega-Lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a bar chart of the average age of students grouped by sex",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sex",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "average_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sex, AVG(age) as average_age FROM student GROUP BY sex",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What about students who have pets?",
            "Vega-Lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sex",
                        "type": "nominal"
                    },
                    "y": {
                        "field": "average_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sex, AVG(student.age) as average_age FROM student INNER JOIN has_pet ON student.stuid = has_pet.stuid GROUP BY sex",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter plot of pet age and weight",
            "Vega-Lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal",
                        "axis": {
                            "title": "Major"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Students"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How about the distribution of students' age?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "age",
                        "type": "ordinal",
                        "axis": {
                            "title": "Age"
                        }
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative",
                        "axis": {
                            "title": "Number of Students"
                        }
                    }
                }
            },
            "VQL": "Visualize BAR SELECT age, count(*) FROM student GROUP BY age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of students who own different types of pets",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "pettype",
                        "type": "quantitative",
                        "stack": true
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal",
                        "legend": {
                            "title": "Pet Type"
                        }
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pettype, count(*) FROM has_pet JOIN pets ON has_pet.petid = pets.petid GROUP BY pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter chart of pet age versus weight.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative",
                        "axis": {
                            "title": "Pet Age"
                        }
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative",
                        "axis": {
                            "title": "Pet Weight"
                        }
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Now, show the average age of students in each major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "age",
                        "aggregate": "average",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, avg(age) FROM student GROUP BY major",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a pie chart of the number of students owning different types of pets.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "pettype",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pets.pettype, count(*) FROM student JOIN has_pet ON student.stuid = has_pet.stuid JOIN pets ON has_pet.petid = pets.petid GROUP BY pets.pettype",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show a scatter plot of pet weight versus pet age.",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a pie chart of the distribution of student major.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "aggregate": "count",
                        "field": "major",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal",
                        "legend": null
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "What is the distribution of pet type among students?",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "field": "petid",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT pettype, count(*) FROM has_pet INNER JOIN pets ON has_pet.petid=pets.petid GROUP BY pettype",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Show the average pet age per pet type.",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "pet_age",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT pettype, AVG(pet_age) FROM pets GROUP BY pettype",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How does the weight distribution look like for each pet type?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pettype",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "distribution",
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pettype, weight AS distribution FROM pets GROUP BY pettype",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show me a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "students",
                        "type": "quantitative",
                        "aggregate": "count"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Now, tell me their distribution by sex.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "sex",
                        "type": "ordinal"
                    },
                    "y": {
                        "field": "students",
                        "type": "quantitative",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT sex, count(*) FROM student GROUP BY sex, major",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Can we see a pie chart of the type of pets that these students have?",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "pettype",
                        "type": "nominal",
                        "aggregate": "count"
                    },
                    "color": {
                        "field": "pettype",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT pettype, count(*) FROM pets JOIN has_pet ON pets.petid = has_pet.petid JOIN student ON has_pet.stuid = student.stuid GROUP BY pettype",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How about a scatter chart showing the pet's age against their weight?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ],
    [
        {
            "Natural Language Query": "Show a bar chart of the number of students grouped by their major.",
            "Vega-lite Code": {
                "mark": "bar",
                "encoding": {
                    "x": {
                        "field": "major",
                        "type": "nominal"
                    },
                    "y": {
                        "aggregate": "count",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize BAR SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Now show a pie chart of the distribution of students by major.",
            "Vega-lite Code": {
                "mark": "arc",
                "encoding": {
                    "theta": {
                        "field": "count",
                        "type": "quantitative"
                    },
                    "color": {
                        "field": "major",
                        "type": "nominal"
                    }
                }
            },
            "VQL": "Visualize PIE SELECT major, count(*) FROM student GROUP BY major",
            "Context Dependency Type": "Coreference",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "How about a scatter plot showing the relation between pet age and weight?",
            "Vega-lite Code": {
                "mark": "point",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "quantitative"
                    },
                    "y": {
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize SCATTER SELECT pet_age, weight FROM pets",
            "Context Dependency Type": "Independent",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        },
        {
            "Natural Language Query": "Can we look at the line chart of average pet weight by pet age?",
            "Vega-lite Code": {
                "mark": "line",
                "encoding": {
                    "x": {
                        "field": "pet_age",
                        "type": "temporal"
                    },
                    "y": {
                        "aggregate": "average",
                        "field": "weight",
                        "type": "quantitative"
                    }
                }
            },
            "VQL": "Visualize LINE SELECT pet_age, AVG(weight) FROM pets GROUP BY pet_age",
            "Context Dependency Type": "Ellipsis",
            "Database Schema": " | pets_1 | student : stuid , lname , fname , age , sex , major , advisor , city_code | has_pet : stuid , petid | pets : petid , pettype , pet_age , weight"
        }
    ]
]